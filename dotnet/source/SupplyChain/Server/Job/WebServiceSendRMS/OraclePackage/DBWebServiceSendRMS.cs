/*
  File           : Messagesend.cs

  Description    : Wrapper class for Oracle package MESSAGESEND.
                   This code was generated by the PackageGenerator, do not edit.

  Generated with Commandline: MessageSend c:\temp\DBWebServiceSendRMS.cs Imi.SupplyChain.Server.Job.WebServiceSendRMS.PLSQLInterface /conn "user id = rmuser; password = rmuser; data source = WHTRUNK" 

MESSAGESEND.READ cannot be generated since the following
parameter types are not currently supported:
    FORCE PL/SQL BOOLEAN

*/
#define ODP_NET
using System;
using System.Data;
#if ODP_NET
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
#else
using System.Data.OracleClient;
#endif
using Imi.Framework.Job.Data;

namespace Imi.SupplyChain.Server.Job.WebServiceSendRMS.PLSQLInterface
{
  public class Messagesend
  {
    private IDbConnectionProvider connectionProvider;

    public string _Debug()
    {
      return  "Package        : MESSAGESEND\r\n" +
              "Generated on   : 2006-10-18 14:16:43\r\n" +
              "Generated by   : IMINT1\\togr@IMIPC1092\r\n" +
              "Generated in   : C:\\Project\\views\\togr_trunk_ss\\dotnet\\source\\CodeGenerators\\PackageGenerator\\bin\\Debug\r\n";
    }

    public Messagesend(IDbConnectionProvider connectionProvider)
    {
      this.connectionProvider = connectionProvider;
    }

    private IDbCommand sp_GetMessagesCur;
    private IDbCommand sp_Modify;
    private IDbCommand sp_ModifyAllAddress;
    private IDbCommand sp_ModifyError;
    private IDbCommand sp_ModifySend;
    private IDbCommand sp_ModifyStatus;
    private IDbCommand sp_New;
    private IDbCommand sp_NewMessageOnChannels;
    private IDbCommand sp_Remove;
    private IDbCommand sp_ResetStatus;
    private IDbCommand sp_ResetStatusMulti;
    private IDbCommand currentCommand;
    private object syncLock = new object();

    // ----------------------------------------------------------------------------

    private void CreateSP_GetMessagesCur()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_GetMessagesCur = connectionProvider.GetConnection().CreateCommand();
      sp_GetMessagesCur.CommandText = "MESSAGESEND.GET_MESSAGES_CUR";
      sp_GetMessagesCur.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_GetMessagesCur).BindByName = true;
#endif

      p = sp_GetMessagesCur.CreateParameter();
      p.ParameterName = "CHANNEL_TYPE_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_GetMessagesCur.Parameters.Add( p );

      oP = sp_GetMessagesCur.CreateParameter() as OracleParameter;
      oP.ParameterName = "MSG_SEND_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_GetMessagesCur.Parameters.Add( oP );
    }

    private void CreateSP_Modify()
    {
      IDbDataParameter p;

      sp_Modify = connectionProvider.GetConnection().CreateCommand();
      sp_Modify.CommandText = "MESSAGESEND.MODIFY";
      sp_Modify.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Modify).BindByName = true;
#endif

      p = sp_Modify.CreateParameter();
      p.ParameterName = "MSG_SEND_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "MSG_OUT_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "COMM_PARTNER_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "SNDERRCODE_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "MSG_SEND_STAT_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "NOSNDS_I";
      p.DbType = DbType.Decimal;
      p.Precision = 5;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "CHANNEL_TYPE_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "URL_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "APILOGIN_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "MSG_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "CHANNEL_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Modify.Parameters.Add( p );

      p = sp_Modify.CreateParameter();
      p.ParameterName = "ALMID_O";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Output;
      sp_Modify.Parameters.Add( p );
    }

    private void CreateSP_ModifyAllAddress()
    {
      IDbDataParameter p;

      sp_ModifyAllAddress = connectionProvider.GetConnection().CreateCommand();
      sp_ModifyAllAddress.CommandText = "MESSAGESEND.MODIFY_ALL_ADDRESS";
      sp_ModifyAllAddress.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_ModifyAllAddress).BindByName = true;
#endif

      p = sp_ModifyAllAddress.CreateParameter();
      p.ParameterName = "CHANNEL_TYPE_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyAllAddress.Parameters.Add( p );

      p = sp_ModifyAllAddress.CreateParameter();
      p.ParameterName = "URL_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyAllAddress.Parameters.Add( p );

      p = sp_ModifyAllAddress.CreateParameter();
      p.ParameterName = "APILOGIN_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyAllAddress.Parameters.Add( p );

      p = sp_ModifyAllAddress.CreateParameter();
      p.ParameterName = "ALMID_O";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Output;
      sp_ModifyAllAddress.Parameters.Add( p );
    }

    private void CreateSP_ModifyError()
    {
      IDbDataParameter p;

      sp_ModifyError = connectionProvider.GetConnection().CreateCommand();
      sp_ModifyError.CommandText = "MESSAGESEND.MODIFY_ERROR";
      sp_ModifyError.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_ModifyError).BindByName = true;
#endif

      p = sp_ModifyError.CreateParameter();
      p.ParameterName = "MSG_SEND_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyError.Parameters.Add( p );

      p = sp_ModifyError.CreateParameter();
      p.ParameterName = "FIRSTSNDDTM_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_ModifyError.Parameters.Add( p );

      p = sp_ModifyError.CreateParameter();
      p.ParameterName = "SNDERRCODE_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyError.Parameters.Add( p );

      p = sp_ModifyError.CreateParameter();
      p.ParameterName = "SNDERRMSG_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyError.Parameters.Add( p );

      p = sp_ModifyError.CreateParameter();
      p.ParameterName = "ALMID_O";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Output;
      sp_ModifyError.Parameters.Add( p );
    }

    private void CreateSP_ModifySend()
    {
      IDbDataParameter p;

      sp_ModifySend = connectionProvider.GetConnection().CreateCommand();
      sp_ModifySend.CommandText = "MESSAGESEND.MODIFY_SEND";
      sp_ModifySend.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_ModifySend).BindByName = true;
#endif

      p = sp_ModifySend.CreateParameter();
      p.ParameterName = "MSG_SEND_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifySend.Parameters.Add( p );

      p = sp_ModifySend.CreateParameter();
      p.ParameterName = "FIRSTSNDDTM_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_ModifySend.Parameters.Add( p );

      p = sp_ModifySend.CreateParameter();
      p.ParameterName = "ALMID_O";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Output;
      sp_ModifySend.Parameters.Add( p );
    }

    private void CreateSP_ModifyStatus()
    {
      IDbDataParameter p;

      sp_ModifyStatus = connectionProvider.GetConnection().CreateCommand();
      sp_ModifyStatus.CommandText = "MESSAGESEND.MODIFY_STATUS";
      sp_ModifyStatus.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_ModifyStatus).BindByName = true;
#endif

      p = sp_ModifyStatus.CreateParameter();
      p.ParameterName = "MSG_SEND_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyStatus.Parameters.Add( p );

      p = sp_ModifyStatus.CreateParameter();
      p.ParameterName = "FIRSTSNDDTM_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_ModifyStatus.Parameters.Add( p );

      p = sp_ModifyStatus.CreateParameter();
      p.ParameterName = "SNDERRCODE_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyStatus.Parameters.Add( p );

      p = sp_ModifyStatus.CreateParameter();
      p.ParameterName = "SNDERRMSG_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyStatus.Parameters.Add( p );

      p = sp_ModifyStatus.CreateParameter();
      p.ParameterName = "MSG_SEND_STAT_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ModifyStatus.Parameters.Add( p );

      p = sp_ModifyStatus.CreateParameter();
      p.ParameterName = "ALMID_O";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Output;
      sp_ModifyStatus.Parameters.Add( p );
    }

    private void CreateSP_New()
    {
      IDbDataParameter p;

      sp_New = connectionProvider.GetConnection().CreateCommand();
      sp_New.CommandText = "MESSAGESEND.NEW";
      sp_New.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_New).BindByName = true;
#endif

      p = sp_New.CreateParameter();
      p.ParameterName = "MSG_OUT_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_New.Parameters.Add( p );

      p = sp_New.CreateParameter();
      p.ParameterName = "MSG_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_New.Parameters.Add( p );

      p = sp_New.CreateParameter();
      p.ParameterName = "COMM_PARTNER_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_New.Parameters.Add( p );

      p = sp_New.CreateParameter();
      p.ParameterName = "CHANNEL_TYPE_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_New.Parameters.Add( p );

      p = sp_New.CreateParameter();
      p.ParameterName = "CHANNEL_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_New.Parameters.Add( p );

      p = sp_New.CreateParameter();
      p.ParameterName = "URL_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_New.Parameters.Add( p );

      p = sp_New.CreateParameter();
      p.ParameterName = "APILOGIN_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_New.Parameters.Add( p );

      p = sp_New.CreateParameter();
      p.ParameterName = "ALMID_O";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Output;
      sp_New.Parameters.Add( p );
    }

    private void CreateSP_NewMessageOnChannels()
    {
      IDbDataParameter p;

      sp_NewMessageOnChannels = connectionProvider.GetConnection().CreateCommand();
      sp_NewMessageOnChannels.CommandText = "MESSAGESEND.NEW_MESSAGE_ON_CHANNELS";
      sp_NewMessageOnChannels.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_NewMessageOnChannels).BindByName = true;
#endif

      p = sp_NewMessageOnChannels.CreateParameter();
      p.ParameterName = "MSG_OUT_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_NewMessageOnChannels.Parameters.Add( p );

      p = sp_NewMessageOnChannels.CreateParameter();
      p.ParameterName = "MSG_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_NewMessageOnChannels.Parameters.Add( p );
    }

    private void CreateSP_Remove()
    {
      IDbDataParameter p;

      sp_Remove = connectionProvider.GetConnection().CreateCommand();
      sp_Remove.CommandText = "MESSAGESEND.REMOVE";
      sp_Remove.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Remove).BindByName = true;
#endif

      p = sp_Remove.CreateParameter();
      p.ParameterName = "MSG_SEND_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Remove.Parameters.Add( p );
    }

    private void CreateSP_ResetStatus()
    {
      IDbDataParameter p;

      sp_ResetStatus = connectionProvider.GetConnection().CreateCommand();
      sp_ResetStatus.CommandText = "MESSAGESEND.RESET_STATUS";
      sp_ResetStatus.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_ResetStatus).BindByName = true;
#endif

      p = sp_ResetStatus.CreateParameter();
      p.ParameterName = "MSG_SEND_ID_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_ResetStatus.Parameters.Add( p );

      p = sp_ResetStatus.CreateParameter();
      p.ParameterName = "ALMID_O";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Output;
      sp_ResetStatus.Parameters.Add( p );
    }

    private void CreateSP_ResetStatusMulti()
    {
      IDbDataParameter p;

      sp_ResetStatusMulti = connectionProvider.GetConnection().CreateCommand();
      sp_ResetStatusMulti.CommandText = "MESSAGESEND.RESET_STATUS_MULTI";
      sp_ResetStatusMulti.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_ResetStatusMulti).BindByName = true;
#endif

      p = sp_ResetStatusMulti.CreateParameter();
      p.ParameterName = "ALMID_O";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Output;
      sp_ResetStatusMulti.Parameters.Add( p );
    }

    // ----------------------------------------------------------------------------

    public void GetMessagesCur(string                  CHANNEL_TYPE_I, 
                               out IDataReader         MSG_SEND_CUR_O)
    {
      if ( sp_GetMessagesCur == null )
        CreateSP_GetMessagesCur();

      sp_GetMessagesCur.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_GetMessagesCur;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CHANNEL_TYPE_I) )
        (sp_GetMessagesCur.Parameters["CHANNEL_TYPE_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_GetMessagesCur.Parameters["CHANNEL_TYPE_I"] as IDbDataParameter).Value = CHANNEL_TYPE_I;

      // Execute stored procedure

      sp_GetMessagesCur.Prepare();
      sp_GetMessagesCur.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      MSG_SEND_CUR_O = (IDataReader)((sp_GetMessagesCur.Parameters["MSG_SEND_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      MSG_SEND_CUR_O = (IDataReader)(sp_GetMessagesCur.Parameters["MSG_SEND_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Modify(string                  MSG_SEND_ID_I, 
                       string                  MSG_OUT_ID_I, 
                       string                  COMM_PARTNER_ID_I, 
                       string                  SNDERRCODE_I, 
                       string                  MSG_SEND_STAT_I, 
                       Nullable<int>           NOSNDS_I, 
                       string                  CHANNEL_TYPE_I, 
                       string                  URL_I, 
                       string                  APILOGIN_I, 
                       string                  MSG_ID_I, 
                       string                  CHANNEL_ID_I, 
                       ref string              ALMID_O)
    {
      if ( sp_Modify == null )
        CreateSP_Modify();

      sp_Modify.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(MSG_SEND_ID_I) )
        (sp_Modify.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value     = DBNull.Value;
      else
        (sp_Modify.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value     = MSG_SEND_ID_I;

      if ( String.IsNullOrEmpty(MSG_OUT_ID_I) )
        (sp_Modify.Parameters["MSG_OUT_ID_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Modify.Parameters["MSG_OUT_ID_I"] as IDbDataParameter).Value      = MSG_OUT_ID_I;

      if ( String.IsNullOrEmpty(COMM_PARTNER_ID_I) )
        (sp_Modify.Parameters["COMM_PARTNER_ID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Modify.Parameters["COMM_PARTNER_ID_I"] as IDbDataParameter).Value = COMM_PARTNER_ID_I;

      if ( String.IsNullOrEmpty(SNDERRCODE_I) )
        (sp_Modify.Parameters["SNDERRCODE_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Modify.Parameters["SNDERRCODE_I"] as IDbDataParameter).Value      = SNDERRCODE_I;

      if ( String.IsNullOrEmpty(MSG_SEND_STAT_I) )
        (sp_Modify.Parameters["MSG_SEND_STAT_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Modify.Parameters["MSG_SEND_STAT_I"] as IDbDataParameter).Value   = MSG_SEND_STAT_I;

      if ( NOSNDS_I == null )
        (sp_Modify.Parameters["NOSNDS_I"] as IDbDataParameter).Value          = DBNull.Value;
      else
        (sp_Modify.Parameters["NOSNDS_I"] as IDbDataParameter).Value          = NOSNDS_I;

      if ( String.IsNullOrEmpty(CHANNEL_TYPE_I) )
        (sp_Modify.Parameters["CHANNEL_TYPE_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_Modify.Parameters["CHANNEL_TYPE_I"] as IDbDataParameter).Value    = CHANNEL_TYPE_I;

      if ( String.IsNullOrEmpty(URL_I) )
        (sp_Modify.Parameters["URL_I"] as IDbDataParameter).Value             = DBNull.Value;
      else
        (sp_Modify.Parameters["URL_I"] as IDbDataParameter).Value             = URL_I;

      if ( String.IsNullOrEmpty(APILOGIN_I) )
        (sp_Modify.Parameters["APILOGIN_I"] as IDbDataParameter).Value        = DBNull.Value;
      else
        (sp_Modify.Parameters["APILOGIN_I"] as IDbDataParameter).Value        = APILOGIN_I;

      if ( String.IsNullOrEmpty(MSG_ID_I) )
        (sp_Modify.Parameters["MSG_ID_I"] as IDbDataParameter).Value          = DBNull.Value;
      else
        (sp_Modify.Parameters["MSG_ID_I"] as IDbDataParameter).Value          = MSG_ID_I;

      if ( String.IsNullOrEmpty(CHANNEL_ID_I) )
        (sp_Modify.Parameters["CHANNEL_ID_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Modify.Parameters["CHANNEL_ID_I"] as IDbDataParameter).Value      = CHANNEL_ID_I;

      // Execute stored procedure

      sp_Modify.Prepare();
      sp_Modify.ExecuteNonQuery();

      // Set Out Parameters

      if ( (sp_Modify.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value )
        ALMID_O = null;
      else
        ALMID_O = (sp_Modify.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
    }

    public void ModifyAllAddress(string                  CHANNEL_TYPE_I, 
                                 string                  URL_I, 
                                 string                  APILOGIN_I, 
                                 ref string              ALMID_O)
    {
      if ( sp_ModifyAllAddress == null )
        CreateSP_ModifyAllAddress();

      sp_ModifyAllAddress.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(CHANNEL_TYPE_I) )
        (sp_ModifyAllAddress.Parameters["CHANNEL_TYPE_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_ModifyAllAddress.Parameters["CHANNEL_TYPE_I"] as IDbDataParameter).Value = CHANNEL_TYPE_I;

      if ( String.IsNullOrEmpty(URL_I) )
        (sp_ModifyAllAddress.Parameters["URL_I"] as IDbDataParameter).Value          = DBNull.Value;
      else
        (sp_ModifyAllAddress.Parameters["URL_I"] as IDbDataParameter).Value          = URL_I;

      if ( String.IsNullOrEmpty(APILOGIN_I) )
        (sp_ModifyAllAddress.Parameters["APILOGIN_I"] as IDbDataParameter).Value     = DBNull.Value;
      else
        (sp_ModifyAllAddress.Parameters["APILOGIN_I"] as IDbDataParameter).Value     = APILOGIN_I;

      // Execute stored procedure

      sp_ModifyAllAddress.Prepare();
      sp_ModifyAllAddress.ExecuteNonQuery();

      // Set Out Parameters

      if ( (sp_ModifyAllAddress.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value )
        ALMID_O = null;
      else
        ALMID_O = (sp_ModifyAllAddress.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
    }

    public void ModifyError(string                  MSG_SEND_ID_I, 
                            Nullable<DateTime>      FIRSTSNDDTM_I, 
                            string                  SNDERRCODE_I, 
                            string                  SNDERRMSG_I, 
                            ref string              ALMID_O)
    {
      if ( sp_ModifyError == null )
        CreateSP_ModifyError();

      sp_ModifyError.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(MSG_SEND_ID_I) )
        (sp_ModifyError.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_ModifyError.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value = MSG_SEND_ID_I;

      if ( FIRSTSNDDTM_I == null )
        (sp_ModifyError.Parameters["FIRSTSNDDTM_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_ModifyError.Parameters["FIRSTSNDDTM_I"] as IDbDataParameter).Value = FIRSTSNDDTM_I;

      if ( String.IsNullOrEmpty(SNDERRCODE_I) )
        (sp_ModifyError.Parameters["SNDERRCODE_I"] as IDbDataParameter).Value  = DBNull.Value;
      else
        (sp_ModifyError.Parameters["SNDERRCODE_I"] as IDbDataParameter).Value  = SNDERRCODE_I;

      if ( String.IsNullOrEmpty(SNDERRMSG_I) )
        (sp_ModifyError.Parameters["SNDERRMSG_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_ModifyError.Parameters["SNDERRMSG_I"] as IDbDataParameter).Value   = SNDERRMSG_I;

      // Execute stored procedure

      sp_ModifyError.Prepare();
      sp_ModifyError.ExecuteNonQuery();

      // Set Out Parameters

      if ( (sp_ModifyError.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value )
        ALMID_O = null;
      else
        ALMID_O = (sp_ModifyError.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
    }

    public void ModifySend(string                  MSG_SEND_ID_I, 
                           Nullable<DateTime>      FIRSTSNDDTM_I, 
                           ref string              ALMID_O)
    {
      if ( sp_ModifySend == null )
        CreateSP_ModifySend();

      sp_ModifySend.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(MSG_SEND_ID_I) )
        (sp_ModifySend.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_ModifySend.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value = MSG_SEND_ID_I;

      if ( FIRSTSNDDTM_I == null )
        (sp_ModifySend.Parameters["FIRSTSNDDTM_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_ModifySend.Parameters["FIRSTSNDDTM_I"] as IDbDataParameter).Value = FIRSTSNDDTM_I;

      // Execute stored procedure

      sp_ModifySend.Prepare();
      sp_ModifySend.ExecuteNonQuery();

      // Set Out Parameters

      if ( (sp_ModifySend.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value )
        ALMID_O = null;
      else
        ALMID_O = (sp_ModifySend.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
    }

    public void ModifyStatus(string                  MSG_SEND_ID_I, 
                             Nullable<DateTime>      FIRSTSNDDTM_I, 
                             string                  SNDERRCODE_I, 
                             string                  SNDERRMSG_I, 
                             string                  MSG_SEND_STAT_I, 
                             ref string              ALMID_O)
    {
      if ( sp_ModifyStatus == null )
        CreateSP_ModifyStatus();

      sp_ModifyStatus.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(MSG_SEND_ID_I) )
        (sp_ModifyStatus.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_ModifyStatus.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value   = MSG_SEND_ID_I;

      if ( FIRSTSNDDTM_I == null )
        (sp_ModifyStatus.Parameters["FIRSTSNDDTM_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_ModifyStatus.Parameters["FIRSTSNDDTM_I"] as IDbDataParameter).Value   = FIRSTSNDDTM_I;

      if ( String.IsNullOrEmpty(SNDERRCODE_I) )
        (sp_ModifyStatus.Parameters["SNDERRCODE_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_ModifyStatus.Parameters["SNDERRCODE_I"] as IDbDataParameter).Value    = SNDERRCODE_I;

      if ( String.IsNullOrEmpty(SNDERRMSG_I) )
        (sp_ModifyStatus.Parameters["SNDERRMSG_I"] as IDbDataParameter).Value     = DBNull.Value;
      else
        (sp_ModifyStatus.Parameters["SNDERRMSG_I"] as IDbDataParameter).Value     = SNDERRMSG_I;

      if ( String.IsNullOrEmpty(MSG_SEND_STAT_I) )
        (sp_ModifyStatus.Parameters["MSG_SEND_STAT_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_ModifyStatus.Parameters["MSG_SEND_STAT_I"] as IDbDataParameter).Value = MSG_SEND_STAT_I;

      // Execute stored procedure

      sp_ModifyStatus.Prepare();
      sp_ModifyStatus.ExecuteNonQuery();

      // Set Out Parameters

      if ( (sp_ModifyStatus.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value )
        ALMID_O = null;
      else
        ALMID_O = (sp_ModifyStatus.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
    }

    public void New(string                  MSG_OUT_ID_I, 
                    string                  MSG_ID_I, 
                    string                  COMM_PARTNER_ID_I, 
                    string                  CHANNEL_TYPE_I, 
                    string                  CHANNEL_ID_I, 
                    string                  URL_I, 
                    string                  APILOGIN_I, 
                    ref string              ALMID_O)
    {
      if ( sp_New == null )
        CreateSP_New();

      sp_New.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(MSG_OUT_ID_I) )
        (sp_New.Parameters["MSG_OUT_ID_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_New.Parameters["MSG_OUT_ID_I"] as IDbDataParameter).Value      = MSG_OUT_ID_I;

      if ( String.IsNullOrEmpty(MSG_ID_I) )
        (sp_New.Parameters["MSG_ID_I"] as IDbDataParameter).Value          = DBNull.Value;
      else
        (sp_New.Parameters["MSG_ID_I"] as IDbDataParameter).Value          = MSG_ID_I;

      if ( String.IsNullOrEmpty(COMM_PARTNER_ID_I) )
        (sp_New.Parameters["COMM_PARTNER_ID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_New.Parameters["COMM_PARTNER_ID_I"] as IDbDataParameter).Value = COMM_PARTNER_ID_I;

      if ( String.IsNullOrEmpty(CHANNEL_TYPE_I) )
        (sp_New.Parameters["CHANNEL_TYPE_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_New.Parameters["CHANNEL_TYPE_I"] as IDbDataParameter).Value    = CHANNEL_TYPE_I;

      if ( String.IsNullOrEmpty(CHANNEL_ID_I) )
        (sp_New.Parameters["CHANNEL_ID_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_New.Parameters["CHANNEL_ID_I"] as IDbDataParameter).Value      = CHANNEL_ID_I;

      if ( String.IsNullOrEmpty(URL_I) )
        (sp_New.Parameters["URL_I"] as IDbDataParameter).Value             = DBNull.Value;
      else
        (sp_New.Parameters["URL_I"] as IDbDataParameter).Value             = URL_I;

      if ( String.IsNullOrEmpty(APILOGIN_I) )
        (sp_New.Parameters["APILOGIN_I"] as IDbDataParameter).Value        = DBNull.Value;
      else
        (sp_New.Parameters["APILOGIN_I"] as IDbDataParameter).Value        = APILOGIN_I;

      // Execute stored procedure

      sp_New.Prepare();
      sp_New.ExecuteNonQuery();

      // Set Out Parameters

      if ( (sp_New.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value )
        ALMID_O = null;
      else
        ALMID_O = (sp_New.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
    }

    public void NewMessageOnChannels(string                  MSG_OUT_ID_I, 
                                     string                  MSG_ID_I)
    {
      if ( sp_NewMessageOnChannels == null )
        CreateSP_NewMessageOnChannels();

      sp_NewMessageOnChannels.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(MSG_OUT_ID_I) )
        (sp_NewMessageOnChannels.Parameters["MSG_OUT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_NewMessageOnChannels.Parameters["MSG_OUT_ID_I"] as IDbDataParameter).Value = MSG_OUT_ID_I;

      if ( String.IsNullOrEmpty(MSG_ID_I) )
        (sp_NewMessageOnChannels.Parameters["MSG_ID_I"] as IDbDataParameter).Value     = DBNull.Value;
      else
        (sp_NewMessageOnChannels.Parameters["MSG_ID_I"] as IDbDataParameter).Value     = MSG_ID_I;

      // Execute stored procedure

      sp_NewMessageOnChannels.Prepare();
      sp_NewMessageOnChannels.ExecuteNonQuery();

      // Set Out Parameters
    }

    public void Remove(string                  MSG_SEND_ID_I)
    {
      if ( sp_Remove == null )
        CreateSP_Remove();

      sp_Remove.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(MSG_SEND_ID_I) )
        (sp_Remove.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Remove.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value = MSG_SEND_ID_I;

      // Execute stored procedure

      sp_Remove.Prepare();
      sp_Remove.ExecuteNonQuery();

      // Set Out Parameters
    }

    public void ResetStatus(string                  MSG_SEND_ID_I, 
                            ref string              ALMID_O)
    {
      if ( sp_ResetStatus == null )
        CreateSP_ResetStatus();

      sp_ResetStatus.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(MSG_SEND_ID_I) )
        (sp_ResetStatus.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_ResetStatus.Parameters["MSG_SEND_ID_I"] as IDbDataParameter).Value = MSG_SEND_ID_I;

      // Execute stored procedure

      sp_ResetStatus.Prepare();
      sp_ResetStatus.ExecuteNonQuery();

      // Set Out Parameters

      if ( (sp_ResetStatus.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value )
        ALMID_O = null;
      else
        ALMID_O = (sp_ResetStatus.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
    }

    public void ResetStatusMulti(ref string              ALMID_O)
    {
      if ( sp_ResetStatusMulti == null )
        CreateSP_ResetStatusMulti();

      sp_ResetStatusMulti.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      // Execute stored procedure

      sp_ResetStatusMulti.Prepare();
      sp_ResetStatusMulti.ExecuteNonQuery();

      // Set Out Parameters

      if ( (sp_ResetStatusMulti.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value )
        ALMID_O = null;
      else
        ALMID_O = (sp_ResetStatusMulti.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
    }

    public void Cancel()
    {
      lock (syncLock)
      {
        if (currentCommand != null)
        {
          if (currentCommand.Connection != null)
          {
            if (currentCommand.Connection.State != ConnectionState.Closed)
            {
              currentCommand.Cancel();
            }
          }
        }
      }
    }
  }
}
