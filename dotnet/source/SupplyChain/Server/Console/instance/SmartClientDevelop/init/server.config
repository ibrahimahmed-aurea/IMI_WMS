<configuration>
	<configSections>
		<section name="securityConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings, Microsoft.Practices.EnterpriseLibrary.Security, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
		<section name="policyInjection" type="Microsoft.Practices.EnterpriseLibrary.PolicyInjection.Configuration.PolicyInjectionSettings, Microsoft.Practices.EnterpriseLibrary.PolicyInjection, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
		<section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
		<section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
		<section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
		<section name="imi.supplychain.server" type="Imi.Framework.Job.Configuration.ServerInstanceSection, Imi.Framework.Job" />
		<section name="imi.supplychain.identityModel" type="Imi.SupplyChain.Services.IdentityModel.Configuration.IdentityConfigurationSection, Imi.SupplyChain.Services.IdentityModel" />
		<section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
		<sectionGroup name="spring">
			<section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core" />
			<section name="parsers" type="Spring.Context.Support.NamespaceParsersSectionHandler, Spring.Core" />
		</sectionGroup>
		<section name="databaseSettings" type="System.Configuration.NameValueSectionHandler, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
	</configSections>
	<securityConfiguration configSource="authorization.config"/>
	<policyInjection configSource="policyInjection.config"/>
	<loggingConfiguration configSource="logging.config"/>
	<exceptionHandling configSource="exceptionHandling.config"/>
	<connectionStrings>
		<add name="OWUSER" connectionString="data source=WH80M;user id=owuser;password=owuser;pooling=true;enlist=false"
		  providerName="" />
		<add name="RMUSER" connectionString="data source=WH80M;user id=rmuser;password=rmuser;pooling=true;enlist=false"
		  providerName="" />
    <add name="OMUSER" connectionString="data source=WH80M;user id=omuser;password=omuser;pooling=true;enlist=false"
		  providerName="" />
	</connectionStrings>
	<spring>
		<parsers>
			<parser type="Spring.Data.Config.DatabaseNamespaceParser, Spring.Data" />
		</parsers>
		<context>
			<resource uri="assembly://Imi.SupplyChain.Settings.DataAccess.Config/Imi.SupplyChain.Settings.DataAccess.Config/AppConfig.xml" />
		</context>
	</spring>
	<databaseSettings>
		<add key="db.provider" value="SqlServer-2.0" />
		<!-- SQL Server -->
    
    <!--
    <add key="db.connectionstring" value="Data Source=localhost;Initial Catalog=SmartClientUserSettings;User Id=SmartClient;Password=IMI1234;" />
		<add key="hibernate.dialect" value="NHibernate.Dialect.MsSql2005Dialect" />
		<add key="hibernate.connection.driver_class" value="NHibernate.Driver.SqlClientDriver" />
    -->

    <!-- SQL Server Compact -->
		
		<add key="db.connectionstring" value="Data Source=..\..\instance\SmartClientDevelop\init\UserSettings.sdf;Max Database Size=4091;" />
		<add key="hibernate.dialect" value="NHibernate.Dialect.MsSqlCeDialect" />
		<add key="hibernate.connection.driver_class" value="Imi.SupplyChain.Settings.DataAccess.NHibernate.SqlServerCeDriver, Imi.SupplyChain.Settings.DataAccess.NHibernate" />
		

		<!-- Oracle -->
    <!--
		<add key="db.connectionstring" value="Data Source=VIVTEST;User ID=smartcli;Password=smartcli" />
		<add key="hibernate.dialect" value="NHibernate.Dialect.Oracle10gDialect" />
		<add key="hibernate.connection.driver_class" value="NHibernate.Driver.OracleDataClientDriver" />
		-->
		

	</databaseSettings>
	<system.diagnostics>
		<sources>
			<source name="System.ServiceModel.MessageLogging" switchValue="Off">
				<listeners>
					<add name="ServiceModelMessageLoggingListener" />
				</listeners>
			</source>
			<source name="System.ServiceModel" switchValue="Off" propagateActivity="false">
				<listeners>
					<add name="ServiceModelTraceListener" />
				</listeners>
			</source>
			<source name="Microsoft.IdentityModel" switchValue="Off" >
				<listeners>
					<add name="IdentityModelListener" />
				</listeners>
			</source>
		</sources>
		<sharedListeners>
			<add name="IdentityModelListener"
				 type="System.Diagnostics.TextWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
				 initializeData="c:\temp\wif.log"
				 traceOutputOptions="DateTime">
				<filter type="" />
			</add>
			<add name="ServiceModelMessageLoggingListener"
				 type="System.Diagnostics.TextWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
				 initializeData="c:\temp\wcf_message.log"
				 traceOutputOptions="DateTime">
				<filter type="" />
			</add>
			<add name="ServiceModelTraceListener"
				 type="System.Diagnostics.TextWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
				 initializeData="c:\temp\wcf.log"
				 traceOutputOptions="DateTime">
				<filter type="" />
			</add>
		</sharedListeners>
	</system.diagnostics>
	<system.serviceModel>
		<client>
			<endpoint address="http://ptv1.im.se:9080/csf-omswebservices/genericPort?service=GetGuiconfiguration&amp;host=pluto&amp;port=3039"
				binding="basicHttpBinding" bindingConfiguration="GetGuiconfigurationBinding"
				contract="GetGuiconfigurationServiceReal.GetGuiconfigurationService"
				name="GetGuiconfigurationService" />
			<endpoint address="http://ptv1.im.se:9080/csf-omswebservices/genericPort?service=GetMenu&amp;host=pluto&amp;port=3039"
				binding="basicHttpBinding" bindingConfiguration="GetMenuBinding"
				contract="GetMenuServiceReal.GetMenuService" name="GetMenuService" />
			<endpoint address="http://ptv1.im.se:9080/csf-omswebservices/genericPort?service=GetUsers&amp;host=pluto&amp;port=3039"
				binding="basicHttpBinding" bindingConfiguration="GetUsersBinding"
				contract="GetUsersServiceReal.GetUsersService" name="GetUsersService" />
			<endpoint address="http://ukimilinux01:8080/anywhereTEST1/services/otp"
				binding="basicHttpBinding" bindingConfiguration="GetOTPBinding"
				contract="OTPClient.OtpPortType"
				name="OtpPortTypeService" />
		</client>

		<extensions>
			<behaviorExtensions>
				<add name="applicationContextBehavior" type="Imi.Framework.Services.ApplicationContextExtension, Imi.Framework.Services" />
				<add name="federatedServiceHostConfiguration" type="Microsoft.IdentityModel.Configuration.ConfigureServiceHostBehaviorExtensionElement, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
			</behaviorExtensions>
		</extensions>
		<behaviors>
			<serviceBehaviors>
				<behavior name ="wsFedServiceBehavior">
					<dataContractSerializer maxItemsInObjectGraph="2000000000" />
					<serviceDebug includeExceptionDetailInFaults ="false"/>
					<serviceMetadata httpGetEnabled ="false"/>
					<federatedServiceHostConfiguration name="wsFedServiceConfig"/>
					<applicationContextBehavior />
				</behavior>
				<behavior name="netTcpServiceBehavior">
					<dataContractSerializer maxItemsInObjectGraph="2000000000" />
					<serviceMetadata httpGetEnabled="false" />
					<serviceDebug includeExceptionDetailInFaults="false" />
					<applicationContextBehavior />
				</behavior>
				<behavior name="ws2007ServiceBehavior">
					<serviceMetadata httpGetEnabled="false" />
					<serviceDebug includeExceptionDetailInFaults="false" />
					<serviceCredentials>
						<serviceCertificate findValue="CN=localhost" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectDistinguishedName"/>
					</serviceCredentials>
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<services>
			<!--
      <service behaviorConfiguration="netTcpServiceBehavior" name="template">
        <endpoint address="" binding="netTcpBinding" bindingConfiguration="netTcpBindingConfig" name="template" contract="template" />
        <host>
          <baseAddresses>
            <add baseAddress="net.tcp://localhost:18801/serviceName" />
          </baseAddresses>
        </host>
      </service>
      -->
			<service behaviorConfiguration="wsFedServiceBehavior" name="template">
				<endpoint address="" binding="ws2007FederationHttpBinding" bindingConfiguration="wsFedBindingConfig" name="template" contract="template" />
				<host>
					<baseAddresses>
						<add baseAddress="https://localhost:18801/serviceName" />
					</baseAddresses>
				</host>
			</service>
			<service name="Microsoft.IdentityModel.Protocols.WSTrust.WSTrustServiceContract" behaviorConfiguration="ws2007ServiceBehavior">
				<endpoint address="" binding="ws2007HttpBinding" contract="Microsoft.IdentityModel.Protocols.WSTrust.IWSTrust13SyncContract" bindingConfiguration="ws2007BindingConfig"/>
				<host>
					<baseAddresses>
						<add baseAddress="https://localhost:18801/System/IdentityService" />
					</baseAddresses>
				</host>
			</service>
		</services>
		<bindings>
			<ws2007FederationHttpBinding>
				<binding name="wsFedBindingConfig" sendTimeout="00:10:00" openTimeout="00:01:00" closeTimeout="00:01:00" receiveTimeout="00:10:00" maxBufferPoolSize="8388608" maxReceivedMessageSize="112000000">
					<readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
					<security mode="TransportWithMessageCredential">
						<message negotiateServiceCredential="true" establishSecurityContext="false"/>
					</security>
				</binding>
			</ws2007FederationHttpBinding>
			<ws2007HttpBinding>
				<binding name="ws2007BindingConfig">
					<security mode="TransportWithMessageCredential">
						<message establishSecurityContext="false" clientCredentialType="UserName" negotiateServiceCredential="true"/>
					</security>
				</binding>
			</ws2007HttpBinding>
			<basicHttpBinding>
				<binding maxReceivedMessageSize="2147483647" name="GetGuiconfigurationBinding" />
				<binding maxReceivedMessageSize="2147483647" name="GetMenuBinding"/>
				<binding maxReceivedMessageSize="2147483647" name="GetUsersBinding" />
				<binding maxReceivedMessageSize="2147483647" name="GetOTPBinding" />
			</basicHttpBinding>
			<!--
      <netTcpBinding>
        <binding name="netTcpBindingConfig" sendTimeout="00:10:00" openTimeout="00:01:00" closeTimeout="00:01:00" receiveTimeout="00:10:00" transferMode="Buffered" maxBufferPoolSize="8388608" maxBufferSize="112000000" maxReceivedMessageSize="112000000" maxConnections="100">
          <security mode="Transport">
            <transport clientCredentialType="Windows" protectionLevel="EncryptAndSign" />
          </security>
        </binding>
      </netTcpBinding>
      -->
		</bindings>
	</system.serviceModel>
	<imi.supplychain.identityModel issuerName="IMISTS" signingCertificateName="CN=imi-token-sign" encryptingCertificateName="CN=localhost" tokenLifetime="10:00:00">
		<yubicoSettings publicIdAttributeName="" publicIdLength="12" apiKey="" clientId="">
			<validationServers>
				<add name="api" url="https://api.yubico.com/wsapi/2.0/verify"/>
				<add name="api2" url="https://api2.yubico.com/wsapi/2.0/verify"/>
				<add name="api3" url="https://api3.yubico.com/wsapi/2.0/verify"/>
				<add name="api4" url="https://api4.yubico.com/wsapi/2.0/verify"/>
				<add name="api5" url="https://api5.yubico.com/wsapi/2.0/verify"/>
			</validationServers>
		</yubicoSettings>
		<directorySettings contextType=""/>
	</imi.supplychain.identityModel>
	<microsoft.identityModel configSource="wif.config"/>
	<appSettings>
		<add key="AdministratorMode" value="True" />
	</appSettings>
	<imi.supplychain.server systemId="SmartClientDevelop" name="Smart Client Application Server" database="NotUsed" port="9200" uri="IMIServer" autoStart="true">
		<Log logLevel="Information" fileName="..\..\instance\SmartClientDevelop\log\server.log" maxLogSize="51200" />
		<ScheduleList>
			<Schedule name="30SecRule" description="30 second rule">
				<RuleSet>
					<Rule second="0,30" minute="" hour="" dayOfWeek="" dayOfMonth="" month="" />
				</RuleSet>
			</Schedule>
		</ScheduleList>
		<JobTypeList>
			<JobType name="AutoServiceHost" type="Imi.SupplyChain.Server.Job.ServiceHost.AutoServiceHostJob, Imi.SupplyChain.Server.Job.ServiceHost" />
			<JobType name="DotNetJob" type="Imi.SupplyChain.Server.Job.DotNet.Job, Imi.SupplyChain.Server.Job.DotNet" />
		</JobTypeList>
		<JobList>
			<Job name="AutoServiceHost" enabled="true" scheduleName="" waitForEvent="false">
				<Log logLevel="Information" fileName="..\..\instance\SmartClientDevelop\log\serviceName.log" maxLogSize="512000" />
				<Implementation name="AutoServiceHost">
					<Parameter name="Filter" value="Imi.SupplyChain.*ServiceImplementation.dll, Imi.SupplyChain.Services.IdentityModel.dll" />
				</Implementation>
			</Job>
			<Job name="ConfigurationLoader" enabled="true" scheduleName="30SecRule" waitForEvent="true">
				<Log logLevel="Information" fileName="..\..\instance\SmartClientDevelop\log\ConfigurationLoader.log" maxLogSize="512000" />
				<Implementation name="DotNetJob">
					<Parameter name="type" value="Imi.SupplyChain.Services.Settings.ServiceAgent.ConfigurationLoader, Imi.SupplyChain.Services.Settings.ServiceAgent" />
				</Implementation>
			</Job>
		</JobList>
	</imi.supplychain.server>
</configuration>