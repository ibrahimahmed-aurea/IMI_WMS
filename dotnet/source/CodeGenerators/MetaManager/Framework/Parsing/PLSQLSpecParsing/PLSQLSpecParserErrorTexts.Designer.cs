//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cdc.Framework.Parsing.PLSQLSpecParsing {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class PLSQLSpecParserErrorTexts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PLSQLSpecParserErrorTexts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cdc.Framework.Parsing.PLSQLSpecParsing.PLSQLSpecParserErrorTexts", typeof(PLSQLSpecParserErrorTexts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are procedures/functions that was supposed to be parsed but failed. It was not possible to identify which procedures/functions that was missing..
        /// </summary>
        internal static string ProcedureCollectionMissingProcedures {
            get {
                return ResourceManager.GetString("ProcedureCollectionMissingProcedures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When counting the procedures/functions there were less than the number of parsed procedures/functions. This is most likely because of error in regular expression that counts the number of procedures/functions..
        /// </summary>
        internal static string ProcedureCollectionTooManyProcedures {
            get {
                return ResourceManager.GetString("ProcedureCollectionTooManyProcedures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The datatype that is the return datatype of the function is not supported. The datatype that was parsed had the value &quot;{0}&quot;..
        /// </summary>
        internal static string ProcedureFunctionReturnDataTypeError {
            get {
                return ResourceManager.GetString("ProcedureFunctionReturnDataTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return datatype of the function is unknown..
        /// </summary>
        internal static string ProcedureFunctionReturnTypeUnknown {
            get {
                return ResourceManager.GetString("ProcedureFunctionReturnTypeUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more procedures/functions has an empty name. This is an error when parsing..
        /// </summary>
        internal static string ProcedureNameError {
            get {
                return ResourceManager.GetString("ProcedureNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This procedure should have been parsed but wasn&apos;t. It was found when counting the procedures/functions..
        /// </summary>
        internal static string ProcedureNotParsedError {
            get {
                return ResourceManager.GetString("ProcedureNotParsedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The datatype of a parameter is not parsable. The name of the parameter with the unparsable type is &quot;{0}&quot;..
        /// </summary>
        internal static string ProcedureParameterDataTypeNotParsable {
            get {
                return ResourceManager.GetString("ProcedureParameterDataTypeNotParsable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of a parameter is empty. Problems when parsing..
        /// </summary>
        internal static string ProcedureParameterNameEmpty {
            get {
                return ResourceManager.GetString("ProcedureParameterNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were too few fetched parameters compared to how many that was counted. The first encountered parameter that was not fetched is &quot;{0}&quot; (there could be more)..
        /// </summary>
        internal static string ProcedureParameterTooFewFetchedError {
            get {
                return ResourceManager.GetString("ProcedureParameterTooFewFetchedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were too few fetched parameters compared to how many that was counted. Couldn&apos;t find which parameter that is missing. This is due to errors when parsing..
        /// </summary>
        internal static string ProcedureParameterTooFewFetchedGenericError {
            get {
                return ResourceManager.GetString("ProcedureParameterTooFewFetchedGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were too many fetched parameters compared to how many that was counted. This is most likely because of errors in regular expression that counts the number of parameters..
        /// </summary>
        internal static string ProcedureParameterTooManyFetchedGenericError {
            get {
                return ResourceManager.GetString("ProcedureParameterTooManyFetchedGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter is of unknown type which can&apos;t be parsed. The name of the parameter is &quot;{0}&quot;..
        /// </summary>
        internal static string ProcedureParameterUnknownType {
            get {
                return ResourceManager.GetString("ProcedureParameterUnknownType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of the procedure couldn&apos;t be parsed. Should have been &quot;procedure&quot; or &quot;function&quot; but was &quot;{0}&quot;..
        /// </summary>
        internal static string ProcedureTypeError {
            get {
                return ResourceManager.GetString("ProcedureTypeError", resourceCulture);
            }
        }
    }
}
