<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
   xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
   xmlns:navigation="http://schemas.actiprosoftware.com/winfx/xaml/navigation"
   xmlns:controls="clr-namespace:Imi.Framework.Wpf.Controls;assembly=Imi.Framework.Wpf.Controls"
   xmlns:resources="clr-namespace:Imi.SupplyChain.UX.Shell">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Imi.SupplyChain.UX;component/Resources/generic.xaml"/>
    <ResourceDictionary Source="DrillDownMenu.Resources.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <Geometry x:Key="ExpansionGlyph">M 1,4.5  L 4.5,1  L 8,4.5</Geometry>
  <shared:IsTypeConverter x:Key="IsTypeConverter" />
  <shared:ConditionalConverter x:Key="ConditionalConverter" />

  <Style x:Key="ExpanderAboveHeaderStyle" TargetType="ToggleButton">
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.NavigationPaneHeaderForegroundNormalBrushKey}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border x:Name="border" BorderThickness="0,1,0,0" Background="{DynamicResource {x:Static themes:AssetResourceKeys.WorkspaceMediumBackgroundNormalBrushKey}}" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.ContainerBorderNormalBrushKey}}" SnapsToDevicePixels="True">
            <DockPanel LastChildFill="True">
              <Path x:Name="glyph" DockPanel.Dock="Right" Margin="0,0,7,0" VerticalAlignment="Center"
                  RenderTransformOrigin="0.5,0.5" Stroke="{TemplateBinding Foreground}"
                  StrokeThickness="2" SnapsToDevicePixels="false" Data="{StaticResource ExpansionGlyph}">
                <Path.RenderTransform>
                  <RotateTransform Angle="180"/>
                </Path.RenderTransform>
              </Path>
              <ContentPresenter Margin="7,3,7,3" />
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
              <Setter TargetName="glyph" Property="RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="0" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.NavigationPaneHeaderBackgroundHoverBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="NavigationBarExpanderStyle" TargetType="Expander">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Expander">
          <DockPanel LastChildFill="True">
            <ToggleButton x:Name="header" DockPanel.Dock="Top"
							Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"
							ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
							IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}"
							Style="{StaticResource ExpanderAboveHeaderStyle}" />

            <shared:AnimatedExpanderDecorator x:Name="content"
							ExpandDirection="{TemplateBinding ExpandDirection}"
							CollapsedVisibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shared:AnimatedExpanderDecorator.CollapsedVisibility)}"
							CollapseDuration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shared:AnimatedExpanderDecorator.CollapseDuration)}"
							ExpandDuration="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shared:AnimatedExpanderDecorator.ExpandDuration)}"
							>
              <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
            </shared:AnimatedExpanderDecorator>
          </DockPanel>

          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter TargetName="content" Property="IsExpanded" Value="True" />
            </Trigger>
            <DataTrigger
								Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource IsTypeConverter}, ConverterParameter={x:Type shared:AnimatedExpander}}"
								Value="True">
              <Setter TargetName="content" Property="CollapsedVisibility">
                <Setter.Value>
                  <MultiBinding Converter="{StaticResource ConditionalConverter}">
                    <Binding RelativeSource="{x:Static RelativeSource.TemplatedParent}"
												Path="shared:AnimatedExpander.CanMeasureCollapsedContent" />
                    <Binding Source="{x:Static Visibility.Hidden}" />
                    <Binding Source="{x:Static Visibility.Collapsed}" />
                  </MultiBinding>
                </Setter.Value>
              </Setter>
              <Setter Property="shared:AnimatedExpander.HeaderPadding" Value="0" />
              <Setter TargetName="header" Property="Padding"
									Value="{Binding Path=shared:AnimatedExpander.HeaderPadding, RelativeSource={RelativeSource TemplatedParent}}" />
              <!-- 5/25/2010 - Added support for HeaderContextMenu (http://www.actiprosoftware.com/Support/Forums/ViewForumTopic.aspx?ForumTopicID=4926) -->
              <Setter TargetName="header" Property="ContextMenu"
									Value="{Binding Path=shared:AnimatedExpander.HeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ExpanderHeaderFocusVisual -->
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2" SnapsToDevicePixels="true" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Grid x:Name="x" ContextMenu="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:DrillDownMenu}},Path=ItemsContextMenu}">
            <Border FocusVisualStyle="{x:Null}" CornerRadius="4,4,4,4" Margin="0,0,0,0" Background="{TemplateBinding Background}">
              <ContentPresenter Height="20"/>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="ListBoxTemplate" TargetType="{x:Type ListBox}">
    <Border SnapsToDevicePixels="True" BorderThickness="0,0,0,0" Padding="0,0,0,0" Background="{x:Null}">
      <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}" HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Left">
        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
      </ScrollViewer>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="ActionsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border FocusVisualStyle="{x:Null}" CornerRadius="4,4,4,4" Margin="1,0,1,0" Background="{TemplateBinding Background}">
            <ContentPresenter Height="20"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="actionsDrillDownMenuStyle" TargetType="{x:Type controls:DrillDownMenu}">
    <Setter Property="ItemContainerStyle" Value="{StaticResource ActionsListBoxItemStyle}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}"/>
    <Setter Property="ItemContainerStyle" Value="{StaticResource ActionListBoxItemStyle}"/>
    <Setter Property="ItemsContainerTemplate" Value="{StaticResource ListBoxTemplate}"/>
    <Setter Property="ItemTemplateSelector" Value="{StaticResource menuItemTemplateSelector}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:DrillDownMenu}">
          <Border SnapsToDevicePixels="True" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0,0,0,0" Padding="0,0,0,0">
            <Grid>
              <shared:TransitionPresenter x:Name="PART_TransitionPresenter" Grid.Row="1" Grid.RowSpan="1" Transition="{StaticResource SlideTransition}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="favoritesDrillDownMenuStyle" TargetType="{x:Type controls:DrillDownMenu}">
    <Setter Property="ItemsContainerTemplate" Value="{StaticResource ListBoxTemplate}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}"/>
    <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
    <Setter Property="ItemsContainerTemplate" Value="{StaticResource ListBoxTemplate}"/>
    <Setter Property="ItemTemplateSelector" Value="{StaticResource menuItemTemplateSelector}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:DrillDownMenu}">
          <Border SnapsToDevicePixels="True" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0,0,0,0" Padding="0,0,0,0">
            <Grid>
              <shared:TransitionPresenter x:Name="PART_TransitionPresenter" Grid.Row="1" Grid.RowSpan="1" Transition="{StaticResource SlideTransition}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
              <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>