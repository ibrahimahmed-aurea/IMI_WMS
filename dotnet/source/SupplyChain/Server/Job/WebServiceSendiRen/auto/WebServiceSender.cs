/*
  File           : 

  Description    : Internal classes for calling webservices with outgoing data.

 * 061219 5.1.16    olla    dotnet2.0 conversion

*/
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;

namespace Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen
{
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "InboundInterfaceSoap", Namespace = "http://im.se/wms/webservices/")]
    public class SenderHandler : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        public string _Debug()
        {
            return "Generated on   : 2006-12-11 11:14:40\r\n" +
                   "Generated by   : SWG\\olla@IMIPC1091\r\n" +
                   "Generated in   : C:\\project\\views\\olla_dotnet_ss\\dotnet\\source\\CodeGenerators\\wscc\r\n";
        }

        public SenderHandler()
        {
            this.Url = "http://localhost/Inbound/auto/ExternalInterface.asmx"; // the Url ALWAYS need to have a value otherwise an exception occurs.
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/DeliveryReceipt", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeliveryReceipt(string ChannelId, string ChannelRef, string TransactionId, DeliveryReceiptHeadDoc aDeliveryReceiptHeadDoc)
        {
            this.Invoke("DeliveryReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aDeliveryReceiptHeadDoc});
            return;
        }

        public System.IAsyncResult BeginDeliveryReceipt(string ChannelId, string ChannelRef, string TransactionId, DeliveryReceiptHeadDoc aDeliveryReceiptHeadDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeliveryReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aDeliveryReceiptHeadDoc}, callback, asyncState);
        }

        public void EndDeliveryReceipt(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/PickReceipt", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PickReceipt(string ChannelId, string ChannelRef, string TransactionId, PickReceiptHeadDoc aPickReceiptHeadDoc)
        {
            this.Invoke("PickReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aPickReceiptHeadDoc});
            return;
        }

        public System.IAsyncResult BeginPickReceipt(string ChannelId, string ChannelRef, string TransactionId, PickReceiptHeadDoc aPickReceiptHeadDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("PickReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aPickReceiptHeadDoc}, callback, asyncState);
        }

        public void EndPickReceipt(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/VendorReturnReceipt", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VendorReturnReceipt(string ChannelId, string ChannelRef, string TransactionId, ReturnReceiptHeadDoc aReturnReceiptHeadDoc)
        {
            this.Invoke("VendorReturnReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aReturnReceiptHeadDoc});
            return;
        }

        public System.IAsyncResult BeginVendorReturnReceipt(string ChannelId, string ChannelRef, string TransactionId, ReturnReceiptHeadDoc aReturnReceiptHeadDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("VendorReturnReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aReturnReceiptHeadDoc}, callback, asyncState);
        }

        public void EndVendorReturnReceipt(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/InspectionReceipt", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InspectionReceipt(string ChannelId, string ChannelRef, string TransactionId, InspectionReceiptHeadDoc aInspectionReceiptHeadDoc)
        {
            this.Invoke("InspectionReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aInspectionReceiptHeadDoc});
            return;
        }

        public System.IAsyncResult BeginInspectionReceipt(string ChannelId, string ChannelRef, string TransactionId, InspectionReceiptHeadDoc aInspectionReceiptHeadDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InspectionReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aInspectionReceiptHeadDoc}, callback, asyncState);
        }

        public void EndInspectionReceipt(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/InventoryChange", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InventoryChange(string ChannelId, string ChannelRef, string TransactionId, InventoryChangeLineDoc aInventoryChangeLineDoc)
        {
            this.Invoke("InventoryChange", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aInventoryChangeLineDoc});
            return;
        }

        public System.IAsyncResult BeginInventoryChange(string ChannelId, string ChannelRef, string TransactionId, InventoryChangeLineDoc aInventoryChangeLineDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InventoryChange", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aInventoryChangeLineDoc}, callback, asyncState);
        }

        public void EndInventoryChange(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/BalanceAnswer", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BalanceAnswer(string ChannelId, string ChannelRef, string TransactionId, BalanceAnswerLineDoc aBalanceAnswerLineDoc)
        {
            this.Invoke("BalanceAnswer", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aBalanceAnswerLineDoc});
            return;
        }

        public System.IAsyncResult BeginBalanceAnswer(string ChannelId, string ChannelRef, string TransactionId, BalanceAnswerLineDoc aBalanceAnswerLineDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BalanceAnswer", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aBalanceAnswerLineDoc}, callback, asyncState);
        }

        public void EndBalanceAnswer(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/ReturnedPackingMaterial", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReturnedPackingMaterial(string ChannelId, string ChannelRef, string TransactionId, ReturnedPackingMaterialHeadDoc aReturnedPackingMaterialHeadDoc)
        {
            this.Invoke("ReturnedPackingMaterial", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aReturnedPackingMaterialHeadDoc});
            return;
        }

        public System.IAsyncResult BeginReturnedPackingMaterial(string ChannelId, string ChannelRef, string TransactionId, ReturnedPackingMaterialHeadDoc aReturnedPackingMaterialHeadDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ReturnedPackingMaterial", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aReturnedPackingMaterialHeadDoc}, callback, asyncState);
        }

        public void EndReturnedPackingMaterial(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/ASN", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ASN(string ChannelId, string ChannelRef, string TransactionId, ASNHeadDoc aASNHeadDoc)
        {
            this.Invoke("ASN", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aASNHeadDoc});
            return;
        }

        public System.IAsyncResult BeginASN(string ChannelId, string ChannelRef, string TransactionId, ASNHeadDoc aASNHeadDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ASN", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aASNHeadDoc}, callback, asyncState);
        }

        public void EndASN(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/ConfirmationOfReceipt", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmationOfReceipt(string ChannelId, string ChannelRef, string TransactionId, ConfirmationOfReceiptHeadDoc aConfirmationOfReceiptHeadDoc)
        {
            this.Invoke("ConfirmationOfReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aConfirmationOfReceiptHeadDoc});
            return;
        }

        public System.IAsyncResult BeginConfirmationOfReceipt(string ChannelId, string ChannelRef, string TransactionId, ConfirmationOfReceiptHeadDoc aConfirmationOfReceiptHeadDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ConfirmationOfReceipt", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aConfirmationOfReceiptHeadDoc}, callback, asyncState);
        }

        public void EndConfirmationOfReceipt(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/InboundOrderCompleted", RequestNamespace = "http://im.se/wms/webservices/", ResponseNamespace = "http://im.se/wms/webservices/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InboundOrderCompleted(string ChannelId, string ChannelRef, string TransactionId, InboundOrderCompletedDoc aInboundOrderCompletedDoc)
        {
            this.Invoke("InboundOrderCompleted", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aInboundOrderCompletedDoc});
            return;
        }

        public System.IAsyncResult BeginInboundOrderCompleted(string ChannelId, string ChannelRef, string TransactionId, InboundOrderCompletedDoc aInboundOrderCompletedDoc, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InboundOrderCompleted", new object[] {
        ChannelId,
        ChannelRef,
        TransactionId,
        aInboundOrderCompletedDoc}, callback, asyncState);
        }

        public void EndInboundOrderCompleted(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }
    }
}
