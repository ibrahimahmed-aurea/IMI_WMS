<exceptionHandling>
	<exceptionPolicies>
		<add name="TransportationBusinessLayerPolicy">
			<exceptionTypes>
				<add type="Imi.Framework.DataAccess.CheckConstraintException, Imi.Framework.DataAccess"
				  postHandlingAction="ThrowNewException" name="CheckConstraintException">
					<exceptionHandlers>
						<add type="Imi.Framework.Services.ExceptionHandling.CheckConstraintExceptionHandler, Imi.Framework.Services.ExceptionHandling"
						  name="CheckConstraintException Handler" />
					</exceptionHandlers>
				</add>
				<add type="Imi.Framework.DataAccess.DataAccessException, Imi.Framework.DataAccess"
					postHandlingAction="ThrowNewException" name="DataAccessException">
					<exceptionHandlers>
						<add type="Imi.SupplyChain.Transportation.Alarm.BusinessLogic.DataAccessExceptionHandler, Imi.SupplyChain.Transportation.Alarm.BusinessLogic"
						  name="DbException Handler" />
					</exceptionHandlers>
				</add>
			</exceptionTypes>
		</add>
		<add name="WarehouseBusinessLayerPolicy">
			<exceptionTypes>
				<add type="Imi.Framework.DataAccess.CheckConstraintException, Imi.Framework.DataAccess"
				  postHandlingAction="ThrowNewException" name="CheckConstraintException">
					<exceptionHandlers>
						<add type="Imi.Framework.Services.ExceptionHandling.CheckConstraintExceptionHandler, Imi.Framework.Services.ExceptionHandling"
						  name="CheckConstraintException Handler" />
					</exceptionHandlers>
				</add>
				<add type="Imi.Framework.DataAccess.DataAccessException, Imi.Framework.DataAccess"
					postHandlingAction="ThrowNewException" name="DataAccessException">
					<exceptionHandlers>
						<add type="Imi.SupplyChain.Warehouse.Alarm.BusinessLogic.DataAccessExceptionHandler, Imi.SupplyChain.Warehouse.Alarm.BusinessLogic"
						  name="DbException Handler" />
					</exceptionHandlers>
				</add>
			</exceptionTypes>
		</add>
		<add name="OutputManagerBusinessLayerPolicy">
			<exceptionTypes>
				<add type="Imi.Framework.DataAccess.CheckConstraintException, Imi.Framework.DataAccess"
				  postHandlingAction="ThrowNewException" name="CheckConstraintException">
					<exceptionHandlers>
						<add type="Imi.Framework.Services.ExceptionHandling.CheckConstraintExceptionHandler, Imi.Framework.Services.ExceptionHandling"
						  name="CheckConstraintException Handler" />
					</exceptionHandlers>
				</add>
				<add type="Imi.Framework.DataAccess.DataAccessException, Imi.Framework.DataAccess"
					postHandlingAction="ThrowNewException" name="DataAccessException">
					<exceptionHandlers>
						<add type="Imi.SupplyChain.OutputManager.Alarm.BusinessLogic.DataAccessExceptionHandler, Imi.SupplyChain.OutputManager.Alarm.BusinessLogic"
						  name="DbException Handler" />
					</exceptionHandlers>
				</add>
			</exceptionTypes>
		</add>
		<add name="DataAccessLayerPolicy">
			<exceptionTypes>
				<add type="Oracle.DataAccess.Client.OracleException, Oracle.DataAccess, Culture=neutral, PublicKeyToken=89b483f429c47342"
				  postHandlingAction="ThrowNewException" name="OracleException">
					<exceptionHandlers>
						<add type="Imi.Framework.Services.ExceptionHandling.OracleExceptionHandler, Imi.Framework.Services.ExceptionHandling"
						  name="OracleException Handler" />
					</exceptionHandlers>
				</add>
			</exceptionTypes>
		</add>
		<add name="DefaultShieldingPolicy">
			<exceptionTypes>


				<add type="Imi.Framework.Services.AlarmException, Imi.Framework.Services"
				  postHandlingAction="ThrowNewException" name="AlarmException">
					<exceptionHandlers>
						<add exceptionMessage="" faultContractType="Imi.Framework.Services.ApplicationFault, Imi.Framework.Services"
						  type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF.FaultContractExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
						  name="ApplicationFault Contract Wrapper">
							<mappings>
								<add source="{Guid}" name="Id" />
								<add source="AlarmId" name="ErrorCode" />
								<add source="Position" name="Position" />
								<add source="AdditionalInformation" name="AdditionalInformation" />

							</mappings>
						</add>
					</exceptionHandlers>
				</add>
				<add type="Imi.Framework.Services.BatchException, Imi.Framework.Services"
				  postHandlingAction="ThrowNewException" name="BatchException">
					<exceptionHandlers>
						<add exceptionMessage="" faultContractType="Imi.Framework.Services.ApplicationFault, Imi.Framework.Services"
						  type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF.FaultContractExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
						  name="ApplicationFault Contract Wrapper">
							<mappings>
								<add source="{Guid}" name="Id" />
								<add source="Position" name="Position" />
							</mappings>
						</add>
					</exceptionHandlers>
				</add>
				<add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
				  postHandlingAction="ThrowNewException" name="Exception">
					<exceptionHandlers>
						<add logCategory="General" eventId="100" severity="Error" title="Enterprise Library Exception Handling"
						  formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
						  priority="-1" useDefaultLogger="true" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
						  name="Logging Handler" />
						<add exceptionMessage="" faultContractType="Imi.Framework.Services.SystemFault, Imi.Framework.Services"
						  type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF.FaultContractExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
						  name="SystemFault Contract Wrapper">
							<mappings>
								<add source="{Guid}" name="Id" />
							</mappings>
						</add>
					</exceptionHandlers>
				</add>


				<add type="System.ServiceModel.FaultException, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
				  postHandlingAction="ThrowNewException" name="FaultException" />
				<add type="Imi.Framework.Services.MessageException, Imi.Framework.Services"
				  postHandlingAction="ThrowNewException" name="MessageException">
					<exceptionHandlers>
						<add exceptionMessage="" faultContractType="Imi.Framework.Services.MessageFault, Imi.Framework.Services"
						  type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF.FaultContractExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
						  name="MessageFault Contract Wrapper">
							<mappings>
								<add source="MessageXML" name="MessageXML" />
							</mappings>
						</add>
					</exceptionHandlers>
				</add>
			</exceptionTypes>
		</add>
		<add name="ServiceLayerPolicy">
			<exceptionTypes>
				<add type="Imi.Framework.Services.ValidationException, Imi.Framework.Services"
				  postHandlingAction="ThrowNewException" name="ValidationException">
					<exceptionHandlers>
						<add type="Imi.Framework.Services.ExceptionHandling.ValidationExceptionHandler, Imi.Framework.Services.ExceptionHandling"
						  name="ValidationException Handler" />
					</exceptionHandlers>
				</add>
			</exceptionTypes>
		</add>
	</exceptionPolicies>
</exceptionHandling>