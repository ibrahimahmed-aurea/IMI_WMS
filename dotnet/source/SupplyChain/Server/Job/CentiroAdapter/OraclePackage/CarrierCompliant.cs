/*
  File           : Carriercompliant.cs

  Description    : Wrapper class for Oracle package CARRIERCOMPLIANT.
                   This code was generated by the PackageGenerator, do not edit.

  Generated with Commandline: CarrierCompliant CarrierCompliant.cs Imi.SupplyChain.Server.Job.CentiroAdapter.OraclePackage /conn "data source=WHTRUNK;user id=owuser;password=owuser;pooling=false;enlist=false" 

CARRIERCOMPLIANT.PRINT_CONSIGNMENTPACKAGELABEL cannot be generated since the following
parameter types are not currently supported:
    PBCAR_REC_I PL/SQL RECORD

CARRIERCOMPLIANT.PRINT_CONSPACKAGELABELLOG cannot be generated since the following
parameter types are not currently supported:
    PBCARLOG_REC_I PL/SQL RECORD

CARRIERCOMPLIANT.REMOVE_PARCEL cannot be generated since the following
parameter types are not currently supported:
    PBCAR_REC_I PL/SQL RECORD

CARRIERCOMPLIANT.UPDATE_PARCEL cannot be generated since the following
parameter types are not currently supported:
    PBCAR_REC_I PL/SQL RECORD

*/
#define ODP_NET
using System;
using System.Data;
#if ODP_NET
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
#else
using System.Data.OracleClient;
#endif
using Imi.Framework.Job.Data;

namespace Imi.SupplyChain.Server.Job.CentiroAdapter.OraclePackage
{
    public partial class Carriercompliant
    {
        private IDbConnectionProvider connectionProvider;

        public string _Debug()
        {
            return "Package        : CARRIERCOMPLIANT\r\n" +
                    "Generated on   : 2015-06-05 10:47:43\r\n" +
                    "Generated by   : SWG\\aron@SE0133D\r\n" +
                    "Generated in   : N:\\source\\CodeGenerators\\PackageGenerator\\bin\\Debug\r\n";
        }

        public Carriercompliant(IDbConnectionProvider connectionProvider)
        {
            this.connectionProvider = connectionProvider;
        }

        private IDbCommand sp_CloseDeparture;
        private IDbCommand sp_Createprintshipmentmsg;
        private IDbCommand sp_GetCoftxDel;
        private IDbCommand sp_GetCorowftxTra;
        private IDbCommand sp_GetSourceVersionInfo;
        private IDbCommand sp_GetValidSscc;
        private IDbCommand sp_ModifyConsignment;
        private IDbCommand sp_ModifyParcel;
        private IDbCommand sp_ModifyTrackingUrl;
        private IDbCommand sp_PrintBilloflading;
        private IDbCommand sp_PrintBillofladinglog;
        private IDbCommand sp_PrintConsignmentpackagelabels;
        private IDbCommand sp_PrintConsignmentpackagespec;
        private IDbCommand sp_UpdateParcels;
        private IDbCommand sp_UpdateShipment;

        // ----------------------------------------------------------------------------

        private void CreateSP_CloseDeparture()
        {
            IDbDataParameter p;

            sp_CloseDeparture = connectionProvider.GetConnection().CreateCommand();
            sp_CloseDeparture.CommandText = "CARRIERCOMPLIANT.CLOSE_DEPARTURE";
            sp_CloseDeparture.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_CloseDeparture).BindByName = true;
#endif

            p = sp_CloseDeparture.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_CloseDeparture.Parameters.Add(p);

            p = sp_CloseDeparture.CreateParameter();
            p.ParameterName = "EMPID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_CloseDeparture.Parameters.Add(p);

            p = sp_CloseDeparture.CreateParameter();
            p.ParameterName = "TERID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_CloseDeparture.Parameters.Add(p);

            p = sp_CloseDeparture.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_CloseDeparture.Parameters.Add(p);

            p = sp_CloseDeparture.CreateParameter();
            p.ParameterName = "CALLEDBY";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_CloseDeparture.Parameters.Add(p);

            p = sp_CloseDeparture.CreateParameter();
            p.ParameterName = "CREATECUSTOMERSPEC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_CloseDeparture.Parameters.Add(p);

            p = sp_CloseDeparture.CreateParameter();
            p.ParameterName = "CREATECARRIERDOC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_CloseDeparture.Parameters.Add(p);

            p = sp_CloseDeparture.CreateParameter();
            p.ParameterName = "RETURNSEQUENCENUMBERS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_CloseDeparture.Parameters.Add(p);

            p = sp_CloseDeparture.CreateParameter();
            p.ParameterName = "RETURNTRACKINGURLS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_CloseDeparture.Parameters.Add(p);
        }

        private void CreateSP_Createprintshipmentmsg()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_Createprintshipmentmsg = connectionProvider.GetConnection().CreateCommand();
            sp_Createprintshipmentmsg.CommandText = "CARRIERCOMPLIANT.CREATEPRINTSHIPMENTMSG";
            sp_Createprintshipmentmsg.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_Createprintshipmentmsg).BindByName = true;
#endif

            oP = sp_Createprintshipmentmsg.CreateParameter() as OracleParameter;
            oP.ParameterName = "";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.ReturnValue;
            sp_Createprintshipmentmsg.Parameters.Add(oP);


            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "WHID_I";
            p.DbType = DbType.String;
            p.Size = 4;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "COMPANY_ID_I";
            p.DbType = DbType.String;
            p.Size = 17;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "RETURNSEQUENCENUMBERS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "CREATELABELS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "CREATECUSTOMERSPEC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "CREATESHIPMENTDOC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "RETURNTRACKINGURLS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "EMPID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "TERID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "NO_COPIES_I";
            p.DbType = DbType.Decimal;
            p.Precision = 2;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);

            p = sp_Createprintshipmentmsg.CreateParameter();
            p.ParameterName = "NO_TAGS_I";
            p.DbType = DbType.Decimal;
            p.Precision = 2;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_Createprintshipmentmsg.Parameters.Add(p);
        }

        private void CreateSP_GetCoftxDel()
        {
            IDbDataParameter p;

            sp_GetCoftxDel = connectionProvider.GetConnection().CreateCommand();
            sp_GetCoftxDel.CommandText = "CARRIERCOMPLIANT.GET_COFTX_DEL";
            sp_GetCoftxDel.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetCoftxDel).BindByName = true;
#endif

            p = sp_GetCoftxDel.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetCoftxDel.Parameters.Add(p);

            p = sp_GetCoftxDel.CreateParameter();
            p.ParameterName = "CARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetCoftxDel.Parameters.Add(p);
        }

        private void CreateSP_GetCorowftxTra()
        {
            IDbDataParameter p;

            sp_GetCorowftxTra = connectionProvider.GetConnection().CreateCommand();
            sp_GetCorowftxTra.CommandText = "CARRIERCOMPLIANT.GET_COROWFTX_TRA";
            sp_GetCorowftxTra.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetCorowftxTra).BindByName = true;
#endif

            p = sp_GetCorowftxTra.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetCorowftxTra.Parameters.Add(p);

            p = sp_GetCorowftxTra.CreateParameter();
            p.ParameterName = "CARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetCorowftxTra.Parameters.Add(p);
        }

        private void CreateSP_GetSourceVersionInfo()
        {
            IDbDataParameter p;

            sp_GetSourceVersionInfo = connectionProvider.GetConnection().CreateCommand();
            sp_GetSourceVersionInfo.CommandText = "CARRIERCOMPLIANT.GET_SOURCE_VERSION_INFO";
            sp_GetSourceVersionInfo.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetSourceVersionInfo).BindByName = true;
#endif

            p = sp_GetSourceVersionInfo.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetSourceVersionInfo.Parameters.Add(p);
        }

        private void CreateSP_GetValidSscc()
        {
            IDbDataParameter p;

            sp_GetValidSscc = connectionProvider.GetConnection().CreateCommand();
            sp_GetValidSscc.CommandText = "CARRIERCOMPLIANT.GET_VALID_SSCC";
            sp_GetValidSscc.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetValidSscc).BindByName = true;
#endif

            p = sp_GetValidSscc.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetValidSscc.Parameters.Add(p);

            p = sp_GetValidSscc.CreateParameter();
            p.ParameterName = "CARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetValidSscc.Parameters.Add(p);
        }

        private void CreateSP_ModifyConsignment()
        {
            IDbDataParameter p;

            sp_ModifyConsignment = connectionProvider.GetConnection().CreateCommand();
            sp_ModifyConsignment.CommandText = "CARRIERCOMPLIANT.MODIFY_CONSIGNMENT";
            sp_ModifyConsignment.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_ModifyConsignment).BindByName = true;
#endif

            p = sp_ModifyConsignment.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_ModifyConsignment.Parameters.Add(p);

            p = sp_ModifyConsignment.CreateParameter();
            p.ParameterName = "CC_SEQNO_I";
            p.DbType = DbType.String;
            p.Size = 50;
            p.Direction = ParameterDirection.Input;
            sp_ModifyConsignment.Parameters.Add(p);

            p = sp_ModifyConsignment.CreateParameter();
            p.ParameterName = "CC_SEQNO2_I";
            p.DbType = DbType.String;
            p.Size = 50;
            p.Direction = ParameterDirection.Input;
            sp_ModifyConsignment.Parameters.Add(p);
        }

        private void CreateSP_ModifyParcel()
        {
            IDbDataParameter p;

            sp_ModifyParcel = connectionProvider.GetConnection().CreateCommand();
            sp_ModifyParcel.CommandText = "CARRIERCOMPLIANT.MODIFY_PARCEL";
            sp_ModifyParcel.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_ModifyParcel).BindByName = true;
#endif

            p = sp_ModifyParcel.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_ModifyParcel.Parameters.Add(p);

            p = sp_ModifyParcel.CreateParameter();
            p.ParameterName = "CC_SEQNO_I";
            p.DbType = DbType.String;
            p.Size = 50;
            p.Direction = ParameterDirection.Input;
            sp_ModifyParcel.Parameters.Add(p);

            p = sp_ModifyParcel.CreateParameter();
            p.ParameterName = "CC_SEQNO2_I";
            p.DbType = DbType.String;
            p.Size = 50;
            p.Direction = ParameterDirection.Input;
            sp_ModifyParcel.Parameters.Add(p);

            p = sp_ModifyParcel.CreateParameter();
            p.ParameterName = "CC_SEQNO_SSCC_I";
            p.DbType = DbType.String;
            p.Size = 50;
            p.Direction = ParameterDirection.Input;
            sp_ModifyParcel.Parameters.Add(p);

            p = sp_ModifyParcel.CreateParameter();
            p.ParameterName = "CC_BARCODE_I";
            p.DbType = DbType.String;
            p.Size = 50;
            p.Direction = ParameterDirection.Input;
            sp_ModifyParcel.Parameters.Add(p);
        }

        private void CreateSP_ModifyTrackingUrl()
        {
            IDbDataParameter p;

            sp_ModifyTrackingUrl = connectionProvider.GetConnection().CreateCommand();
            sp_ModifyTrackingUrl.CommandText = "CARRIERCOMPLIANT.MODIFY_TRACKING_URL";
            sp_ModifyTrackingUrl.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_ModifyTrackingUrl).BindByName = true;
#endif

            p = sp_ModifyTrackingUrl.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_ModifyTrackingUrl.Parameters.Add(p);

            p = sp_ModifyTrackingUrl.CreateParameter();
            p.ParameterName = "TRACKING_URL_I";
            p.DbType = DbType.String;
            p.Size = 1000;
            p.Direction = ParameterDirection.Input;
            sp_ModifyTrackingUrl.Parameters.Add(p);
        }

        private void CreateSP_PrintBilloflading()
        {
            IDbDataParameter p;

            sp_PrintBilloflading = connectionProvider.GetConnection().CreateCommand();
            sp_PrintBilloflading.CommandText = "CARRIERCOMPLIANT.PRINT_BILLOFLADING";
            sp_PrintBilloflading.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_PrintBilloflading).BindByName = true;
#endif

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Boolean;
            p.Direction = ParameterDirection.ReturnValue;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "CHECK_DLVRYMETH_ID_I";
            p.DbType = DbType.String;
            p.Size = 17;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "CHECK_FREID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "ACTLOG_WHID_I";
            p.DbType = DbType.String;
            p.Size = 4;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "ACTLOG_COMPANY_ID_I";
            p.DbType = DbType.String;
            p.Size = 17;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "META_TERID_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "META_EMPID_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "META_NO_COPIES_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "RETURNSEQUENCENUMBERS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "CREATELABELS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "CREATECUSTOMERSPEC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "CREATESHIPMENTDOC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "RETURNTRACKINGURLS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "SKIP_CHECK_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBilloflading.Parameters.Add(p);

            p = sp_PrintBilloflading.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_PrintBilloflading.Parameters.Add(p);
        }

        private void CreateSP_PrintBillofladinglog()
        {
            IDbDataParameter p;

            sp_PrintBillofladinglog = connectionProvider.GetConnection().CreateCommand();
            sp_PrintBillofladinglog.CommandText = "CARRIERCOMPLIANT.PRINT_BILLOFLADINGLOG";
            sp_PrintBillofladinglog.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_PrintBillofladinglog).BindByName = true;
#endif

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Boolean;
            p.Direction = ParameterDirection.ReturnValue;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "META_TERID_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "META_EMPID_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "META_NO_COPIES_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "RETURNSEQUENCENUMBERS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "CREATELABELS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "CREATECUSTOMERSPEC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "CREATESHIPMENTDOC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "RETURNTRACKINGURLS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "SKIP_CHECK_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintBillofladinglog.Parameters.Add(p);

            p = sp_PrintBillofladinglog.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_PrintBillofladinglog.Parameters.Add(p);
        }

        private void CreateSP_PrintConsignmentpackagelabels()
        {
            IDbDataParameter p;

            sp_PrintConsignmentpackagelabels = connectionProvider.GetConnection().CreateCommand();
            sp_PrintConsignmentpackagelabels.CommandText = "CARRIERCOMPLIANT.PRINT_CONSIGNMENTPACKAGELABELS";
            sp_PrintConsignmentpackagelabels.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_PrintConsignmentpackagelabels).BindByName = true;
#endif

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Boolean;
            p.Direction = ParameterDirection.ReturnValue;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "FREID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "DLVRYMETH_ID_I";
            p.DbType = DbType.String;
            p.Size = 17;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "RETURNSEQUENCENUMBERS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "RETURNTRACKINGURLS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "META_TERID_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "META_PRTID_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "META_EMPID_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "META_NO_COPIES_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "SKIP_CHECK_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);

            p = sp_PrintConsignmentpackagelabels.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_PrintConsignmentpackagelabels.Parameters.Add(p);
        }

        private void CreateSP_PrintConsignmentpackagespec()
        {
            IDbDataParameter p;

            sp_PrintConsignmentpackagespec = connectionProvider.GetConnection().CreateCommand();
            sp_PrintConsignmentpackagespec.CommandText = "CARRIERCOMPLIANT.PRINT_CONSIGNMENTPACKAGESPEC";
            sp_PrintConsignmentpackagespec.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_PrintConsignmentpackagespec).BindByName = true;
#endif

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Boolean;
            p.Direction = ParameterDirection.ReturnValue;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "CHECK_DLVRYMETH_ID_I";
            p.DbType = DbType.String;
            p.Size = 17;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "CHECK_FREID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "META_DOCSUBTYPE_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "META_TERID_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "META_EMPID_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "META_NO_COPIES_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "CREATECUSTOMERSPEC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "CREATECARRIERDOC_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "SKIP_CHECK_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);

            p = sp_PrintConsignmentpackagespec.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_PrintConsignmentpackagespec.Parameters.Add(p);
        }

        private void CreateSP_UpdateParcels()
        {
            IDbDataParameter p;

            sp_UpdateParcels = connectionProvider.GetConnection().CreateCommand();
            sp_UpdateParcels.CommandText = "CARRIERCOMPLIANT.UPDATE_PARCELS";
            sp_UpdateParcels.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_UpdateParcels).BindByName = true;
#endif

            p = sp_UpdateParcels.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_UpdateParcels.Parameters.Add(p);

            p = sp_UpdateParcels.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_UpdateParcels.Parameters.Add(p);

            p = sp_UpdateParcels.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_UpdateParcels.Parameters.Add(p);

            p = sp_UpdateParcels.CreateParameter();
            p.ParameterName = "CALLEDBY";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_UpdateParcels.Parameters.Add(p);
        }

        private void CreateSP_UpdateShipment()
        {
            IDbDataParameter p;

            sp_UpdateShipment = connectionProvider.GetConnection().CreateCommand();
            sp_UpdateShipment.CommandText = "CARRIERCOMPLIANT.UPDATE_SHIPMENT";
            sp_UpdateShipment.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_UpdateShipment).BindByName = true;
#endif

            p = sp_UpdateShipment.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_UpdateShipment.Parameters.Add(p);

            p = sp_UpdateShipment.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_UpdateShipment.Parameters.Add(p);

            p = sp_UpdateShipment.CreateParameter();
            p.ParameterName = "CALLEDBY";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_UpdateShipment.Parameters.Add(p);

            p = sp_UpdateShipment.CreateParameter();
            p.ParameterName = "AGGREGATEPARCELS_I";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.Input;
            sp_UpdateShipment.Parameters.Add(p);
        }

        // ----------------------------------------------------------------------------

        public void CloseDeparture(string DEPARTURE_ID_I,
                                   string EMPID_I,
                                   string TERID_I,
                                   ref string ALMID_O,
                                   string CALLEDBY,
                                   string CREATECUSTOMERSPEC_I,
                                   string CREATECARRIERDOC_I,
                                   string RETURNSEQUENCENUMBERS_I,
                                   string RETURNTRACKINGURLS_I)
        {
            if (sp_CloseDeparture == null)
                CreateSP_CloseDeparture();

            sp_CloseDeparture.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_CloseDeparture.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_CloseDeparture.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(EMPID_I))
                (sp_CloseDeparture.Parameters["EMPID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_CloseDeparture.Parameters["EMPID_I"] as IDbDataParameter).Value = EMPID_I;

            if (String.IsNullOrEmpty(TERID_I))
                (sp_CloseDeparture.Parameters["TERID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_CloseDeparture.Parameters["TERID_I"] as IDbDataParameter).Value = TERID_I;

            if (String.IsNullOrEmpty(CALLEDBY))
                (sp_CloseDeparture.Parameters["CALLEDBY"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_CloseDeparture.Parameters["CALLEDBY"] as IDbDataParameter).Value = CALLEDBY;

            if (String.IsNullOrEmpty(CREATECUSTOMERSPEC_I))
                (sp_CloseDeparture.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_CloseDeparture.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = CREATECUSTOMERSPEC_I;

            if (String.IsNullOrEmpty(CREATECARRIERDOC_I))
                (sp_CloseDeparture.Parameters["CREATECARRIERDOC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_CloseDeparture.Parameters["CREATECARRIERDOC_I"] as IDbDataParameter).Value = CREATECARRIERDOC_I;

            if (String.IsNullOrEmpty(RETURNSEQUENCENUMBERS_I))
                (sp_CloseDeparture.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_CloseDeparture.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = RETURNSEQUENCENUMBERS_I;

            if (String.IsNullOrEmpty(RETURNTRACKINGURLS_I))
                (sp_CloseDeparture.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_CloseDeparture.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = RETURNTRACKINGURLS_I;

            // Execute stored procedure

            sp_CloseDeparture.Prepare();
            sp_CloseDeparture.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_CloseDeparture.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_CloseDeparture.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public string Createprintshipmentmsg(string CONSIGNMENT_ID_I,
                                             string WHID_I,
                                             string COMPANY_ID_I,
                                             string DEPARTURE_ID_I,
                                             string RETURNSEQUENCENUMBERS_I,
                                             string CREATELABELS_I,
                                             string CREATECUSTOMERSPEC_I,
                                             string CREATESHIPMENTDOC_I,
                                             string RETURNTRACKINGURLS_I,
                                             string EMPID_I,
                                             string TERID_I,
                                             Nullable<int> NO_COPIES_I,
                                             Nullable<int> NO_TAGS_I)
        {
            if (sp_Createprintshipmentmsg == null)
                CreateSP_Createprintshipmentmsg();

            sp_Createprintshipmentmsg.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_Createprintshipmentmsg.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(WHID_I))
                (sp_Createprintshipmentmsg.Parameters["WHID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["WHID_I"] as IDbDataParameter).Value = WHID_I;

            if (String.IsNullOrEmpty(COMPANY_ID_I))
                (sp_Createprintshipmentmsg.Parameters["COMPANY_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["COMPANY_ID_I"] as IDbDataParameter).Value = COMPANY_ID_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_Createprintshipmentmsg.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(RETURNSEQUENCENUMBERS_I))
                (sp_Createprintshipmentmsg.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = RETURNSEQUENCENUMBERS_I;

            if (String.IsNullOrEmpty(CREATELABELS_I))
                (sp_Createprintshipmentmsg.Parameters["CREATELABELS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["CREATELABELS_I"] as IDbDataParameter).Value = CREATELABELS_I;

            if (String.IsNullOrEmpty(CREATECUSTOMERSPEC_I))
                (sp_Createprintshipmentmsg.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = CREATECUSTOMERSPEC_I;

            if (String.IsNullOrEmpty(CREATESHIPMENTDOC_I))
                (sp_Createprintshipmentmsg.Parameters["CREATESHIPMENTDOC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["CREATESHIPMENTDOC_I"] as IDbDataParameter).Value = CREATESHIPMENTDOC_I;

            if (String.IsNullOrEmpty(RETURNTRACKINGURLS_I))
                (sp_Createprintshipmentmsg.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = RETURNTRACKINGURLS_I;

            if (String.IsNullOrEmpty(EMPID_I))
                (sp_Createprintshipmentmsg.Parameters["EMPID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["EMPID_I"] as IDbDataParameter).Value = EMPID_I;

            if (String.IsNullOrEmpty(TERID_I))
                (sp_Createprintshipmentmsg.Parameters["TERID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["TERID_I"] as IDbDataParameter).Value = TERID_I;

            if (NO_COPIES_I == null)
                (sp_Createprintshipmentmsg.Parameters["NO_COPIES_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["NO_COPIES_I"] as IDbDataParameter).Value = NO_COPIES_I;

            if (NO_TAGS_I == null)
                (sp_Createprintshipmentmsg.Parameters["NO_TAGS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Createprintshipmentmsg.Parameters["NO_TAGS_I"] as IDbDataParameter).Value = NO_TAGS_I;

            // Execute stored procedure

            sp_Createprintshipmentmsg.Prepare();
            sp_Createprintshipmentmsg.ExecuteNonQuery();

            // Set Out Parameters

            string ret;

            if ((sp_Createprintshipmentmsg.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (string)((OracleClob)((sp_Createprintshipmentmsg.Parameters[""] as IDbDataParameter).Value)).Value;

            return ret;
        }

        public string GetCoftxDel(string CARID_I)
        {
            if (sp_GetCoftxDel == null)
                CreateSP_GetCoftxDel();

            sp_GetCoftxDel.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CARID_I))
                (sp_GetCoftxDel.Parameters["CARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetCoftxDel.Parameters["CARID_I"] as IDbDataParameter).Value = CARID_I;

            // Execute stored procedure

            sp_GetCoftxDel.Prepare();
            sp_GetCoftxDel.ExecuteNonQuery();

            // Set Out Parameters

            string ret;

            if ((sp_GetCoftxDel.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (sp_GetCoftxDel.Parameters[""] as IDbDataParameter).Value.ToString();

            return ret;
        }

        public string GetCorowftxTra(string CARID_I)
        {
            if (sp_GetCorowftxTra == null)
                CreateSP_GetCorowftxTra();

            sp_GetCorowftxTra.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CARID_I))
                (sp_GetCorowftxTra.Parameters["CARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetCorowftxTra.Parameters["CARID_I"] as IDbDataParameter).Value = CARID_I;

            // Execute stored procedure

            sp_GetCorowftxTra.Prepare();
            sp_GetCorowftxTra.ExecuteNonQuery();

            // Set Out Parameters

            string ret;

            if ((sp_GetCorowftxTra.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (sp_GetCorowftxTra.Parameters[""] as IDbDataParameter).Value.ToString();

            return ret;
        }

        public string GetSourceVersionInfo()
        {
            if (sp_GetSourceVersionInfo == null)
                CreateSP_GetSourceVersionInfo();

            sp_GetSourceVersionInfo.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            // Execute stored procedure

            sp_GetSourceVersionInfo.Prepare();
            sp_GetSourceVersionInfo.ExecuteNonQuery();

            // Set Out Parameters

            string ret;

            if ((sp_GetSourceVersionInfo.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (sp_GetSourceVersionInfo.Parameters[""] as IDbDataParameter).Value.ToString();

            return ret;
        }

        public string GetValidSscc(string CARID_I)
        {
            if (sp_GetValidSscc == null)
                CreateSP_GetValidSscc();

            sp_GetValidSscc.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CARID_I))
                (sp_GetValidSscc.Parameters["CARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetValidSscc.Parameters["CARID_I"] as IDbDataParameter).Value = CARID_I;

            // Execute stored procedure

            sp_GetValidSscc.Prepare();
            sp_GetValidSscc.ExecuteNonQuery();

            // Set Out Parameters

            string ret;

            if ((sp_GetValidSscc.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (sp_GetValidSscc.Parameters[""] as IDbDataParameter).Value.ToString();

            return ret;
        }

        public void ModifyConsignment(string CONSIGNMENT_ID_I,
                                      string CC_SEQNO_I,
                                      string CC_SEQNO2_I)
        {
            if (sp_ModifyConsignment == null)
                CreateSP_ModifyConsignment();

            sp_ModifyConsignment.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_ModifyConsignment.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyConsignment.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(CC_SEQNO_I))
                (sp_ModifyConsignment.Parameters["CC_SEQNO_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyConsignment.Parameters["CC_SEQNO_I"] as IDbDataParameter).Value = CC_SEQNO_I;

            if (String.IsNullOrEmpty(CC_SEQNO2_I))
                (sp_ModifyConsignment.Parameters["CC_SEQNO2_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyConsignment.Parameters["CC_SEQNO2_I"] as IDbDataParameter).Value = CC_SEQNO2_I;

            // Execute stored procedure

            sp_ModifyConsignment.Prepare();
            sp_ModifyConsignment.ExecuteNonQuery();

            // Set Out Parameters
        }

        public void ModifyParcel(string PBCARID_I,
                                 string CC_SEQNO_I,
                                 string CC_SEQNO2_I,
                                 string CC_SEQNO_SSCC_I,
                                 string CC_BARCODE_I)
        {
            if (sp_ModifyParcel == null)
                CreateSP_ModifyParcel();

            sp_ModifyParcel.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_ModifyParcel.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyParcel.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(CC_SEQNO_I))
                (sp_ModifyParcel.Parameters["CC_SEQNO_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyParcel.Parameters["CC_SEQNO_I"] as IDbDataParameter).Value = CC_SEQNO_I;

            if (String.IsNullOrEmpty(CC_SEQNO2_I))
                (sp_ModifyParcel.Parameters["CC_SEQNO2_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyParcel.Parameters["CC_SEQNO2_I"] as IDbDataParameter).Value = CC_SEQNO2_I;

            if (String.IsNullOrEmpty(CC_SEQNO_SSCC_I))
                (sp_ModifyParcel.Parameters["CC_SEQNO_SSCC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyParcel.Parameters["CC_SEQNO_SSCC_I"] as IDbDataParameter).Value = CC_SEQNO_SSCC_I;

            if (String.IsNullOrEmpty(CC_BARCODE_I))
                (sp_ModifyParcel.Parameters["CC_BARCODE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyParcel.Parameters["CC_BARCODE_I"] as IDbDataParameter).Value = CC_BARCODE_I;

            // Execute stored procedure

            sp_ModifyParcel.Prepare();
            sp_ModifyParcel.ExecuteNonQuery();

            // Set Out Parameters
        }

        public void ModifyTrackingUrl(string PBCARID_I,
                                      string TRACKING_URL_I)
        {
            if (sp_ModifyTrackingUrl == null)
                CreateSP_ModifyTrackingUrl();

            sp_ModifyTrackingUrl.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_ModifyTrackingUrl.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyTrackingUrl.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(TRACKING_URL_I))
                (sp_ModifyTrackingUrl.Parameters["TRACKING_URL_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyTrackingUrl.Parameters["TRACKING_URL_I"] as IDbDataParameter).Value = TRACKING_URL_I;

            // Execute stored procedure

            sp_ModifyTrackingUrl.Prepare();
            sp_ModifyTrackingUrl.ExecuteNonQuery();

            // Set Out Parameters
        }

        public Nullable<bool> PrintBilloflading(string CONSIGNMENT_ID_I,
                                                string CHECK_DLVRYMETH_ID_I,
                                                string CHECK_FREID_I,
                                                string ACTLOG_WHID_I,
                                                string ACTLOG_COMPANY_ID_I,
                                                string META_TERID_I,
                                                string META_EMPID_I,
                                                Nullable<int> META_NO_COPIES_I,
                                                string RETURNSEQUENCENUMBERS_I,
                                                string CREATELABELS_I,
                                                string CREATECUSTOMERSPEC_I,
                                                string CREATESHIPMENTDOC_I,
                                                string RETURNTRACKINGURLS_I,
                                                string SKIP_CHECK_I,
                                                ref string ALMID_O)
        {
            if (sp_PrintBilloflading == null)
                CreateSP_PrintBilloflading();

            sp_PrintBilloflading.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_PrintBilloflading.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(CHECK_DLVRYMETH_ID_I))
                (sp_PrintBilloflading.Parameters["CHECK_DLVRYMETH_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["CHECK_DLVRYMETH_ID_I"] as IDbDataParameter).Value = CHECK_DLVRYMETH_ID_I;

            if (String.IsNullOrEmpty(CHECK_FREID_I))
                (sp_PrintBilloflading.Parameters["CHECK_FREID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["CHECK_FREID_I"] as IDbDataParameter).Value = CHECK_FREID_I;

            if (String.IsNullOrEmpty(ACTLOG_WHID_I))
                (sp_PrintBilloflading.Parameters["ACTLOG_WHID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["ACTLOG_WHID_I"] as IDbDataParameter).Value = ACTLOG_WHID_I;

            if (String.IsNullOrEmpty(ACTLOG_COMPANY_ID_I))
                (sp_PrintBilloflading.Parameters["ACTLOG_COMPANY_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["ACTLOG_COMPANY_ID_I"] as IDbDataParameter).Value = ACTLOG_COMPANY_ID_I;

            if (String.IsNullOrEmpty(META_TERID_I))
                (sp_PrintBilloflading.Parameters["META_TERID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["META_TERID_I"] as IDbDataParameter).Value = META_TERID_I;

            if (String.IsNullOrEmpty(META_EMPID_I))
                (sp_PrintBilloflading.Parameters["META_EMPID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["META_EMPID_I"] as IDbDataParameter).Value = META_EMPID_I;

            if (META_NO_COPIES_I == null)
                (sp_PrintBilloflading.Parameters["META_NO_COPIES_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["META_NO_COPIES_I"] as IDbDataParameter).Value = META_NO_COPIES_I;

            if (String.IsNullOrEmpty(RETURNSEQUENCENUMBERS_I))
                (sp_PrintBilloflading.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = RETURNSEQUENCENUMBERS_I;

            if (String.IsNullOrEmpty(CREATELABELS_I))
                (sp_PrintBilloflading.Parameters["CREATELABELS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["CREATELABELS_I"] as IDbDataParameter).Value = CREATELABELS_I;

            if (String.IsNullOrEmpty(CREATECUSTOMERSPEC_I))
                (sp_PrintBilloflading.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = CREATECUSTOMERSPEC_I;

            if (String.IsNullOrEmpty(CREATESHIPMENTDOC_I))
                (sp_PrintBilloflading.Parameters["CREATESHIPMENTDOC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["CREATESHIPMENTDOC_I"] as IDbDataParameter).Value = CREATESHIPMENTDOC_I;

            if (String.IsNullOrEmpty(RETURNTRACKINGURLS_I))
                (sp_PrintBilloflading.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = RETURNTRACKINGURLS_I;

            if (String.IsNullOrEmpty(SKIP_CHECK_I))
                (sp_PrintBilloflading.Parameters["SKIP_CHECK_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBilloflading.Parameters["SKIP_CHECK_I"] as IDbDataParameter).Value = SKIP_CHECK_I;

            // Execute stored procedure

            sp_PrintBilloflading.Prepare();
            sp_PrintBilloflading.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<bool> ret;

            if ((sp_PrintBilloflading.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (Nullable<bool>)(sp_PrintBilloflading.Parameters[""] as IDbDataParameter).Value;

            return ret;

            if ((sp_PrintBilloflading.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_PrintBilloflading.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public Nullable<bool> PrintBillofladinglog(string CONSIGNMENT_ID_I,
                                                   string META_TERID_I,
                                                   string META_EMPID_I,
                                                   Nullable<int> META_NO_COPIES_I,
                                                   string RETURNSEQUENCENUMBERS_I,
                                                   string CREATELABELS_I,
                                                   string CREATECUSTOMERSPEC_I,
                                                   string CREATESHIPMENTDOC_I,
                                                   string RETURNTRACKINGURLS_I,
                                                   string SKIP_CHECK_I,
                                                   ref string ALMID_O)
        {
            if (sp_PrintBillofladinglog == null)
                CreateSP_PrintBillofladinglog();

            sp_PrintBillofladinglog.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_PrintBillofladinglog.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(META_TERID_I))
                (sp_PrintBillofladinglog.Parameters["META_TERID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["META_TERID_I"] as IDbDataParameter).Value = META_TERID_I;

            if (String.IsNullOrEmpty(META_EMPID_I))
                (sp_PrintBillofladinglog.Parameters["META_EMPID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["META_EMPID_I"] as IDbDataParameter).Value = META_EMPID_I;

            if (META_NO_COPIES_I == null)
                (sp_PrintBillofladinglog.Parameters["META_NO_COPIES_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["META_NO_COPIES_I"] as IDbDataParameter).Value = META_NO_COPIES_I;

            if (String.IsNullOrEmpty(RETURNSEQUENCENUMBERS_I))
                (sp_PrintBillofladinglog.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = RETURNSEQUENCENUMBERS_I;

            if (String.IsNullOrEmpty(CREATELABELS_I))
                (sp_PrintBillofladinglog.Parameters["CREATELABELS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["CREATELABELS_I"] as IDbDataParameter).Value = CREATELABELS_I;

            if (String.IsNullOrEmpty(CREATECUSTOMERSPEC_I))
                (sp_PrintBillofladinglog.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = CREATECUSTOMERSPEC_I;

            if (String.IsNullOrEmpty(CREATESHIPMENTDOC_I))
                (sp_PrintBillofladinglog.Parameters["CREATESHIPMENTDOC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["CREATESHIPMENTDOC_I"] as IDbDataParameter).Value = CREATESHIPMENTDOC_I;

            if (String.IsNullOrEmpty(RETURNTRACKINGURLS_I))
                (sp_PrintBillofladinglog.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = RETURNTRACKINGURLS_I;

            if (String.IsNullOrEmpty(SKIP_CHECK_I))
                (sp_PrintBillofladinglog.Parameters["SKIP_CHECK_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintBillofladinglog.Parameters["SKIP_CHECK_I"] as IDbDataParameter).Value = SKIP_CHECK_I;

            // Execute stored procedure

            sp_PrintBillofladinglog.Prepare();
            sp_PrintBillofladinglog.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<bool> ret;

            if ((sp_PrintBillofladinglog.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (Nullable<bool>)(sp_PrintBillofladinglog.Parameters[""] as IDbDataParameter).Value;

            return ret;

            if ((sp_PrintBillofladinglog.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_PrintBillofladinglog.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public Nullable<bool> PrintConsignmentpackagelabels(string CONSIGNMENT_ID_I,
                                                            string PBHEADID_I,
                                                            string FREID_I,
                                                            string DLVRYMETH_ID_I,
                                                            string RETURNSEQUENCENUMBERS_I,
                                                            string RETURNTRACKINGURLS_I,
                                                            string META_TERID_I,
                                                            string META_PRTID_I,
                                                            string META_EMPID_I,
                                                            Nullable<int> META_NO_COPIES_I,
                                                            string SKIP_CHECK_I,
                                                            ref string ALMID_O)
        {
            if (sp_PrintConsignmentpackagelabels == null)
                CreateSP_PrintConsignmentpackagelabels();

            sp_PrintConsignmentpackagelabels.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_PrintConsignmentpackagelabels.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_PrintConsignmentpackagelabels.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (String.IsNullOrEmpty(FREID_I))
                (sp_PrintConsignmentpackagelabels.Parameters["FREID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["FREID_I"] as IDbDataParameter).Value = FREID_I;

            if (String.IsNullOrEmpty(DLVRYMETH_ID_I))
                (sp_PrintConsignmentpackagelabels.Parameters["DLVRYMETH_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["DLVRYMETH_ID_I"] as IDbDataParameter).Value = DLVRYMETH_ID_I;

            if (String.IsNullOrEmpty(RETURNSEQUENCENUMBERS_I))
                (sp_PrintConsignmentpackagelabels.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["RETURNSEQUENCENUMBERS_I"] as IDbDataParameter).Value = RETURNSEQUENCENUMBERS_I;

            if (String.IsNullOrEmpty(RETURNTRACKINGURLS_I))
                (sp_PrintConsignmentpackagelabels.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["RETURNTRACKINGURLS_I"] as IDbDataParameter).Value = RETURNTRACKINGURLS_I;

            if (String.IsNullOrEmpty(META_TERID_I))
                (sp_PrintConsignmentpackagelabels.Parameters["META_TERID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["META_TERID_I"] as IDbDataParameter).Value = META_TERID_I;

            if (String.IsNullOrEmpty(META_PRTID_I))
                (sp_PrintConsignmentpackagelabels.Parameters["META_PRTID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["META_PRTID_I"] as IDbDataParameter).Value = META_PRTID_I;

            if (String.IsNullOrEmpty(META_EMPID_I))
                (sp_PrintConsignmentpackagelabels.Parameters["META_EMPID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["META_EMPID_I"] as IDbDataParameter).Value = META_EMPID_I;

            if (META_NO_COPIES_I == null)
                (sp_PrintConsignmentpackagelabels.Parameters["META_NO_COPIES_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["META_NO_COPIES_I"] as IDbDataParameter).Value = META_NO_COPIES_I;

            if (String.IsNullOrEmpty(SKIP_CHECK_I))
                (sp_PrintConsignmentpackagelabels.Parameters["SKIP_CHECK_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagelabels.Parameters["SKIP_CHECK_I"] as IDbDataParameter).Value = SKIP_CHECK_I;

            // Execute stored procedure

            sp_PrintConsignmentpackagelabels.Prepare();
            sp_PrintConsignmentpackagelabels.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<bool> ret;

            if ((sp_PrintConsignmentpackagelabels.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (Nullable<bool>)(sp_PrintConsignmentpackagelabels.Parameters[""] as IDbDataParameter).Value;

            return ret;

            if ((sp_PrintConsignmentpackagelabels.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_PrintConsignmentpackagelabels.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public Nullable<bool> PrintConsignmentpackagespec(string DEPARTURE_ID_I,
                                                          string CHECK_DLVRYMETH_ID_I,
                                                          string CHECK_FREID_I,
                                                          string META_DOCSUBTYPE_I,
                                                          string META_TERID_I,
                                                          string META_EMPID_I,
                                                          Nullable<int> META_NO_COPIES_I,
                                                          string CREATECUSTOMERSPEC_I,
                                                          string CREATECARRIERDOC_I,
                                                          string SKIP_CHECK_I,
                                                          ref string ALMID_O)
        {
            if (sp_PrintConsignmentpackagespec == null)
                CreateSP_PrintConsignmentpackagespec();

            sp_PrintConsignmentpackagespec.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_PrintConsignmentpackagespec.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CHECK_DLVRYMETH_ID_I))
                (sp_PrintConsignmentpackagespec.Parameters["CHECK_DLVRYMETH_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["CHECK_DLVRYMETH_ID_I"] as IDbDataParameter).Value = CHECK_DLVRYMETH_ID_I;

            if (String.IsNullOrEmpty(CHECK_FREID_I))
                (sp_PrintConsignmentpackagespec.Parameters["CHECK_FREID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["CHECK_FREID_I"] as IDbDataParameter).Value = CHECK_FREID_I;

            if (String.IsNullOrEmpty(META_DOCSUBTYPE_I))
                (sp_PrintConsignmentpackagespec.Parameters["META_DOCSUBTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["META_DOCSUBTYPE_I"] as IDbDataParameter).Value = META_DOCSUBTYPE_I;

            if (String.IsNullOrEmpty(META_TERID_I))
                (sp_PrintConsignmentpackagespec.Parameters["META_TERID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["META_TERID_I"] as IDbDataParameter).Value = META_TERID_I;

            if (String.IsNullOrEmpty(META_EMPID_I))
                (sp_PrintConsignmentpackagespec.Parameters["META_EMPID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["META_EMPID_I"] as IDbDataParameter).Value = META_EMPID_I;

            if (META_NO_COPIES_I == null)
                (sp_PrintConsignmentpackagespec.Parameters["META_NO_COPIES_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["META_NO_COPIES_I"] as IDbDataParameter).Value = META_NO_COPIES_I;

            if (String.IsNullOrEmpty(CREATECUSTOMERSPEC_I))
                (sp_PrintConsignmentpackagespec.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["CREATECUSTOMERSPEC_I"] as IDbDataParameter).Value = CREATECUSTOMERSPEC_I;

            if (String.IsNullOrEmpty(CREATECARRIERDOC_I))
                (sp_PrintConsignmentpackagespec.Parameters["CREATECARRIERDOC_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["CREATECARRIERDOC_I"] as IDbDataParameter).Value = CREATECARRIERDOC_I;

            if (String.IsNullOrEmpty(SKIP_CHECK_I))
                (sp_PrintConsignmentpackagespec.Parameters["SKIP_CHECK_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_PrintConsignmentpackagespec.Parameters["SKIP_CHECK_I"] as IDbDataParameter).Value = SKIP_CHECK_I;

            // Execute stored procedure

            sp_PrintConsignmentpackagespec.Prepare();
            sp_PrintConsignmentpackagespec.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<bool> ret;

            if ((sp_PrintConsignmentpackagespec.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (Nullable<bool>)(sp_PrintConsignmentpackagespec.Parameters[""] as IDbDataParameter).Value;

            return ret;

            if ((sp_PrintConsignmentpackagespec.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_PrintConsignmentpackagespec.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public void UpdateParcels(string CONSIGNMENT_ID_I,
                                  string PBHEADID_I,
                                  ref string ALMID_O,
                                  string CALLEDBY)
        {
            if (sp_UpdateParcels == null)
                CreateSP_UpdateParcels();

            sp_UpdateParcels.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_UpdateParcels.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_UpdateParcels.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_UpdateParcels.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_UpdateParcels.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (String.IsNullOrEmpty(CALLEDBY))
                (sp_UpdateParcels.Parameters["CALLEDBY"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_UpdateParcels.Parameters["CALLEDBY"] as IDbDataParameter).Value = CALLEDBY;

            // Execute stored procedure

            sp_UpdateParcels.Prepare();
            sp_UpdateParcels.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_UpdateParcels.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_UpdateParcels.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public void UpdateShipment(string CONSIGNMENT_ID_I,
                                   ref string ALMID_O,
                                   string CALLEDBY,
                                   string AGGREGATEPARCELS_I)
        {
            if (sp_UpdateShipment == null)
                CreateSP_UpdateShipment();

            sp_UpdateShipment.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_UpdateShipment.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_UpdateShipment.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(CALLEDBY))
                (sp_UpdateShipment.Parameters["CALLEDBY"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_UpdateShipment.Parameters["CALLEDBY"] as IDbDataParameter).Value = CALLEDBY;

            if (String.IsNullOrEmpty(AGGREGATEPARCELS_I))
                (sp_UpdateShipment.Parameters["AGGREGATEPARCELS_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_UpdateShipment.Parameters["AGGREGATEPARCELS_I"] as IDbDataParameter).Value = AGGREGATEPARCELS_I;

            // Execute stored procedure

            sp_UpdateShipment.Prepare();
            sp_UpdateShipment.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_UpdateShipment.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_UpdateShipment.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }
    }
}
