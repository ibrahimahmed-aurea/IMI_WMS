/*
  File           : HapiRcv.cs

  Description    : Wrapper class for Oracle package HAPI_RCV.
                   This code was generated, do not edit.

HAPI_RCV.READ cannot be generated since the following
parameter types are not currently supported:
    FORCE PL/SQL BOOLEAN

*/
using System;
using System.Data;
using System.Data.Common;
using Imi.Framework.Job.Data;

namespace Imi.Wms.PLSQLInterface
{
    class HapiRcv
    {
        private IDbConnectionProvider connectionProvider;

        public string _Debug()
        {
            return "Package        : HAPI_RCV\r\n" +
                    "Generated on   : 2005-05-11 16:21:05\r\n" +
                    "Generated by   : IMINT1\\olla@IMIPC1091\r\n" +
                    "Generated in   : C:\\TEMP\\wscc\r\n";
        }

        public HapiRcv(IDbConnectionProvider connectionProvider)
        {
            this.connectionProvider = connectionProvider;
        }

        private IDbCommand sp_NewHapircv;
        private IDbCommand sp_SelectHapiObject;
        private IDbCommand sp_TransactionsRemove;
        private IDbCommand sp_TransactionsReset;
        private IDbCommand sp_TransactionsResetAll;

        // ----------------------------------------------------------------------------

        private void CreateSP_NewHapircv()
        {
            IDbDataParameter p;

            sp_NewHapircv = connectionProvider.GetConnection().CreateCommand();
            sp_NewHapircv.CommandText = "HAPI_RCV.NEW_HAPIRCV";
            sp_NewHapircv.CommandType = System.Data.CommandType.StoredProcedure;

            p = sp_NewHapircv.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "CHANNEL_ID_I";
            p.Direction = ParameterDirection.Input;
            sp_NewHapircv.Parameters.Add(p);

            p = sp_NewHapircv.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "TRANSACTION_ID_I";
            p.Direction = ParameterDirection.Input;
            sp_NewHapircv.Parameters.Add(p);

            p = sp_NewHapircv.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "HAPIOBJECTNAME_I";
            p.Direction = ParameterDirection.Input;
            sp_NewHapircv.Parameters.Add(p);

            p = sp_NewHapircv.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "COMPANY_ID_O";
            p.Direction = ParameterDirection.Output;
            sp_NewHapircv.Parameters.Add(p);

            p = sp_NewHapircv.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "HAPIRCV_ID_O";
            p.Direction = ParameterDirection.Output;
            sp_NewHapircv.Parameters.Add(p);

            p = sp_NewHapircv.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "ALMID_O";
            p.Direction = ParameterDirection.Output;
            sp_NewHapircv.Parameters.Add(p);

        }

        private void CreateSP_SelectHapiObject()
        {
            sp_SelectHapiObject = connectionProvider.GetConnection().CreateCommand(); 
            sp_SelectHapiObject.CommandText = "HAPI_RCV.SELECT_HAPI_OBJECT";
            sp_SelectHapiObject.CommandType = System.Data.CommandType.StoredProcedure;
        }

        private void CreateSP_TransactionsRemove()
        {
            IDbDataParameter p;

            sp_TransactionsRemove = connectionProvider.GetConnection().CreateCommand();
            sp_TransactionsRemove.CommandText = "HAPI_RCV.TRANSACTIONS_REMOVE";
            sp_TransactionsRemove.CommandType = System.Data.CommandType.StoredProcedure;

            p = sp_TransactionsRemove.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "HAPIRCV_ID_I";
            p.Direction = ParameterDirection.Input;
            sp_TransactionsRemove.Parameters.Add(p);


            p = sp_TransactionsRemove.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "ALMID_O";
            p.Direction = ParameterDirection.Output;
            sp_TransactionsRemove.Parameters.Add(p);

        }

        private void CreateSP_TransactionsReset()
        {
            IDbDataParameter p;

            sp_TransactionsReset = connectionProvider.GetConnection().CreateCommand();
            sp_TransactionsReset.CommandText = "HAPI_RCV.TRANSACTIONS_RESET";
            sp_TransactionsReset.CommandType = System.Data.CommandType.StoredProcedure;

            p = sp_TransactionsReset.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "HAPIRCV_ID_I";
            p.Direction = ParameterDirection.Input;
            sp_TransactionsReset.Parameters.Add(p);


            p = sp_TransactionsReset.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "ALMID_O";
            p.Direction = ParameterDirection.Output;
            sp_TransactionsReset.Parameters.Add(p);
        }

        private void CreateSP_TransactionsResetAll()
        {
            IDbDataParameter p;

            sp_TransactionsResetAll = connectionProvider.GetConnection().CreateCommand();
            sp_TransactionsResetAll.CommandText = "HAPI_RCV.TRANSACTIONS_RESET_ALL";
            sp_TransactionsResetAll.CommandType = System.Data.CommandType.StoredProcedure;

            p = sp_TransactionsResetAll.CreateParameter();
            p.DbType = DbType.String;
            p.Size = 255;
            p.ParameterName = "ALMID_O";
            p.Direction = ParameterDirection.Output;
            sp_TransactionsResetAll.Parameters.Add(p);
        }

        // ----------------------------------------------------------------------------

        public void NewHapircv(string CHANNEL_ID_I,
                               string TRANSACTION_ID_I, 
                           string HAPIOBJECTNAME_I, 
                           ref string COMPANY_ID_O, 
                           ref string HAPIRCV_ID_O, 
                           ref string ALMID_O)
        {
            if (sp_NewHapircv == null)
                CreateSP_NewHapircv();

            sp_NewHapircv.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CHANNEL_ID_I == "")
                (sp_NewHapircv.Parameters["CHANNEL_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewHapircv.Parameters["CHANNEL_ID_I"] as IDbDataParameter).Value = CHANNEL_ID_I;

            if (TRANSACTION_ID_I == "")
                (sp_NewHapircv.Parameters["TRANSACTION_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewHapircv.Parameters["TRANSACTION_ID_I"] as IDbDataParameter).Value = TRANSACTION_ID_I;

            if (HAPIOBJECTNAME_I == "")
                (sp_NewHapircv.Parameters["HAPIOBJECTNAME_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewHapircv.Parameters["HAPIOBJECTNAME_I"] as IDbDataParameter).Value = HAPIOBJECTNAME_I;

            // Execute stored procedure

            sp_NewHapircv.Prepare();
            sp_NewHapircv.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_NewHapircv.Parameters["COMPANY_ID_O"] as IDbDataParameter).Value == DBNull.Value)
                COMPANY_ID_O = "";
            else
                COMPANY_ID_O = (sp_NewHapircv.Parameters["COMPANY_ID_O"] as IDbDataParameter).Value.ToString();

            if ((sp_NewHapircv.Parameters["HAPIRCV_ID_O"] as IDbDataParameter).Value == DBNull.Value)
                HAPIRCV_ID_O = "";
            else
                HAPIRCV_ID_O = (sp_NewHapircv.Parameters["HAPIRCV_ID_O"] as IDbDataParameter).Value.ToString();

            if ((sp_NewHapircv.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = "";
            else
                ALMID_O = (sp_NewHapircv.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public void SelectHapiObject()
        {
            if (sp_SelectHapiObject == null)
                CreateSP_SelectHapiObject();

            sp_SelectHapiObject.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            // Execute stored procedure

            sp_SelectHapiObject.Prepare();
            sp_SelectHapiObject.ExecuteNonQuery();

            // Set Out Parameters
        }

        public void TransactionsRemove(string HAPIRCV_ID_I,
                                       ref string ALMID_O)
        {
            if (sp_TransactionsRemove == null)
                CreateSP_TransactionsRemove();

            sp_TransactionsRemove.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (HAPIRCV_ID_I == "")
                (sp_TransactionsRemove.Parameters["HAPIRCV_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_TransactionsRemove.Parameters["HAPIRCV_ID_I"] as IDbDataParameter).Value = HAPIRCV_ID_I;

            // Execute stored procedure

            sp_TransactionsRemove.Prepare();
            sp_TransactionsRemove.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_TransactionsRemove.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = "";
            else
                ALMID_O = (sp_TransactionsRemove.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public void TransactionsReset(string HAPIRCV_ID_I,
                                      ref string ALMID_O)
        {
            if (sp_TransactionsReset == null)
                CreateSP_TransactionsReset();

            sp_TransactionsReset.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (HAPIRCV_ID_I == "")
                (sp_TransactionsReset.Parameters["HAPIRCV_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_TransactionsReset.Parameters["HAPIRCV_ID_I"] as IDbDataParameter).Value = HAPIRCV_ID_I;

            // Execute stored procedure

            sp_TransactionsReset.Prepare();
            sp_TransactionsReset.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_TransactionsReset.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = "";
            else
                ALMID_O = (sp_TransactionsReset.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public void TransactionsResetAll(ref string ALMID_O)
        {
            if (sp_TransactionsResetAll == null)
                CreateSP_TransactionsResetAll();

            sp_TransactionsResetAll.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            // Execute stored procedure

            sp_TransactionsResetAll.Prepare();
            sp_TransactionsResetAll.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_TransactionsResetAll.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = "";
            else
                ALMID_O = (sp_TransactionsResetAll.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }
    }
}
