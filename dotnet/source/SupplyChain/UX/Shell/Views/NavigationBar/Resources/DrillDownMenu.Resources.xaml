<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Imi.Framework.Wpf.Controls;assembly=Imi.Framework.Wpf.Controls"
    xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:controls="clr-namespace:Imi.Framework.Wpf.Controls;assembly=Imi.Framework.Wpf.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../../Resources/Graphics.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <shared:SlideTransition x:Key="SlideTransition" IsFromContentPushed="True" Duration="00:00:00.3"/>

    <Style x:Key="KeyTipBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolTipBorderNormalBrushKey}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolTipBorderNormalThicknessKey}}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,16,0"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="CornerRadius" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolTipBorderNormalCornerRadiusKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ToolTipBackgroundNormalBrushKey}}"/>
    </Style>

    <Style x:Key="KeyTipStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Style="{StaticResource KeyTipBorderStyle}">
                        <TextBlock Text="{TemplateBinding Text}" Margin="1,0,1,0" Foreground="{DynamicResource {x:Static themes:AssetResourceKeys.ToolTipForegroundNormalBrushKey}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MenuTextBox}" BasedOn="{x:Null}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundNormalBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBackgroundNormalBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <ControlTemplate.Triggers>
                        <!--
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
            -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="searchButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Image x:Name="Image" Grid.Column="1" Visibility="Visible" Width="12" Height="12" Source="{StaticResource LookingGlassImage}" Margin="0,0,3,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="closeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Path Width="10" Margin="2,2,2,2" Height="10" Stretch="Fill" StrokeLineJoin="Miter" Stroke="#FF000000" Fill="#FFFFFFFF" Data="F1 M 288,224L 384,128L 448,192L 320,320L 448,448L 384,512L 252.061,380.061L 124,508.121L 63.9394,448.061L 192,320L 64,192L 128,128L 256,256L 288,224 Z " StrokeThickness="1" x:Name="path"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="Silver" TargetName="path"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" Value="Black" TargetName="path"/>
                            <Setter Property="Stroke" Value="Silver" TargetName="path"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="infoTextBoxStyle" TargetType="{x:Type local:InfoTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InfoTextBox}">
                    <ControlTemplate.Resources>

                        <Storyboard x:Key="enterGotFocus" >
                            <DoubleAnimation Duration="0:0:0.2" To=".33"
			  	Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus" >
                            <DoubleAnimation Duration="0:0:0.4"
			  	Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>

                        <Storyboard x:Key="enterHasText" >
                            <DoubleAnimation Duration="0:0:0.2" From=".33" To="0"
			  	Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitHasText" >
                            <DoubleAnimation Duration="0:0:0.4"
			  	Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Border Name="Bd"
    Background="{TemplateBinding Background}"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Decorator x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="3"/>
                            <TextBlock Text="{TemplateBinding TextBoxInfo}" x:Name="Message"
  Foreground="Navy" IsHitTestVisible="False"
  FontStyle="Italic" Opacity="0.67" HorizontalAlignment="Left" VerticalAlignment="Center"
  Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>

                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Width -->
                        <Trigger Property="Width"
     Value="Auto">
                            <Setter Property="MinWidth"
    Value="100"/>
                        </Trigger>
                        <!-- Height -->
                        <Trigger Property="Height"
     Value="Auto">
                            <Setter Property="MinHeight"
    Value="20"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="folderTemplate" >
        <Border x:Name="grid" SnapsToDevicePixels="True" FocusVisualStyle="{x:Null}" Width="Auto" Height="20" CornerRadius="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderNormalCornerRadiusKey}}" BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderNormalThicknessKey}}" Background="Transparent" BorderBrush="Transparent">
            <Border x:Name="innerBorder" Padding="5,0,5,0" SnapsToDevicePixels="True" Background="Transparent" BorderBrush="Transparent" CornerRadius="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderNormalCornerRadiusKey}}" BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderNormalThicknessKey}}">
                <Grid ToolTip="{Binding Path=Caption}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Image x:Name="padlockGrid" Grid.Column="0" Height="14" Width="14" Margin="0,0,2,0" Visibility="Collapsed" Source="pack://application:,,,/Imi.SupplyChain.UX.Shell;component/Resources/Images/Lock14.png"/>

                    <Path x:Name="arrow" Grid.Column="2" Stretch="Fill" Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" Width="6" Height="8" Data="M12.5,6.5 L12.5,14 19.305204,10.046559 z" StrokeThickness="1" HorizontalAlignment="Right" Margin="5,0,0,0" VerticalAlignment="Center"/>
                    <TextBlock x:Name="Caption" Grid.Column="1" Text="{Binding Path=Caption}" Width="Auto" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Black" TextTrimming="CharacterEllipsis"/>
                    <local:MenuTextBox x:Name="PART_CaptionEdit" Grid.Column="1" Visibility="Collapsed" Text="{Binding Path=Caption, Mode=TwoWay}" EditComplete="{Binding Path=IsReadOnly, Mode=TwoWay}" Width="Auto" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FF2A2A2A"/>
                    <TextBox x:Name="keyTip" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" Text="{Binding Path=KeyTipAccessText}" Style="{StaticResource KeyTipStyle}"/>
                </Grid>
            </Border>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                <Setter Property="BorderBrush" TargetName="innerBorder" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderHighlightedBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderHighlightedBrushKey}}"/>
                <Setter Property="Background" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBackgroundHighlightedBrushKey}}"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="innerBorder" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderHighlightedBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderHighlightedBrushKey}}"/>
                <Setter Property="Background" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBackgroundHighlightedBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsStylusOver" Value="False"/>
            <Trigger Property="MinWidth" Value="0"/>
            <DataTrigger Binding="{Binding IsAuthorized}" Value="false">
                <Setter TargetName="Caption" Property="Opacity" Value="0.5"/>
                <Setter TargetName="padlockGrid" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEnabled}" Value="false">
                <Setter TargetName="Caption" Property="Opacity" Value="0.5"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsKeyTipModeActive}" Value="true">
                <Setter TargetName="keyTip" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsReadOnly}" Value="false">
                <Setter TargetName="Caption" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_CaptionEdit" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="backItemTemplate">
        <Border Width="Auto" Height="20" BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderNormalThicknessKey}}" SnapsToDevicePixels="True" Background="Transparent" BorderBrush="Transparent" CornerRadius="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderNormalCornerRadiusKey}}" x:Name="grid">
            <Border x:Name="innerBorder" Padding="5,0,5,0" SnapsToDevicePixels="True" Background="Transparent" BorderBrush="Transparent" CornerRadius="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderNormalCornerRadiusKey}}" BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderNormalThicknessKey}}">
                <Grid ToolTip="{Binding Path=Caption}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Path Stroke="{DynamicResource {x:Static themes:AssetResourceKeys.ControlForegroundDisabledBrushKey}}" Stretch="Fill" Width="6" Height="8" Data="M12.5,6.5 L12.5,14 19.5,10 z" StrokeThickness="1" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Margin="0,0,5,0" VerticalAlignment="Center" x:Name="path" Grid.Column="0">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <TextBlock x:Name="Caption" Grid.Column="1" Text="{Binding Path=Caption}" Width="Auto" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Black" TextTrimming="CharacterEllipsis"/>
                    <TextBox x:Name="keyTip" Grid.Column="1" Visibility="Collapsed" Text="{Binding Path=KeyTipAccessText}" Style="{StaticResource KeyTipStyle}"/>
                </Grid>
            </Border>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                <Setter Property="BorderBrush" TargetName="innerBorder" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderHighlightedBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderHighlightedBrushKey}}"/>
                <Setter Property="Background" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBackgroundHighlightedBrushKey}}"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="innerBorder" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderHighlightedBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderHighlightedBrushKey}}"/>
                <Setter Property="Background" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBackgroundHighlightedBrushKey}}"/>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="menuItemTemplate">
        <Border x:Name="grid" SnapsToDevicePixels="True" Width="Auto" Height="20" BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderNormalThicknessKey}}" Background="Transparent" BorderBrush="Transparent" CornerRadius="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderNormalCornerRadiusKey}}" FocusVisualStyle="{x:Null}">
            <Border x:Name="innerBorder" Padding="5,0,5,0" SnapsToDevicePixels="True" Background="Transparent" BorderBrush="Transparent" CornerRadius="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderNormalCornerRadiusKey}}" BorderThickness="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderNormalThicknessKey}}">
                <Grid ToolTip="{Binding Path=Caption}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Image x:Name="padlockGrid" Grid.Column="0" Height="14" Width="14" Margin="0,0,2,0" Visibility="Collapsed" Source="pack://application:,,,/Imi.SupplyChain.UX.Shell;component/Resources/Images/Lock14.png"/>

                    <TextBlock x:Name="Caption" Grid.Column="1" Text="{Binding Path=Caption}" Width="Auto" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="Black" TextTrimming="CharacterEllipsis"/>
                    <local:MenuTextBox x:Name="PART_CaptionEdit" Grid.Column="1" Visibility="Collapsed" Text="{Binding Path=Caption, Mode=TwoWay}"  EditComplete="{Binding Path=IsReadOnly, Mode=TwoWay}" Width="Auto" Height="Auto" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FF2A2A2A"/>
                    <TextBox x:Name="keyTip" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" Text="{Binding Path=KeyTipAccessText}" Style="{StaticResource KeyTipStyle}"/>
                </Grid>
            </Border>
        </Border>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type controls:DrillDownMenu}},Path=HighlightSelected}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderBrush" TargetName="innerBorder" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderHighlightedBrushKey}}"/>
                    <Setter Property="BorderBrush" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderHighlightedBrushKey}}"/>
                    <Setter Property="Background" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBackgroundHighlightedBrushKey}}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                <Setter Property="BorderBrush" TargetName="innerBorder" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderHighlightedBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderHighlightedBrushKey}}"/>
                <Setter Property="Background" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBackgroundHighlightedBrushKey}}"/>
            </DataTrigger>-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="innerBorder" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemInnerBorderHighlightedBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBorderHighlightedBrushKey}}"/>
                <Setter Property="Background" TargetName="grid" Value="{DynamicResource {x:Static themes:AssetResourceKeys.MenuItemBackgroundHighlightedBrushKey}}"/>
            </Trigger>
            <Trigger Property="MinWidth" Value="0"/>
            <DataTrigger Binding="{Binding IsAuthorized}" Value="false">
                <Setter TargetName="Caption" Property="Opacity" Value="0.5"/>
                <Setter TargetName="padlockGrid" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEnabled}" Value="false">
                <Setter TargetName="Caption" Property="Opacity" Value="0.5"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsKeyTipModeActive}" Value="true">
                <Setter TargetName="keyTip" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsReadOnly}" Value="false">
                <Setter TargetName="Caption" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_CaptionEdit" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <local:DrillDownMenuItemTemplateSelector x:Key="menuItemTemplateSelector"
                                           MenuItemTemplate="{StaticResource menuItemTemplate}"
                                           FolderTemplate="{StaticResource folderTemplate}"
                                           BackButtonTemplate="{StaticResource backItemTemplate}"/>

    <ControlTemplate x:Key="ListBoxTemplate" TargetType="{x:Type ListBox}">
        <Border SnapsToDevicePixels="True">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}" HorizontalScrollBarVisibility="Disabled">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="x" ContextMenu="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:DrillDownMenu}},Path=ItemsContextMenu}">
                        <Border FocusVisualStyle="{x:Null}" CornerRadius="4,4,4,4" Margin="1,0,1,0" Background="{TemplateBinding Background}">
                            <ContentPresenter Height="20" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border FocusVisualStyle="{x:Null}" CornerRadius="4,4,4,4" Margin="1,0,1,0" Background="{TemplateBinding Background}">
                        <ContentPresenter Height="20" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4,4,4,4" Padding="{TemplateBinding Padding}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
        <StackPanel IsItemsHost="True"/>
    </ItemsPanelTemplate>

    <Style TargetType="{x:Type local:DrillDownMenu}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static themes:AssetResourceKeys.ListBackgroundNormalBrushKey}}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}"/>
        <Setter Property="ItemsContainerTemplate" Value="{StaticResource ListBoxTemplate}"/>
        <Setter Property="ItemTemplateSelector" Value="{StaticResource menuItemTemplateSelector}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ItemsPanel" Value="{StaticResource ItemsPanelTemplate1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DrillDownMenu}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterHasText" >
                            <DoubleAnimation Duration="0:0:0.2" From="1.0" To="0"
    Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SearchButton"/>
                            <DoubleAnimation Duration="0:0:0.4" From="0" To="1.0"
    Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ClearButton"/>
                        </Storyboard>
                        <Storyboard x:Key="exitHasText" >
                            <DoubleAnimation Duration="0:0:0.2" From="1.0" To="0"
    Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ClearButton"/>
                            <DoubleAnimation Duration="0:0:0.4" From="0" To="1.0"
    Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SearchButton"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border SnapsToDevicePixels="True" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0,0,0,0" Padding="0,0,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="23"/>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <shared:TransitionPresenter x:Name="PART_TransitionPresenter" Grid.Row="3" Grid.RowSpan="1" Transition="{StaticResource SlideTransition}"/>
                            <Button x:Name="BackButton" Grid.Row="2" Visibility="Collapsed"/>
                            <Label HorizontalAlignment="Stretch" Grid.Row="1" x:Name="Header" Style="{StaticResource HeaderLabelStyle}" VerticalAlignment="Top" Content="" FontWeight="Bold" HorizontalContentAlignment="Center" Padding="0,0,5,5" VerticalContentAlignment="Center"/>
                            <Border Name="SearchBd" BorderBrush="{DynamicResource {x:Static themes:AssetResourceKeys.EditBorderNormalBrushKey}}" BorderThickness="1" Margin="1">
                                <Grid HorizontalAlignment="Stretch" Width="Auto">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <local:InfoTextBox x:Name="SearchTextBox" TextBoxInfo="{Binding Path=SearchInfoText, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0" VerticalAlignment="Top" Height="20" Grid.ColumnSpan="1"/>
                                    <Button x:Name="SearchButton" Opacity="1.0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Button" Grid.Column="1" Style="{StaticResource searchButtonStyle}"/>
                                    <!--<Button x:Name="ClearButton" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Button" Grid.Column="1" Style="{StaticResource closeButtonStyle}"/>-->
                                    <Button x:Name="ClearButton" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="3" Grid.Column="1"
									Style="{StaticResource {x:Static themes:SharedResourceKeys.EmbeddedButtonBaseOverrideStyleKey}}"
									ContentTemplate="{StaticResource {x:Static themes:SharedResourceKeys.CloseGlyphTemplateKey}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="SearchTextBox" Property="HasText" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsAtTop" Value="true">
                            <Setter Property="IsEnabled" TargetName="BackButton" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
