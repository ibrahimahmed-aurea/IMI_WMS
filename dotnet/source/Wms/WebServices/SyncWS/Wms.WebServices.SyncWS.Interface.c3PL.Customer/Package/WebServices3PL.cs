/*
  File           : WebServices3pl.cs

  Description    : Wrapper class for Oracle package WEB_SERVICES_3PL.
                   This code was generated by the PackageGenerator, do not edit.

  Generated with Commandline: WEB_SERVICES_3PL WebServices3PL.cs Imi.Wms.WebServices.SyncWS.Interface.c3PL.Customer 

*/
#define ODP_NET
using System;
using System.Data;
#if ODP_NET
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
#else
using System.Data.OracleClient;
#endif
using Imi.Framework.Job.Data;

namespace Imi.Wms.WebServices.SyncWS.Interface.c3PL.Customer
{
  public partial class WebServices3pl
  {
    private IDbConnectionProvider connectionProvider;

    public string _Debug()
    {
      return  "Package        : WEB_SERVICES_3PL\r\n" +
              "Generated on   : 2008-09-19 11:25:42\r\n" +
              "Generated by   : SWG\\jopl@IMIPC1128\r\n" +
              "Generated in   : C:\\project\\views\\jopl_trunk_DOTNET_ss\\dotnet\\source\\Wms\\WebServices\\SyncWS\\Wms.WebServices.SyncWS.Interface.c3PL.Customer\\Package\r\n";
    }

    public WebServices3pl(IDbConnectionProvider connectionProvider)
    {
      this.connectionProvider = connectionProvider;
    }

    private IDbCommand sp_Findbarcodebyproduct;
    private IDbCommand sp_Findcustomersbyid;
    private IDbCommand sp_Findpartybyid;
    private IDbCommand sp_Findproductbydescription;
    private IDbCommand sp_Findproductbypartno;
    private IDbCommand sp_Findwarehousebyclient;
    private IDbCommand sp_Getaddresses;
    private IDbCommand sp_Getco;
    private IDbCommand sp_Getcoline;
    private IDbCommand sp_Getpartyaddress;
    private IDbCommand sp_Getpo;
    private IDbCommand sp_Getpoline;
    private IDbCommand sp_Getproductavail;
    private IDbCommand sp_Getvendorpartno;
    private IDbCommand sp_Saveco;
    private IDbCommand sp_Savecoline;
    private IDbCommand sp_Savepo;
    private IDbCommand sp_Savepoline;
    private IDbCommand sp_SignalProcess;
    private IDbCommand currentCommand;
    private object syncLock = new object();

    // ----------------------------------------------------------------------------

    private void CreateSP_Findbarcodebyproduct()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Findbarcodebyproduct = connectionProvider.GetConnection().CreateCommand();
      sp_Findbarcodebyproduct.CommandText = "WEB_SERVICES_3PL.FINDBARCODEBYPRODUCT";
      sp_Findbarcodebyproduct.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Findbarcodebyproduct).BindByName = true;
#endif

      p = sp_Findbarcodebyproduct.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Findbarcodebyproduct.Parameters.Add( p );

      p = sp_Findbarcodebyproduct.CreateParameter();
      p.ParameterName = "PARTNO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Findbarcodebyproduct.Parameters.Add( p );

      oP = sp_Findbarcodebyproduct.CreateParameter() as OracleParameter;
      oP.ParameterName = "BARCODE_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Findbarcodebyproduct.Parameters.Add( oP );
    }

    private void CreateSP_Findcustomersbyid()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Findcustomersbyid = connectionProvider.GetConnection().CreateCommand();
      sp_Findcustomersbyid.CommandText = "WEB_SERVICES_3PL.FINDCUSTOMERSBYID";
      sp_Findcustomersbyid.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Findcustomersbyid).BindByName = true;
#endif

      p = sp_Findcustomersbyid.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Findcustomersbyid.Parameters.Add( p );

      p = sp_Findcustomersbyid.CreateParameter();
      p.ParameterName = "CUSTOMERID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Findcustomersbyid.Parameters.Add( p );

      oP = sp_Findcustomersbyid.CreateParameter() as OracleParameter;
      oP.ParameterName = "CUSTOMER_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Findcustomersbyid.Parameters.Add( oP );
    }

    private void CreateSP_Findpartybyid()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Findpartybyid = connectionProvider.GetConnection().CreateCommand();
      sp_Findpartybyid.CommandText = "WEB_SERVICES_3PL.FINDPARTYBYID";
      sp_Findpartybyid.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Findpartybyid).BindByName = true;
#endif

      p = sp_Findpartybyid.CreateParameter();
      p.ParameterName = "PARTYID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Findpartybyid.Parameters.Add( p );

      p = sp_Findpartybyid.CreateParameter();
      p.ParameterName = "PARTY_QUALIFIER_I";
      p.DbType = DbType.String;
      p.Size = 3;
      p.Direction = ParameterDirection.Input;
      sp_Findpartybyid.Parameters.Add( p );

      p = sp_Findpartybyid.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Findpartybyid.Parameters.Add( p );

      oP = sp_Findpartybyid.CreateParameter() as OracleParameter;
      oP.ParameterName = "PARTY_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Findpartybyid.Parameters.Add( oP );
    }

    private void CreateSP_Findproductbydescription()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Findproductbydescription = connectionProvider.GetConnection().CreateCommand();
      sp_Findproductbydescription.CommandText = "WEB_SERVICES_3PL.FINDPRODUCTBYDESCRIPTION";
      sp_Findproductbydescription.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Findproductbydescription).BindByName = true;
#endif

      p = sp_Findproductbydescription.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Findproductbydescription.Parameters.Add( p );

      p = sp_Findproductbydescription.CreateParameter();
      p.ParameterName = "PARTDESCR_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Findproductbydescription.Parameters.Add( p );

      oP = sp_Findproductbydescription.CreateParameter() as OracleParameter;
      oP.ParameterName = "PRODUCT_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Findproductbydescription.Parameters.Add( oP );
    }

    private void CreateSP_Findproductbypartno()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Findproductbypartno = connectionProvider.GetConnection().CreateCommand();
      sp_Findproductbypartno.CommandText = "WEB_SERVICES_3PL.FINDPRODUCTBYPARTNO";
      sp_Findproductbypartno.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Findproductbypartno).BindByName = true;
#endif

      p = sp_Findproductbypartno.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Findproductbypartno.Parameters.Add( p );

      p = sp_Findproductbypartno.CreateParameter();
      p.ParameterName = "PARTNO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Findproductbypartno.Parameters.Add( p );

      oP = sp_Findproductbypartno.CreateParameter() as OracleParameter;
      oP.ParameterName = "PRODUCT_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Findproductbypartno.Parameters.Add( oP );
    }

    private void CreateSP_Findwarehousebyclient()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Findwarehousebyclient = connectionProvider.GetConnection().CreateCommand();
      sp_Findwarehousebyclient.CommandText = "WEB_SERVICES_3PL.FINDWAREHOUSEBYCLIENT";
      sp_Findwarehousebyclient.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Findwarehousebyclient).BindByName = true;
#endif

      p = sp_Findwarehousebyclient.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Findwarehousebyclient.Parameters.Add( p );

      oP = sp_Findwarehousebyclient.CreateParameter() as OracleParameter;
      oP.ParameterName = "WAREHOUSE_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Findwarehousebyclient.Parameters.Add( oP );
    }

    private void CreateSP_Getaddresses()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Getaddresses = connectionProvider.GetConnection().CreateCommand();
      sp_Getaddresses.CommandText = "WEB_SERVICES_3PL.GETADDRESSES";
      sp_Getaddresses.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Getaddresses).BindByName = true;
#endif

      p = sp_Getaddresses.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Getaddresses.Parameters.Add( p );

      p = sp_Getaddresses.CreateParameter();
      p.ParameterName = "CUSTOMERID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Getaddresses.Parameters.Add( p );

      oP = sp_Getaddresses.CreateParameter() as OracleParameter;
      oP.ParameterName = "ADDRESS_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Getaddresses.Parameters.Add( oP );
    }

    private void CreateSP_Getco()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Getco = connectionProvider.GetConnection().CreateCommand();
      sp_Getco.CommandText = "WEB_SERVICES_3PL.GETCO";
      sp_Getco.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Getco).BindByName = true;
#endif

      p = sp_Getco.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Getco.Parameters.Add( p );

      p = sp_Getco.CreateParameter();
      p.ParameterName = "ORDERNO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Getco.Parameters.Add( p );

      p = sp_Getco.CreateParameter();
      p.ParameterName = "YOURCONO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Getco.Parameters.Add( p );

      p = sp_Getco.CreateParameter();
      p.ParameterName = "FROM_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_Getco.Parameters.Add( p );

      p = sp_Getco.CreateParameter();
      p.ParameterName = "TO_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_Getco.Parameters.Add( p );

      p = sp_Getco.CreateParameter();
      p.ParameterName = "MARK_I";
      p.DbType = DbType.String;
      p.Size = 400;
      p.Direction = ParameterDirection.Input;
      sp_Getco.Parameters.Add( p );

      p = sp_Getco.CreateParameter();
      p.ParameterName = "ORDERSFROMHISTORY_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Getco.Parameters.Add( p );

      p = sp_Getco.CreateParameter();
      p.ParameterName = "ORDERSFROMPRODUCTION_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Getco.Parameters.Add( p );

      oP = sp_Getco.CreateParameter() as OracleParameter;
      oP.ParameterName = "CO_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Getco.Parameters.Add( oP );
    }

    private void CreateSP_Getcoline()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Getcoline = connectionProvider.GetConnection().CreateCommand();
      sp_Getcoline.CommandText = "WEB_SERVICES_3PL.GETCOLINE";
      sp_Getcoline.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Getcoline).BindByName = true;
#endif

      p = sp_Getcoline.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Getcoline.Parameters.Add( p );

      p = sp_Getcoline.CreateParameter();
      p.ParameterName = "CONO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Getcoline.Parameters.Add( p );

      p = sp_Getcoline.CreateParameter();
      p.ParameterName = "ORDERSFROMHISTORY_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Getcoline.Parameters.Add( p );

      p = sp_Getcoline.CreateParameter();
      p.ParameterName = "ORDERSFROMPRODUCTION_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Getcoline.Parameters.Add( p );

      oP = sp_Getcoline.CreateParameter() as OracleParameter;
      oP.ParameterName = "COLINE_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Getcoline.Parameters.Add( oP );
    }

    private void CreateSP_Getpartyaddress()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Getpartyaddress = connectionProvider.GetConnection().CreateCommand();
      sp_Getpartyaddress.CommandText = "WEB_SERVICES_3PL.GETPARTYADDRESS";
      sp_Getpartyaddress.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Getpartyaddress).BindByName = true;
#endif

      p = sp_Getpartyaddress.CreateParameter();
      p.ParameterName = "PARTYID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Getpartyaddress.Parameters.Add( p );

      p = sp_Getpartyaddress.CreateParameter();
      p.ParameterName = "PARTY_QUALIFIER_I";
      p.DbType = DbType.String;
      p.Size = 3;
      p.Direction = ParameterDirection.Input;
      sp_Getpartyaddress.Parameters.Add( p );

      p = sp_Getpartyaddress.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Getpartyaddress.Parameters.Add( p );

      oP = sp_Getpartyaddress.CreateParameter() as OracleParameter;
      oP.ParameterName = "PARTY_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Getpartyaddress.Parameters.Add( oP );
    }

    private void CreateSP_Getpo()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Getpo = connectionProvider.GetConnection().CreateCommand();
      sp_Getpo.CommandText = "WEB_SERVICES_3PL.GETPO";
      sp_Getpo.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Getpo).BindByName = true;
#endif

      p = sp_Getpo.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Getpo.Parameters.Add( p );

      p = sp_Getpo.CreateParameter();
      p.ParameterName = "ORDERNO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Getpo.Parameters.Add( p );

      p = sp_Getpo.CreateParameter();
      p.ParameterName = "FROM_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_Getpo.Parameters.Add( p );

      p = sp_Getpo.CreateParameter();
      p.ParameterName = "TO_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_Getpo.Parameters.Add( p );

      p = sp_Getpo.CreateParameter();
      p.ParameterName = "ORDERSFROMHISTORY_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Getpo.Parameters.Add( p );

      p = sp_Getpo.CreateParameter();
      p.ParameterName = "ORDERSFROMPRODUCTION_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Getpo.Parameters.Add( p );

      oP = sp_Getpo.CreateParameter() as OracleParameter;
      oP.ParameterName = "PO_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Getpo.Parameters.Add( oP );
    }

    private void CreateSP_Getpoline()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Getpoline = connectionProvider.GetConnection().CreateCommand();
      sp_Getpoline.CommandText = "WEB_SERVICES_3PL.GETPOLINE";
      sp_Getpoline.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Getpoline).BindByName = true;
#endif

      p = sp_Getpoline.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Getpoline.Parameters.Add( p );

      p = sp_Getpoline.CreateParameter();
      p.ParameterName = "POID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Getpoline.Parameters.Add( p );

      p = sp_Getpoline.CreateParameter();
      p.ParameterName = "POSEQ_I";
      p.DbType = DbType.Decimal;
      p.Precision = 3;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Getpoline.Parameters.Add( p );

      p = sp_Getpoline.CreateParameter();
      p.ParameterName = "ORDERSFROMHISTORY_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Getpoline.Parameters.Add( p );

      p = sp_Getpoline.CreateParameter();
      p.ParameterName = "ORDERSFROMPRODUCTION_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Getpoline.Parameters.Add( p );

      oP = sp_Getpoline.CreateParameter() as OracleParameter;
      oP.ParameterName = "POLINE_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Getpoline.Parameters.Add( oP );
    }

    private void CreateSP_Getproductavail()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Getproductavail = connectionProvider.GetConnection().CreateCommand();
      sp_Getproductavail.CommandText = "WEB_SERVICES_3PL.GETPRODUCTAVAIL";
      sp_Getproductavail.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Getproductavail).BindByName = true;
#endif

      p = sp_Getproductavail.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Getproductavail.Parameters.Add( p );

      p = sp_Getproductavail.CreateParameter();
      p.ParameterName = "STOCKNO_I";
      p.DbType = DbType.String;
      p.Size = 4;
      p.Direction = ParameterDirection.Input;
      sp_Getproductavail.Parameters.Add( p );

      p = sp_Getproductavail.CreateParameter();
      p.ParameterName = "PARTNO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Getproductavail.Parameters.Add( p );

      oP = sp_Getproductavail.CreateParameter() as OracleParameter;
      oP.ParameterName = "PRODUCTAVAIL_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Getproductavail.Parameters.Add( oP );
    }

    private void CreateSP_Getvendorpartno()
    {
      IDbDataParameter p;
      OracleParameter  oP;

      sp_Getvendorpartno = connectionProvider.GetConnection().CreateCommand();
      sp_Getvendorpartno.CommandText = "WEB_SERVICES_3PL.GETVENDORPARTNO";
      sp_Getvendorpartno.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Getvendorpartno).BindByName = true;
#endif

      p = sp_Getvendorpartno.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Getvendorpartno.Parameters.Add( p );

      p = sp_Getvendorpartno.CreateParameter();
      p.ParameterName = "PARTNO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Getvendorpartno.Parameters.Add( p );

      oP = sp_Getvendorpartno.CreateParameter() as OracleParameter;
      oP.ParameterName = "VENDORPARTNO_CUR_O";
#if ODP_NET
      oP.OracleDbType = OracleDbType.RefCursor;
#else
      oP.OracleType = OracleType.Cursor;
#endif
      oP.Direction = ParameterDirection.Output;
      sp_Getvendorpartno.Parameters.Add( oP );
    }

    private void CreateSP_Saveco()
    {
      IDbDataParameter p;

      sp_Saveco = connectionProvider.GetConnection().CreateCommand();
      sp_Saveco.CommandText = "WEB_SERVICES_3PL.SAVECO";
      sp_Saveco.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Saveco).BindByName = true;
#endif

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "CONO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "CUSTOMER_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "CUREF_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "YOURCONO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "REQDELDATE_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "TEXT_I";
      p.DbType = DbType.String;
      p.Size = 400;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "COMARK_I";
      p.DbType = DbType.String;
      p.Size = 400;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "STOCKNO_I";
      p.DbType = DbType.String;
      p.Size = 4;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );

      p = sp_Saveco.CreateParameter();
      p.ParameterName = "COSEQ_I";
      p.DbType = DbType.Decimal;
      p.Precision = 3;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Saveco.Parameters.Add( p );
    }

    private void CreateSP_Savecoline()
    {
      IDbDataParameter p;

      sp_Savecoline = connectionProvider.GetConnection().CreateCommand();
      sp_Savecoline.CommandText = "WEB_SERVICES_3PL.SAVECOLINE";
      sp_Savecoline.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Savecoline).BindByName = true;
#endif

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "PARTNO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "PARTDESCR1_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "PARTDESCR2_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "CUSTPARTNO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "CUSTPARTDESCR1_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "CUSTPARTDESCR2_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "TEXT_I";
      p.DbType = DbType.String;
      p.Size = 400;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "QTYUNIT_I";
      p.DbType = DbType.Decimal;
      p.Precision = 20;
      p.Scale     = 6;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "ORIGINALQTYUNIT_I";
      p.DbType = DbType.Double;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "UNIT_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "UNITDESCR_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "LINEPOS_I";
      p.DbType = DbType.Decimal;
      p.Precision = 5;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "LINESEQ_I";
      p.DbType = DbType.Decimal;
      p.Precision = 3;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "LINEID_I";
      p.DbType = DbType.Decimal;
      p.Precision = 2;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "SELLINGUNIT_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "SELLINGUNITDESC_I";
      p.DbType = DbType.String;
      p.Size = 255;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "DELDATE_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "LINESTATUS_I";
      p.DbType = DbType.String;
      p.Size = 2;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "COID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );

      p = sp_Savecoline.CreateParameter();
      p.ParameterName = "COSEQ_I";
      p.DbType = DbType.Decimal;
      p.Precision = 3;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Savecoline.Parameters.Add( p );
    }

    private void CreateSP_Savepo()
    {
      IDbDataParameter p;

      sp_Savepo = connectionProvider.GetConnection().CreateCommand();
      sp_Savepo.CommandText = "WEB_SERVICES_3PL.SAVEPO";
      sp_Savepo.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Savepo).BindByName = true;
#endif

      p = sp_Savepo.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Savepo.Parameters.Add( p );

      p = sp_Savepo.CreateParameter();
      p.ParameterName = "POID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savepo.Parameters.Add( p );

      p = sp_Savepo.CreateParameter();
      p.ParameterName = "POSEQ_I";
      p.DbType = DbType.Decimal;
      p.Precision = 3;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Savepo.Parameters.Add( p );

      p = sp_Savepo.CreateParameter();
      p.ParameterName = "SHIPFROMPARTYID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savepo.Parameters.Add( p );

      p = sp_Savepo.CreateParameter();
      p.ParameterName = "REQDELDATE_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_Savepo.Parameters.Add( p );

      p = sp_Savepo.CreateParameter();
      p.ParameterName = "TEXT_I";
      p.DbType = DbType.String;
      p.Size = 400;
      p.Direction = ParameterDirection.Input;
      sp_Savepo.Parameters.Add( p );

      p = sp_Savepo.CreateParameter();
      p.ParameterName = "RECEIVINGWHID_I";
      p.DbType = DbType.String;
      p.Size = 4;
      p.Direction = ParameterDirection.Input;
      sp_Savepo.Parameters.Add( p );
    }

    private void CreateSP_Savepoline()
    {
      IDbDataParameter p;

      sp_Savepoline = connectionProvider.GetConnection().CreateCommand();
      sp_Savepoline.CommandText = "WEB_SERVICES_3PL.SAVEPOLINE";
      sp_Savepoline.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_Savepoline).BindByName = true;
#endif

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "CLIENTID_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "PARTNO_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "PARTDESCR1_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "TEXT_I";
      p.DbType = DbType.String;
      p.Size = 400;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "QTYUNIT_I";
      p.DbType = DbType.Decimal;
      p.Precision = 20;
      p.Scale     = 6;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "UNIT_I";
      p.DbType = DbType.String;
      p.Size = 17;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "POID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "POSEQ_I";
      p.DbType = DbType.Decimal;
      p.Precision = 3;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "LINEPOS_I";
      p.DbType = DbType.Decimal;
      p.Precision = 4;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "LINESEQ_I";
      p.DbType = DbType.Decimal;
      p.Precision = 3;
      p.Scale     = 0;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "REQDELDATE_I";
      p.DbType = DbType.Date;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );

      p = sp_Savepoline.CreateParameter();
      p.ParameterName = "RECEIVINGWHID_I";
      p.DbType = DbType.String;
      p.Size = 4;
      p.Direction = ParameterDirection.Input;
      sp_Savepoline.Parameters.Add( p );
    }

    private void CreateSP_SignalProcess()
    {
      IDbDataParameter p;

      sp_SignalProcess = connectionProvider.GetConnection().CreateCommand();
      sp_SignalProcess.CommandText = "WEB_SERVICES_3PL.SIGNAL_PROCESS";
      sp_SignalProcess.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
      ((OracleCommand)sp_SignalProcess).BindByName = true;
#endif

      p = sp_SignalProcess.CreateParameter();
      p.ParameterName = "PROID_I";
      p.DbType = DbType.String;
      p.Size = 35;
      p.Direction = ParameterDirection.Input;
      sp_SignalProcess.Parameters.Add( p );
    }

    // ----------------------------------------------------------------------------

    public void Findbarcodebyproduct(string                  CLIENTID_I, 
                                     string                  PARTNO_I, 
                                     out IDataReader         BARCODE_CUR_O)
    {
      if ( sp_Findbarcodebyproduct == null )
        CreateSP_Findbarcodebyproduct();

      sp_Findbarcodebyproduct.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Findbarcodebyproduct;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Findbarcodebyproduct.Parameters["CLIENTID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Findbarcodebyproduct.Parameters["CLIENTID_I"] as IDbDataParameter).Value = CLIENTID_I;

      if ( String.IsNullOrEmpty(PARTNO_I) )
        (sp_Findbarcodebyproduct.Parameters["PARTNO_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Findbarcodebyproduct.Parameters["PARTNO_I"] as IDbDataParameter).Value   = PARTNO_I;

      // Execute stored procedure

      sp_Findbarcodebyproduct.Prepare();
      sp_Findbarcodebyproduct.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      BARCODE_CUR_O = (IDataReader)((sp_Findbarcodebyproduct.Parameters["BARCODE_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      BARCODE_CUR_O = (IDataReader)(sp_Findbarcodebyproduct.Parameters["BARCODE_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Findcustomersbyid(string                  CLIENTID_I, 
                                  string                  CUSTOMERID_I, 
                                  out IDataReader         CUSTOMER_CUR_O)
    {
      if ( sp_Findcustomersbyid == null )
        CreateSP_Findcustomersbyid();

      sp_Findcustomersbyid.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Findcustomersbyid;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Findcustomersbyid.Parameters["CLIENTID_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Findcustomersbyid.Parameters["CLIENTID_I"] as IDbDataParameter).Value   = CLIENTID_I;

      if ( String.IsNullOrEmpty(CUSTOMERID_I) )
        (sp_Findcustomersbyid.Parameters["CUSTOMERID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Findcustomersbyid.Parameters["CUSTOMERID_I"] as IDbDataParameter).Value = CUSTOMERID_I;

      // Execute stored procedure

      sp_Findcustomersbyid.Prepare();
      sp_Findcustomersbyid.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      CUSTOMER_CUR_O = (IDataReader)((sp_Findcustomersbyid.Parameters["CUSTOMER_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      CUSTOMER_CUR_O = (IDataReader)(sp_Findcustomersbyid.Parameters["CUSTOMER_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Findpartybyid(string                  PARTYID_I, 
                              string                  PARTY_QUALIFIER_I, 
                              string                  CLIENTID_I, 
                              out IDataReader         PARTY_CUR_O)
    {
      if ( sp_Findpartybyid == null )
        CreateSP_Findpartybyid();

      sp_Findpartybyid.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Findpartybyid;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(PARTYID_I) )
        (sp_Findpartybyid.Parameters["PARTYID_I"] as IDbDataParameter).Value         = DBNull.Value;
      else
        (sp_Findpartybyid.Parameters["PARTYID_I"] as IDbDataParameter).Value         = PARTYID_I;

      if ( String.IsNullOrEmpty(PARTY_QUALIFIER_I) )
        (sp_Findpartybyid.Parameters["PARTY_QUALIFIER_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Findpartybyid.Parameters["PARTY_QUALIFIER_I"] as IDbDataParameter).Value = PARTY_QUALIFIER_I;

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Findpartybyid.Parameters["CLIENTID_I"] as IDbDataParameter).Value        = DBNull.Value;
      else
        (sp_Findpartybyid.Parameters["CLIENTID_I"] as IDbDataParameter).Value        = CLIENTID_I;

      // Execute stored procedure

      sp_Findpartybyid.Prepare();
      sp_Findpartybyid.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      PARTY_CUR_O = (IDataReader)((sp_Findpartybyid.Parameters["PARTY_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      PARTY_CUR_O = (IDataReader)(sp_Findpartybyid.Parameters["PARTY_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Findproductbydescription(string                  CLIENTID_I, 
                                         string                  PARTDESCR_I, 
                                         out IDataReader         PRODUCT_CUR_O)
    {
      if ( sp_Findproductbydescription == null )
        CreateSP_Findproductbydescription();

      sp_Findproductbydescription.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Findproductbydescription;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Findproductbydescription.Parameters["CLIENTID_I"] as IDbDataParameter).Value  = DBNull.Value;
      else
        (sp_Findproductbydescription.Parameters["CLIENTID_I"] as IDbDataParameter).Value  = CLIENTID_I;

      if ( String.IsNullOrEmpty(PARTDESCR_I) )
        (sp_Findproductbydescription.Parameters["PARTDESCR_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Findproductbydescription.Parameters["PARTDESCR_I"] as IDbDataParameter).Value = PARTDESCR_I;

      // Execute stored procedure

      sp_Findproductbydescription.Prepare();
      sp_Findproductbydescription.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      PRODUCT_CUR_O = (IDataReader)((sp_Findproductbydescription.Parameters["PRODUCT_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      PRODUCT_CUR_O = (IDataReader)(sp_Findproductbydescription.Parameters["PRODUCT_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Findproductbypartno(string                  CLIENTID_I, 
                                    string                  PARTNO_I, 
                                    out IDataReader         PRODUCT_CUR_O)
    {
      if ( sp_Findproductbypartno == null )
        CreateSP_Findproductbypartno();

      sp_Findproductbypartno.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Findproductbypartno;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Findproductbypartno.Parameters["CLIENTID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Findproductbypartno.Parameters["CLIENTID_I"] as IDbDataParameter).Value = CLIENTID_I;

      if ( String.IsNullOrEmpty(PARTNO_I) )
        (sp_Findproductbypartno.Parameters["PARTNO_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Findproductbypartno.Parameters["PARTNO_I"] as IDbDataParameter).Value   = PARTNO_I;

      // Execute stored procedure

      sp_Findproductbypartno.Prepare();
      sp_Findproductbypartno.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      PRODUCT_CUR_O = (IDataReader)((sp_Findproductbypartno.Parameters["PRODUCT_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      PRODUCT_CUR_O = (IDataReader)(sp_Findproductbypartno.Parameters["PRODUCT_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Findwarehousebyclient(string                  CLIENTID_I, 
                                      out IDataReader         WAREHOUSE_CUR_O)
    {
      if ( sp_Findwarehousebyclient == null )
        CreateSP_Findwarehousebyclient();

      sp_Findwarehousebyclient.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Findwarehousebyclient;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Findwarehousebyclient.Parameters["CLIENTID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Findwarehousebyclient.Parameters["CLIENTID_I"] as IDbDataParameter).Value = CLIENTID_I;

      // Execute stored procedure

      sp_Findwarehousebyclient.Prepare();
      sp_Findwarehousebyclient.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      WAREHOUSE_CUR_O = (IDataReader)((sp_Findwarehousebyclient.Parameters["WAREHOUSE_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      WAREHOUSE_CUR_O = (IDataReader)(sp_Findwarehousebyclient.Parameters["WAREHOUSE_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Getaddresses(string                  CLIENTID_I, 
                             string                  CUSTOMERID_I, 
                             out IDataReader         ADDRESS_CUR_O)
    {
      if ( sp_Getaddresses == null )
        CreateSP_Getaddresses();

      sp_Getaddresses.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Getaddresses;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Getaddresses.Parameters["CLIENTID_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Getaddresses.Parameters["CLIENTID_I"] as IDbDataParameter).Value   = CLIENTID_I;

      if ( String.IsNullOrEmpty(CUSTOMERID_I) )
        (sp_Getaddresses.Parameters["CUSTOMERID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Getaddresses.Parameters["CUSTOMERID_I"] as IDbDataParameter).Value = CUSTOMERID_I;

      // Execute stored procedure

      sp_Getaddresses.Prepare();
      sp_Getaddresses.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      ADDRESS_CUR_O = (IDataReader)((sp_Getaddresses.Parameters["ADDRESS_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      ADDRESS_CUR_O = (IDataReader)(sp_Getaddresses.Parameters["ADDRESS_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Getco(string                  CLIENTID_I, 
                      string                  ORDERNO_I, 
                      string                  YOURCONO_I, 
                      Nullable<DateTime>      FROM_I, 
                      Nullable<DateTime>      TO_I, 
                      string                  MARK_I, 
                      string                  ORDERSFROMHISTORY_I, 
                      string                  ORDERSFROMPRODUCTION_I, 
                      out IDataReader         CO_CUR_O)
    {
      if ( sp_Getco == null )
        CreateSP_Getco();

      sp_Getco.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Getco;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Getco.Parameters["CLIENTID_I"] as IDbDataParameter).Value             = DBNull.Value;
      else
        (sp_Getco.Parameters["CLIENTID_I"] as IDbDataParameter).Value             = CLIENTID_I;

      if ( String.IsNullOrEmpty(ORDERNO_I) )
        (sp_Getco.Parameters["ORDERNO_I"] as IDbDataParameter).Value              = DBNull.Value;
      else
        (sp_Getco.Parameters["ORDERNO_I"] as IDbDataParameter).Value              = ORDERNO_I;

      if ( String.IsNullOrEmpty(YOURCONO_I) )
        (sp_Getco.Parameters["YOURCONO_I"] as IDbDataParameter).Value             = DBNull.Value;
      else
        (sp_Getco.Parameters["YOURCONO_I"] as IDbDataParameter).Value             = YOURCONO_I;

      if ( FROM_I == null )
        (sp_Getco.Parameters["FROM_I"] as IDbDataParameter).Value                 = DBNull.Value;
      else
        (sp_Getco.Parameters["FROM_I"] as IDbDataParameter).Value                 = FROM_I;

      if ( TO_I == null )
        (sp_Getco.Parameters["TO_I"] as IDbDataParameter).Value                   = DBNull.Value;
      else
        (sp_Getco.Parameters["TO_I"] as IDbDataParameter).Value                   = TO_I;

      if ( String.IsNullOrEmpty(MARK_I) )
        (sp_Getco.Parameters["MARK_I"] as IDbDataParameter).Value                 = DBNull.Value;
      else
        (sp_Getco.Parameters["MARK_I"] as IDbDataParameter).Value                 = MARK_I;

      if ( String.IsNullOrEmpty(ORDERSFROMHISTORY_I) )
        (sp_Getco.Parameters["ORDERSFROMHISTORY_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_Getco.Parameters["ORDERSFROMHISTORY_I"] as IDbDataParameter).Value    = ORDERSFROMHISTORY_I;

      if ( String.IsNullOrEmpty(ORDERSFROMPRODUCTION_I) )
        (sp_Getco.Parameters["ORDERSFROMPRODUCTION_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Getco.Parameters["ORDERSFROMPRODUCTION_I"] as IDbDataParameter).Value = ORDERSFROMPRODUCTION_I;

      // Execute stored procedure

      sp_Getco.Prepare();
      sp_Getco.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      CO_CUR_O = (IDataReader)((sp_Getco.Parameters["CO_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      CO_CUR_O = (IDataReader)(sp_Getco.Parameters["CO_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Getcoline(string                  CLIENTID_I, 
                          string                  CONO_I, 
                          string                  ORDERSFROMHISTORY_I, 
                          string                  ORDERSFROMPRODUCTION_I, 
                          out IDataReader         COLINE_CUR_O)
    {
      if ( sp_Getcoline == null )
        CreateSP_Getcoline();

      sp_Getcoline.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Getcoline;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Getcoline.Parameters["CLIENTID_I"] as IDbDataParameter).Value             = DBNull.Value;
      else
        (sp_Getcoline.Parameters["CLIENTID_I"] as IDbDataParameter).Value             = CLIENTID_I;

      if ( String.IsNullOrEmpty(CONO_I) )
        (sp_Getcoline.Parameters["CONO_I"] as IDbDataParameter).Value                 = DBNull.Value;
      else
        (sp_Getcoline.Parameters["CONO_I"] as IDbDataParameter).Value                 = CONO_I;

      if ( String.IsNullOrEmpty(ORDERSFROMHISTORY_I) )
        (sp_Getcoline.Parameters["ORDERSFROMHISTORY_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_Getcoline.Parameters["ORDERSFROMHISTORY_I"] as IDbDataParameter).Value    = ORDERSFROMHISTORY_I;

      if ( String.IsNullOrEmpty(ORDERSFROMPRODUCTION_I) )
        (sp_Getcoline.Parameters["ORDERSFROMPRODUCTION_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Getcoline.Parameters["ORDERSFROMPRODUCTION_I"] as IDbDataParameter).Value = ORDERSFROMPRODUCTION_I;

      // Execute stored procedure

      sp_Getcoline.Prepare();
      sp_Getcoline.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      COLINE_CUR_O = (IDataReader)((sp_Getcoline.Parameters["COLINE_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      COLINE_CUR_O = (IDataReader)(sp_Getcoline.Parameters["COLINE_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Getpartyaddress(string                  PARTYID_I, 
                                string                  PARTY_QUALIFIER_I, 
                                string                  CLIENTID_I, 
                                out IDataReader         PARTY_CUR_O)
    {
      if ( sp_Getpartyaddress == null )
        CreateSP_Getpartyaddress();

      sp_Getpartyaddress.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Getpartyaddress;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(PARTYID_I) )
        (sp_Getpartyaddress.Parameters["PARTYID_I"] as IDbDataParameter).Value         = DBNull.Value;
      else
        (sp_Getpartyaddress.Parameters["PARTYID_I"] as IDbDataParameter).Value         = PARTYID_I;

      if ( String.IsNullOrEmpty(PARTY_QUALIFIER_I) )
        (sp_Getpartyaddress.Parameters["PARTY_QUALIFIER_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Getpartyaddress.Parameters["PARTY_QUALIFIER_I"] as IDbDataParameter).Value = PARTY_QUALIFIER_I;

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Getpartyaddress.Parameters["CLIENTID_I"] as IDbDataParameter).Value        = DBNull.Value;
      else
        (sp_Getpartyaddress.Parameters["CLIENTID_I"] as IDbDataParameter).Value        = CLIENTID_I;

      // Execute stored procedure

      sp_Getpartyaddress.Prepare();
      sp_Getpartyaddress.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      PARTY_CUR_O = (IDataReader)((sp_Getpartyaddress.Parameters["PARTY_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      PARTY_CUR_O = (IDataReader)(sp_Getpartyaddress.Parameters["PARTY_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Getpo(string                  CLIENTID_I, 
                      string                  ORDERNO_I, 
                      Nullable<DateTime>      FROM_I, 
                      Nullable<DateTime>      TO_I, 
                      string                  ORDERSFROMHISTORY_I, 
                      string                  ORDERSFROMPRODUCTION_I, 
                      out IDataReader         PO_CUR_O)
    {
      if ( sp_Getpo == null )
        CreateSP_Getpo();

      sp_Getpo.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Getpo;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Getpo.Parameters["CLIENTID_I"] as IDbDataParameter).Value             = DBNull.Value;
      else
        (sp_Getpo.Parameters["CLIENTID_I"] as IDbDataParameter).Value             = CLIENTID_I;

      if ( String.IsNullOrEmpty(ORDERNO_I) )
        (sp_Getpo.Parameters["ORDERNO_I"] as IDbDataParameter).Value              = DBNull.Value;
      else
        (sp_Getpo.Parameters["ORDERNO_I"] as IDbDataParameter).Value              = ORDERNO_I;

      if ( FROM_I == null )
        (sp_Getpo.Parameters["FROM_I"] as IDbDataParameter).Value                 = DBNull.Value;
      else
        (sp_Getpo.Parameters["FROM_I"] as IDbDataParameter).Value                 = FROM_I;

      if ( TO_I == null )
        (sp_Getpo.Parameters["TO_I"] as IDbDataParameter).Value                   = DBNull.Value;
      else
        (sp_Getpo.Parameters["TO_I"] as IDbDataParameter).Value                   = TO_I;

      if ( String.IsNullOrEmpty(ORDERSFROMHISTORY_I) )
        (sp_Getpo.Parameters["ORDERSFROMHISTORY_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_Getpo.Parameters["ORDERSFROMHISTORY_I"] as IDbDataParameter).Value    = ORDERSFROMHISTORY_I;

      if ( String.IsNullOrEmpty(ORDERSFROMPRODUCTION_I) )
        (sp_Getpo.Parameters["ORDERSFROMPRODUCTION_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Getpo.Parameters["ORDERSFROMPRODUCTION_I"] as IDbDataParameter).Value = ORDERSFROMPRODUCTION_I;

      // Execute stored procedure

      sp_Getpo.Prepare();
      sp_Getpo.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      PO_CUR_O = (IDataReader)((sp_Getpo.Parameters["PO_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      PO_CUR_O = (IDataReader)(sp_Getpo.Parameters["PO_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Getpoline(string                  CLIENTID_I, 
                          string                  POID_I, 
                          Nullable<int>           POSEQ_I, 
                          string                  ORDERSFROMHISTORY_I, 
                          string                  ORDERSFROMPRODUCTION_I, 
                          out IDataReader         POLINE_CUR_O)
    {
      if ( sp_Getpoline == null )
        CreateSP_Getpoline();

      sp_Getpoline.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Getpoline;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Getpoline.Parameters["CLIENTID_I"] as IDbDataParameter).Value             = DBNull.Value;
      else
        (sp_Getpoline.Parameters["CLIENTID_I"] as IDbDataParameter).Value             = CLIENTID_I;

      if ( String.IsNullOrEmpty(POID_I) )
        (sp_Getpoline.Parameters["POID_I"] as IDbDataParameter).Value                 = DBNull.Value;
      else
        (sp_Getpoline.Parameters["POID_I"] as IDbDataParameter).Value                 = POID_I;

      if ( POSEQ_I == null )
        (sp_Getpoline.Parameters["POSEQ_I"] as IDbDataParameter).Value                = DBNull.Value;
      else
        (sp_Getpoline.Parameters["POSEQ_I"] as IDbDataParameter).Value                = POSEQ_I;

      if ( String.IsNullOrEmpty(ORDERSFROMHISTORY_I) )
        (sp_Getpoline.Parameters["ORDERSFROMHISTORY_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_Getpoline.Parameters["ORDERSFROMHISTORY_I"] as IDbDataParameter).Value    = ORDERSFROMHISTORY_I;

      if ( String.IsNullOrEmpty(ORDERSFROMPRODUCTION_I) )
        (sp_Getpoline.Parameters["ORDERSFROMPRODUCTION_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Getpoline.Parameters["ORDERSFROMPRODUCTION_I"] as IDbDataParameter).Value = ORDERSFROMPRODUCTION_I;

      // Execute stored procedure

      sp_Getpoline.Prepare();
      sp_Getpoline.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      POLINE_CUR_O = (IDataReader)((sp_Getpoline.Parameters["POLINE_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      POLINE_CUR_O = (IDataReader)(sp_Getpoline.Parameters["POLINE_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Getproductavail(string                  CLIENTID_I, 
                                string                  STOCKNO_I, 
                                string                  PARTNO_I, 
                                out IDataReader         PRODUCTAVAIL_CUR_O)
    {
      if ( sp_Getproductavail == null )
        CreateSP_Getproductavail();

      sp_Getproductavail.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Getproductavail;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Getproductavail.Parameters["CLIENTID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Getproductavail.Parameters["CLIENTID_I"] as IDbDataParameter).Value = CLIENTID_I;

      if ( String.IsNullOrEmpty(STOCKNO_I) )
        (sp_Getproductavail.Parameters["STOCKNO_I"] as IDbDataParameter).Value  = DBNull.Value;
      else
        (sp_Getproductavail.Parameters["STOCKNO_I"] as IDbDataParameter).Value  = STOCKNO_I;

      if ( String.IsNullOrEmpty(PARTNO_I) )
        (sp_Getproductavail.Parameters["PARTNO_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Getproductavail.Parameters["PARTNO_I"] as IDbDataParameter).Value   = PARTNO_I;

      // Execute stored procedure

      sp_Getproductavail.Prepare();
      sp_Getproductavail.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      PRODUCTAVAIL_CUR_O = (IDataReader)((sp_Getproductavail.Parameters["PRODUCTAVAIL_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      PRODUCTAVAIL_CUR_O = (IDataReader)(sp_Getproductavail.Parameters["PRODUCTAVAIL_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Getvendorpartno(string                  CLIENTID_I, 
                                string                  PARTNO_I, 
                                out IDataReader         VENDORPARTNO_CUR_O)
    {
      if ( sp_Getvendorpartno == null )
        CreateSP_Getvendorpartno();

      sp_Getvendorpartno.Transaction = connectionProvider.CurrentTransaction;

      lock (syncLock)
      {
          currentCommand = sp_Getvendorpartno;
      }
      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Getvendorpartno.Parameters["CLIENTID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Getvendorpartno.Parameters["CLIENTID_I"] as IDbDataParameter).Value = CLIENTID_I;

      if ( String.IsNullOrEmpty(PARTNO_I) )
        (sp_Getvendorpartno.Parameters["PARTNO_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Getvendorpartno.Parameters["PARTNO_I"] as IDbDataParameter).Value   = PARTNO_I;

      // Execute stored procedure

      sp_Getvendorpartno.Prepare();
      sp_Getvendorpartno.ExecuteNonQuery();

      // Set Out Parameters

#if ODP_NET
      VENDORPARTNO_CUR_O = (IDataReader)((sp_Getvendorpartno.Parameters["VENDORPARTNO_CUR_O"] as IDbDataParameter).Value as OracleRefCursor).GetDataReader();
#else
      VENDORPARTNO_CUR_O = (IDataReader)(sp_Getvendorpartno.Parameters["VENDORPARTNO_CUR_O"] as IDbDataParameter).Value;
#endif

    }

    public void Saveco(string                  CLIENTID_I, 
                       string                  CONO_I, 
                       string                  CUSTOMER_I, 
                       string                  CUREF_I, 
                       string                  YOURCONO_I, 
                       Nullable<DateTime>      REQDELDATE_I, 
                       string                  TEXT_I, 
                       string                  COMARK_I, 
                       string                  STOCKNO_I, 
                       Nullable<int>           COSEQ_I)
    {
      if ( sp_Saveco == null )
        CreateSP_Saveco();

      sp_Saveco.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Saveco.Parameters["CLIENTID_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Saveco.Parameters["CLIENTID_I"] as IDbDataParameter).Value   = CLIENTID_I;

      if ( String.IsNullOrEmpty(CONO_I) )
        (sp_Saveco.Parameters["CONO_I"] as IDbDataParameter).Value       = DBNull.Value;
      else
        (sp_Saveco.Parameters["CONO_I"] as IDbDataParameter).Value       = CONO_I;

      if ( String.IsNullOrEmpty(CUSTOMER_I) )
        (sp_Saveco.Parameters["CUSTOMER_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Saveco.Parameters["CUSTOMER_I"] as IDbDataParameter).Value   = CUSTOMER_I;

      if ( String.IsNullOrEmpty(CUREF_I) )
        (sp_Saveco.Parameters["CUREF_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Saveco.Parameters["CUREF_I"] as IDbDataParameter).Value      = CUREF_I;

      if ( String.IsNullOrEmpty(YOURCONO_I) )
        (sp_Saveco.Parameters["YOURCONO_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Saveco.Parameters["YOURCONO_I"] as IDbDataParameter).Value   = YOURCONO_I;

      if ( REQDELDATE_I == null )
        (sp_Saveco.Parameters["REQDELDATE_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Saveco.Parameters["REQDELDATE_I"] as IDbDataParameter).Value = REQDELDATE_I;

      if ( String.IsNullOrEmpty(TEXT_I) )
        (sp_Saveco.Parameters["TEXT_I"] as IDbDataParameter).Value       = DBNull.Value;
      else
        (sp_Saveco.Parameters["TEXT_I"] as IDbDataParameter).Value       = TEXT_I;

      if ( String.IsNullOrEmpty(COMARK_I) )
        (sp_Saveco.Parameters["COMARK_I"] as IDbDataParameter).Value     = DBNull.Value;
      else
        (sp_Saveco.Parameters["COMARK_I"] as IDbDataParameter).Value     = COMARK_I;

      if ( String.IsNullOrEmpty(STOCKNO_I) )
        (sp_Saveco.Parameters["STOCKNO_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_Saveco.Parameters["STOCKNO_I"] as IDbDataParameter).Value    = STOCKNO_I;

      if ( COSEQ_I == null )
        (sp_Saveco.Parameters["COSEQ_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Saveco.Parameters["COSEQ_I"] as IDbDataParameter).Value      = COSEQ_I;

      // Execute stored procedure

      sp_Saveco.Prepare();
      sp_Saveco.ExecuteNonQuery();

      // Set Out Parameters
    }

    public void Savecoline(string                  CLIENTID_I, 
                           string                  PARTNO_I, 
                           string                  PARTDESCR1_I, 
                           string                  PARTDESCR2_I, 
                           string                  CUSTPARTNO_I, 
                           string                  CUSTPARTDESCR1_I, 
                           string                  CUSTPARTDESCR2_I, 
                           string                  TEXT_I, 
                           Nullable<double>        QTYUNIT_I, 
                           Nullable<int>           ORIGINALQTYUNIT_I, 
                           string                  UNIT_I, 
                           string                  UNITDESCR_I, 
                           Nullable<int>           LINEPOS_I, 
                           Nullable<int>           LINESEQ_I, 
                           Nullable<int>           LINEID_I, 
                           string                  SELLINGUNIT_I, 
                           string                  SELLINGUNITDESC_I, 
                           Nullable<DateTime>      DELDATE_I, 
                           string                  LINESTATUS_I, 
                           string                  COID_I, 
                           Nullable<int>           COSEQ_I)
    {
      if ( sp_Savecoline == null )
        CreateSP_Savecoline();

      sp_Savecoline.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Savecoline.Parameters["CLIENTID_I"] as IDbDataParameter).Value        = DBNull.Value;
      else
        (sp_Savecoline.Parameters["CLIENTID_I"] as IDbDataParameter).Value        = CLIENTID_I;

      if ( String.IsNullOrEmpty(PARTNO_I) )
        (sp_Savecoline.Parameters["PARTNO_I"] as IDbDataParameter).Value          = DBNull.Value;
      else
        (sp_Savecoline.Parameters["PARTNO_I"] as IDbDataParameter).Value          = PARTNO_I;

      if ( String.IsNullOrEmpty(PARTDESCR1_I) )
        (sp_Savecoline.Parameters["PARTDESCR1_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Savecoline.Parameters["PARTDESCR1_I"] as IDbDataParameter).Value      = PARTDESCR1_I;

      if ( String.IsNullOrEmpty(PARTDESCR2_I) )
        (sp_Savecoline.Parameters["PARTDESCR2_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Savecoline.Parameters["PARTDESCR2_I"] as IDbDataParameter).Value      = PARTDESCR2_I;

      if ( String.IsNullOrEmpty(CUSTPARTNO_I) )
        (sp_Savecoline.Parameters["CUSTPARTNO_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Savecoline.Parameters["CUSTPARTNO_I"] as IDbDataParameter).Value      = CUSTPARTNO_I;

      if ( String.IsNullOrEmpty(CUSTPARTDESCR1_I) )
        (sp_Savecoline.Parameters["CUSTPARTDESCR1_I"] as IDbDataParameter).Value  = DBNull.Value;
      else
        (sp_Savecoline.Parameters["CUSTPARTDESCR1_I"] as IDbDataParameter).Value  = CUSTPARTDESCR1_I;

      if ( String.IsNullOrEmpty(CUSTPARTDESCR2_I) )
        (sp_Savecoline.Parameters["CUSTPARTDESCR2_I"] as IDbDataParameter).Value  = DBNull.Value;
      else
        (sp_Savecoline.Parameters["CUSTPARTDESCR2_I"] as IDbDataParameter).Value  = CUSTPARTDESCR2_I;

      if ( String.IsNullOrEmpty(TEXT_I) )
        (sp_Savecoline.Parameters["TEXT_I"] as IDbDataParameter).Value            = DBNull.Value;
      else
        (sp_Savecoline.Parameters["TEXT_I"] as IDbDataParameter).Value            = TEXT_I;

      if ( QTYUNIT_I == null )
        (sp_Savecoline.Parameters["QTYUNIT_I"] as IDbDataParameter).Value         = DBNull.Value;
      else
        (sp_Savecoline.Parameters["QTYUNIT_I"] as IDbDataParameter).Value         = QTYUNIT_I;

      if ( ORIGINALQTYUNIT_I == null )
        (sp_Savecoline.Parameters["ORIGINALQTYUNIT_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Savecoline.Parameters["ORIGINALQTYUNIT_I"] as IDbDataParameter).Value = ORIGINALQTYUNIT_I;

      if ( String.IsNullOrEmpty(UNIT_I) )
        (sp_Savecoline.Parameters["UNIT_I"] as IDbDataParameter).Value            = DBNull.Value;
      else
        (sp_Savecoline.Parameters["UNIT_I"] as IDbDataParameter).Value            = UNIT_I;

      if ( String.IsNullOrEmpty(UNITDESCR_I) )
        (sp_Savecoline.Parameters["UNITDESCR_I"] as IDbDataParameter).Value       = DBNull.Value;
      else
        (sp_Savecoline.Parameters["UNITDESCR_I"] as IDbDataParameter).Value       = UNITDESCR_I;

      if ( LINEPOS_I == null )
        (sp_Savecoline.Parameters["LINEPOS_I"] as IDbDataParameter).Value         = DBNull.Value;
      else
        (sp_Savecoline.Parameters["LINEPOS_I"] as IDbDataParameter).Value         = LINEPOS_I;

      if ( LINESEQ_I == null )
        (sp_Savecoline.Parameters["LINESEQ_I"] as IDbDataParameter).Value         = DBNull.Value;
      else
        (sp_Savecoline.Parameters["LINESEQ_I"] as IDbDataParameter).Value         = LINESEQ_I;

      if ( LINEID_I == null )
        (sp_Savecoline.Parameters["LINEID_I"] as IDbDataParameter).Value          = DBNull.Value;
      else
        (sp_Savecoline.Parameters["LINEID_I"] as IDbDataParameter).Value          = LINEID_I;

      if ( String.IsNullOrEmpty(SELLINGUNIT_I) )
        (sp_Savecoline.Parameters["SELLINGUNIT_I"] as IDbDataParameter).Value     = DBNull.Value;
      else
        (sp_Savecoline.Parameters["SELLINGUNIT_I"] as IDbDataParameter).Value     = SELLINGUNIT_I;

      if ( String.IsNullOrEmpty(SELLINGUNITDESC_I) )
        (sp_Savecoline.Parameters["SELLINGUNITDESC_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Savecoline.Parameters["SELLINGUNITDESC_I"] as IDbDataParameter).Value = SELLINGUNITDESC_I;

      if ( DELDATE_I == null )
        (sp_Savecoline.Parameters["DELDATE_I"] as IDbDataParameter).Value         = DBNull.Value;
      else
        (sp_Savecoline.Parameters["DELDATE_I"] as IDbDataParameter).Value         = DELDATE_I;

      if ( String.IsNullOrEmpty(LINESTATUS_I) )
        (sp_Savecoline.Parameters["LINESTATUS_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Savecoline.Parameters["LINESTATUS_I"] as IDbDataParameter).Value      = LINESTATUS_I;

      if ( String.IsNullOrEmpty(COID_I) )
        (sp_Savecoline.Parameters["COID_I"] as IDbDataParameter).Value            = DBNull.Value;
      else
        (sp_Savecoline.Parameters["COID_I"] as IDbDataParameter).Value            = COID_I;

      if ( COSEQ_I == null )
        (sp_Savecoline.Parameters["COSEQ_I"] as IDbDataParameter).Value           = DBNull.Value;
      else
        (sp_Savecoline.Parameters["COSEQ_I"] as IDbDataParameter).Value           = COSEQ_I;

      // Execute stored procedure

      sp_Savecoline.Prepare();
      sp_Savecoline.ExecuteNonQuery();

      // Set Out Parameters
    }

    public void Savepo(string                  CLIENTID_I, 
                       string                  POID_I, 
                       Nullable<int>           POSEQ_I, 
                       string                  SHIPFROMPARTYID_I, 
                       Nullable<DateTime>      REQDELDATE_I, 
                       string                  TEXT_I, 
                       string                  RECEIVINGWHID_I)
    {
      if ( sp_Savepo == null )
        CreateSP_Savepo();

      sp_Savepo.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Savepo.Parameters["CLIENTID_I"] as IDbDataParameter).Value        = DBNull.Value;
      else
        (sp_Savepo.Parameters["CLIENTID_I"] as IDbDataParameter).Value        = CLIENTID_I;

      if ( String.IsNullOrEmpty(POID_I) )
        (sp_Savepo.Parameters["POID_I"] as IDbDataParameter).Value            = DBNull.Value;
      else
        (sp_Savepo.Parameters["POID_I"] as IDbDataParameter).Value            = POID_I;

      if ( POSEQ_I == null )
        (sp_Savepo.Parameters["POSEQ_I"] as IDbDataParameter).Value           = DBNull.Value;
      else
        (sp_Savepo.Parameters["POSEQ_I"] as IDbDataParameter).Value           = POSEQ_I;

      if ( String.IsNullOrEmpty(SHIPFROMPARTYID_I) )
        (sp_Savepo.Parameters["SHIPFROMPARTYID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Savepo.Parameters["SHIPFROMPARTYID_I"] as IDbDataParameter).Value = SHIPFROMPARTYID_I;

      if ( REQDELDATE_I == null )
        (sp_Savepo.Parameters["REQDELDATE_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Savepo.Parameters["REQDELDATE_I"] as IDbDataParameter).Value      = REQDELDATE_I;

      if ( String.IsNullOrEmpty(TEXT_I) )
        (sp_Savepo.Parameters["TEXT_I"] as IDbDataParameter).Value            = DBNull.Value;
      else
        (sp_Savepo.Parameters["TEXT_I"] as IDbDataParameter).Value            = TEXT_I;

      if ( String.IsNullOrEmpty(RECEIVINGWHID_I) )
        (sp_Savepo.Parameters["RECEIVINGWHID_I"] as IDbDataParameter).Value   = DBNull.Value;
      else
        (sp_Savepo.Parameters["RECEIVINGWHID_I"] as IDbDataParameter).Value   = RECEIVINGWHID_I;

      // Execute stored procedure

      sp_Savepo.Prepare();
      sp_Savepo.ExecuteNonQuery();

      // Set Out Parameters
    }

    public void Savepoline(string                  CLIENTID_I, 
                           string                  PARTNO_I, 
                           string                  PARTDESCR1_I, 
                           string                  TEXT_I, 
                           Nullable<double>        QTYUNIT_I, 
                           string                  UNIT_I, 
                           string                  POID_I, 
                           Nullable<int>           POSEQ_I, 
                           Nullable<int>           LINEPOS_I, 
                           Nullable<int>           LINESEQ_I, 
                           Nullable<DateTime>      REQDELDATE_I, 
                           string                  RECEIVINGWHID_I)
    {
      if ( sp_Savepoline == null )
        CreateSP_Savepoline();

      sp_Savepoline.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(CLIENTID_I) )
        (sp_Savepoline.Parameters["CLIENTID_I"] as IDbDataParameter).Value      = DBNull.Value;
      else
        (sp_Savepoline.Parameters["CLIENTID_I"] as IDbDataParameter).Value      = CLIENTID_I;

      if ( String.IsNullOrEmpty(PARTNO_I) )
        (sp_Savepoline.Parameters["PARTNO_I"] as IDbDataParameter).Value        = DBNull.Value;
      else
        (sp_Savepoline.Parameters["PARTNO_I"] as IDbDataParameter).Value        = PARTNO_I;

      if ( String.IsNullOrEmpty(PARTDESCR1_I) )
        (sp_Savepoline.Parameters["PARTDESCR1_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_Savepoline.Parameters["PARTDESCR1_I"] as IDbDataParameter).Value    = PARTDESCR1_I;

      if ( String.IsNullOrEmpty(TEXT_I) )
        (sp_Savepoline.Parameters["TEXT_I"] as IDbDataParameter).Value          = DBNull.Value;
      else
        (sp_Savepoline.Parameters["TEXT_I"] as IDbDataParameter).Value          = TEXT_I;

      if ( QTYUNIT_I == null )
        (sp_Savepoline.Parameters["QTYUNIT_I"] as IDbDataParameter).Value       = DBNull.Value;
      else
        (sp_Savepoline.Parameters["QTYUNIT_I"] as IDbDataParameter).Value       = QTYUNIT_I;

      if ( String.IsNullOrEmpty(UNIT_I) )
        (sp_Savepoline.Parameters["UNIT_I"] as IDbDataParameter).Value          = DBNull.Value;
      else
        (sp_Savepoline.Parameters["UNIT_I"] as IDbDataParameter).Value          = UNIT_I;

      if ( String.IsNullOrEmpty(POID_I) )
        (sp_Savepoline.Parameters["POID_I"] as IDbDataParameter).Value          = DBNull.Value;
      else
        (sp_Savepoline.Parameters["POID_I"] as IDbDataParameter).Value          = POID_I;

      if ( POSEQ_I == null )
        (sp_Savepoline.Parameters["POSEQ_I"] as IDbDataParameter).Value         = DBNull.Value;
      else
        (sp_Savepoline.Parameters["POSEQ_I"] as IDbDataParameter).Value         = POSEQ_I;

      if ( LINEPOS_I == null )
        (sp_Savepoline.Parameters["LINEPOS_I"] as IDbDataParameter).Value       = DBNull.Value;
      else
        (sp_Savepoline.Parameters["LINEPOS_I"] as IDbDataParameter).Value       = LINEPOS_I;

      if ( LINESEQ_I == null )
        (sp_Savepoline.Parameters["LINESEQ_I"] as IDbDataParameter).Value       = DBNull.Value;
      else
        (sp_Savepoline.Parameters["LINESEQ_I"] as IDbDataParameter).Value       = LINESEQ_I;

      if ( REQDELDATE_I == null )
        (sp_Savepoline.Parameters["REQDELDATE_I"] as IDbDataParameter).Value    = DBNull.Value;
      else
        (sp_Savepoline.Parameters["REQDELDATE_I"] as IDbDataParameter).Value    = REQDELDATE_I;

      if ( String.IsNullOrEmpty(RECEIVINGWHID_I) )
        (sp_Savepoline.Parameters["RECEIVINGWHID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_Savepoline.Parameters["RECEIVINGWHID_I"] as IDbDataParameter).Value = RECEIVINGWHID_I;

      // Execute stored procedure

      sp_Savepoline.Prepare();
      sp_Savepoline.ExecuteNonQuery();

      // Set Out Parameters
    }

    public void SignalProcess(string                  PROID_I)
    {
      if ( sp_SignalProcess == null )
        CreateSP_SignalProcess();

      sp_SignalProcess.Transaction = connectionProvider.CurrentTransaction;

      // Set In Parameters

      if ( String.IsNullOrEmpty(PROID_I) )
        (sp_SignalProcess.Parameters["PROID_I"] as IDbDataParameter).Value = DBNull.Value;
      else
        (sp_SignalProcess.Parameters["PROID_I"] as IDbDataParameter).Value = PROID_I;

      // Execute stored procedure

      sp_SignalProcess.Prepare();
      sp_SignalProcess.ExecuteNonQuery();

      // Set Out Parameters
    }

    public void Cancel()
    {
      lock (syncLock)
      {
        if (currentCommand != null)
        {
          if (currentCommand.Connection != null)
          {
            if (currentCommand.Connection.State != ConnectionState.Closed)
            {
              currentCommand.Cancel();
            }
          }
        }
      }
    }
  }
}
