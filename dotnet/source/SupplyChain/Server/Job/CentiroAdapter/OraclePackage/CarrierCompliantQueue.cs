/*
  File           : CarrierCompliantQueue.cs

  Description    : Wrapper class for Oracle package CARRIER_COMPLIANT_QUEUE.
                   This code was generated by the PackageGenerator, do not edit.

  Generated with Commandline: Carrier_Compliant_Queue C:\temp\CarrierCompliantQueue.cs Imi.SupplyChain.Server.Job.CentiroAdapter.OraclePackage /conn "data source=WH72M;user id=owuser;password=owuser;pooling=true;enlist=false" 

*/
#define ODP_NET
using System;
using System.Data;
#if ODP_NET
using Oracle.DataAccess.Client;
using Oracle.DataAccess.Types;
#else
using System.Data.OracleClient;
#endif
using Imi.Framework.Job.Data;

namespace Imi.SupplyChain.Server.Job.CentiroAdapter.OraclePackage
{
    public partial class CarrierCompliantQueue
    {
        private IDbConnectionProvider connectionProvider;

        public string _Debug()
        {
            return "Package        : CARRIER_COMPLIANT_QUEUE\r\n" +
                    "Generated on   : 2016-01-12 11:43:57\r\n" +
                    "Generated by   : SWG\\aron@SE0133D\r\n" +
                    "Generated in   : C:\\projects\\views\\aron_latest\\dotnet\\source\\CodeGenerators\\PackageGenerator\\bin\\Debug\r\n";
        }

        public CarrierCompliantQueue(IDbConnectionProvider connectionProvider)
        {
            this.connectionProvider = connectionProvider;
        }

        private IDbCommand sp_AdapterReset;
        private IDbCommand sp_GetwaitjobClosedeparture;
        private IDbCommand sp_GetwaitjobPrintdeparture;
        private IDbCommand sp_GetwaitjobPrintparcel;
        private IDbCommand sp_GetwaitjobPrintshipment;
        private IDbCommand sp_GetwaitjobUpdateparcel;
        private IDbCommand sp_GetwaitjobUpdateshipment;
        private IDbCommand sp_GetNextMessage;
        private IDbCommand sp_GetSourceVersionInfo;
        private IDbCommand sp_Handledependencies;
        private IDbCommand sp_ModifyError;
        private IDbCommand sp_ModifyProcessed;
        private IDbCommand sp_New;
        private IDbCommand sp_NewclosedepartureAt;
        private IDbCommand sp_NewprintparcelAt;
        private IDbCommand sp_NewprintshipmentAt;
        private IDbCommand sp_NewremoveparcelAt;
        private IDbCommand sp_NewupdateparcelAt;
        private IDbCommand sp_NewupdateshipmentAt;
        private IDbCommand sp_NewAt;
        private IDbCommand sp_NewLog;
        private IDbCommand sp_Remove;
        private IDbCommand sp_Reset;

        // ----------------------------------------------------------------------------

        private void CreateSP_AdapterReset()
        {
            IDbDataParameter p;

            sp_AdapterReset = connectionProvider.GetConnection().CreateCommand();
            sp_AdapterReset.CommandText = "CARRIER_COMPLIANT_QUEUE.ADAPTER_RESET";
            sp_AdapterReset.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_AdapterReset).BindByName = true;
#endif

            p = sp_AdapterReset.CreateParameter();
            p.ParameterName = "ADAPTER_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_AdapterReset.Parameters.Add(p);
        }

        private void CreateSP_GetwaitjobClosedeparture()
        {
            IDbDataParameter p;

            sp_GetwaitjobClosedeparture = connectionProvider.GetConnection().CreateCommand();
            sp_GetwaitjobClosedeparture.CommandText = "CARRIER_COMPLIANT_QUEUE.GETWAITJOB_CLOSEDEPARTURE";
            sp_GetwaitjobClosedeparture.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetwaitjobClosedeparture).BindByName = true;
#endif

            p = sp_GetwaitjobClosedeparture.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetwaitjobClosedeparture.Parameters.Add(p);

            p = sp_GetwaitjobClosedeparture.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobClosedeparture.Parameters.Add(p);

            p = sp_GetwaitjobClosedeparture.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobClosedeparture.Parameters.Add(p);

            p = sp_GetwaitjobClosedeparture.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobClosedeparture.Parameters.Add(p);

            p = sp_GetwaitjobClosedeparture.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobClosedeparture.Parameters.Add(p);

            p = sp_GetwaitjobClosedeparture.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobClosedeparture.Parameters.Add(p);

            p = sp_GetwaitjobClosedeparture.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobClosedeparture.Parameters.Add(p);
        }

        private void CreateSP_GetwaitjobPrintdeparture()
        {
            IDbDataParameter p;

            sp_GetwaitjobPrintdeparture = connectionProvider.GetConnection().CreateCommand();
            sp_GetwaitjobPrintdeparture.CommandText = "CARRIER_COMPLIANT_QUEUE.GETWAITJOB_PRINTDEPARTURE";
            sp_GetwaitjobPrintdeparture.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetwaitjobPrintdeparture).BindByName = true;
#endif

            p = sp_GetwaitjobPrintdeparture.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetwaitjobPrintdeparture.Parameters.Add(p);

            p = sp_GetwaitjobPrintdeparture.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintdeparture.Parameters.Add(p);

            p = sp_GetwaitjobPrintdeparture.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintdeparture.Parameters.Add(p);

            p = sp_GetwaitjobPrintdeparture.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintdeparture.Parameters.Add(p);

            p = sp_GetwaitjobPrintdeparture.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintdeparture.Parameters.Add(p);

            p = sp_GetwaitjobPrintdeparture.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintdeparture.Parameters.Add(p);

            p = sp_GetwaitjobPrintdeparture.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintdeparture.Parameters.Add(p);
        }

        private void CreateSP_GetwaitjobPrintparcel()
        {
            IDbDataParameter p;

            sp_GetwaitjobPrintparcel = connectionProvider.GetConnection().CreateCommand();
            sp_GetwaitjobPrintparcel.CommandText = "CARRIER_COMPLIANT_QUEUE.GETWAITJOB_PRINTPARCEL";
            sp_GetwaitjobPrintparcel.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetwaitjobPrintparcel).BindByName = true;
#endif

            p = sp_GetwaitjobPrintparcel.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetwaitjobPrintparcel.Parameters.Add(p);

            p = sp_GetwaitjobPrintparcel.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintparcel.Parameters.Add(p);

            p = sp_GetwaitjobPrintparcel.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintparcel.Parameters.Add(p);

            p = sp_GetwaitjobPrintparcel.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintparcel.Parameters.Add(p);

            p = sp_GetwaitjobPrintparcel.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintparcel.Parameters.Add(p);

            p = sp_GetwaitjobPrintparcel.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintparcel.Parameters.Add(p);

            p = sp_GetwaitjobPrintparcel.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintparcel.Parameters.Add(p);
        }

        private void CreateSP_GetwaitjobPrintshipment()
        {
            IDbDataParameter p;

            sp_GetwaitjobPrintshipment = connectionProvider.GetConnection().CreateCommand();
            sp_GetwaitjobPrintshipment.CommandText = "CARRIER_COMPLIANT_QUEUE.GETWAITJOB_PRINTSHIPMENT";
            sp_GetwaitjobPrintshipment.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetwaitjobPrintshipment).BindByName = true;
#endif

            p = sp_GetwaitjobPrintshipment.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetwaitjobPrintshipment.Parameters.Add(p);

            p = sp_GetwaitjobPrintshipment.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintshipment.Parameters.Add(p);

            p = sp_GetwaitjobPrintshipment.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintshipment.Parameters.Add(p);

            p = sp_GetwaitjobPrintshipment.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintshipment.Parameters.Add(p);

            p = sp_GetwaitjobPrintshipment.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintshipment.Parameters.Add(p);

            p = sp_GetwaitjobPrintshipment.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintshipment.Parameters.Add(p);

            p = sp_GetwaitjobPrintshipment.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobPrintshipment.Parameters.Add(p);
        }

        private void CreateSP_GetwaitjobUpdateparcel()
        {
            IDbDataParameter p;

            sp_GetwaitjobUpdateparcel = connectionProvider.GetConnection().CreateCommand();
            sp_GetwaitjobUpdateparcel.CommandText = "CARRIER_COMPLIANT_QUEUE.GETWAITJOB_UPDATEPARCEL";
            sp_GetwaitjobUpdateparcel.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetwaitjobUpdateparcel).BindByName = true;
#endif

            p = sp_GetwaitjobUpdateparcel.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetwaitjobUpdateparcel.Parameters.Add(p);

            p = sp_GetwaitjobUpdateparcel.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateparcel.Parameters.Add(p);

            p = sp_GetwaitjobUpdateparcel.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateparcel.Parameters.Add(p);

            p = sp_GetwaitjobUpdateparcel.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateparcel.Parameters.Add(p);

            p = sp_GetwaitjobUpdateparcel.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateparcel.Parameters.Add(p);

            p = sp_GetwaitjobUpdateparcel.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateparcel.Parameters.Add(p);

            p = sp_GetwaitjobUpdateparcel.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateparcel.Parameters.Add(p);
        }

        private void CreateSP_GetwaitjobUpdateshipment()
        {
            IDbDataParameter p;

            sp_GetwaitjobUpdateshipment = connectionProvider.GetConnection().CreateCommand();
            sp_GetwaitjobUpdateshipment.CommandText = "CARRIER_COMPLIANT_QUEUE.GETWAITJOB_UPDATESHIPMENT";
            sp_GetwaitjobUpdateshipment.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetwaitjobUpdateshipment).BindByName = true;
#endif

            p = sp_GetwaitjobUpdateshipment.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetwaitjobUpdateshipment.Parameters.Add(p);

            p = sp_GetwaitjobUpdateshipment.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateshipment.Parameters.Add(p);

            p = sp_GetwaitjobUpdateshipment.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateshipment.Parameters.Add(p);

            p = sp_GetwaitjobUpdateshipment.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateshipment.Parameters.Add(p);

            p = sp_GetwaitjobUpdateshipment.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateshipment.Parameters.Add(p);

            p = sp_GetwaitjobUpdateshipment.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateshipment.Parameters.Add(p);

            p = sp_GetwaitjobUpdateshipment.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_GetwaitjobUpdateshipment.Parameters.Add(p);
        }

        private void CreateSP_GetNextMessage()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_GetNextMessage = connectionProvider.GetConnection().CreateCommand();
            sp_GetNextMessage.CommandText = "CARRIER_COMPLIANT_QUEUE.GET_NEXT_MESSAGE";
            sp_GetNextMessage.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetNextMessage).BindByName = true;
#endif

            p = sp_GetNextMessage.CreateParameter();
            p.ParameterName = "ADAPTER_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_GetNextMessage.Parameters.Add(p);

            p = sp_GetNextMessage.CreateParameter();
            p.ParameterName = "CCJOBID_O";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Output;
            sp_GetNextMessage.Parameters.Add(p);

            p = sp_GetNextMessage.CreateParameter();
            p.ParameterName = "CCTYPE_O";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Output;
            sp_GetNextMessage.Parameters.Add(p);

            oP = sp_GetNextMessage.CreateParameter() as OracleParameter;
            oP.ParameterName = "CCMSG_O";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.Output;
            sp_GetNextMessage.Parameters.Add(oP);

            p = sp_GetNextMessage.CreateParameter();
            p.ParameterName = "WHID_O";
            p.DbType = DbType.String;
            p.Size = 4;
            p.Direction = ParameterDirection.Output;
            sp_GetNextMessage.Parameters.Add(p);


        }

        private void CreateSP_GetSourceVersionInfo()
        {
            IDbDataParameter p;

            sp_GetSourceVersionInfo = connectionProvider.GetConnection().CreateCommand();
            sp_GetSourceVersionInfo.CommandText = "CARRIER_COMPLIANT_QUEUE.GET_SOURCE_VERSION_INFO";
            sp_GetSourceVersionInfo.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_GetSourceVersionInfo).BindByName = true;
#endif

            p = sp_GetSourceVersionInfo.CreateParameter();
            p.ParameterName = "";
            p.DbType = DbType.String;
            p.Size = 255;
            p.Direction = ParameterDirection.ReturnValue;
            sp_GetSourceVersionInfo.Parameters.Add(p);
        }

        private void CreateSP_Handledependencies()
        {
            IDbDataParameter p;

            sp_Handledependencies = connectionProvider.GetConnection().CreateCommand();
            sp_Handledependencies.CommandText = "CARRIER_COMPLIANT_QUEUE.HANDLEDEPENDENCIES";
            sp_Handledependencies.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_Handledependencies).BindByName = true;
#endif

            p = sp_Handledependencies.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_Handledependencies.Parameters.Add(p);

            p = sp_Handledependencies.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_Handledependencies.Parameters.Add(p);
        }

        private void CreateSP_ModifyError()
        {
            IDbDataParameter p;

            sp_ModifyError = connectionProvider.GetConnection().CreateCommand();
            sp_ModifyError.CommandText = "CARRIER_COMPLIANT_QUEUE.MODIFY_ERROR";
            sp_ModifyError.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_ModifyError).BindByName = true;
#endif

            p = sp_ModifyError.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_ModifyError.Parameters.Add(p);

            p = sp_ModifyError.CreateParameter();
            p.ParameterName = "CCERRMSG_I";
            p.DbType = DbType.String;
            p.Size = 1024;
            p.Direction = ParameterDirection.Input;
            sp_ModifyError.Parameters.Add(p);

            p = sp_ModifyError.CreateParameter();
            p.ParameterName = "CC_MESSSAGE_ID_I";
            p.DbType = DbType.String;
            p.Size = 50;
            p.Direction = ParameterDirection.Input;
            sp_ModifyError.Parameters.Add(p);

            p = sp_ModifyError.CreateParameter();
            p.ParameterName = "ALMID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_ModifyError.Parameters.Add(p);

            p = sp_ModifyError.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_ModifyError.Parameters.Add(p);
        }

        private void CreateSP_ModifyProcessed()
        {
            IDbDataParameter p;

            sp_ModifyProcessed = connectionProvider.GetConnection().CreateCommand();
            sp_ModifyProcessed.CommandText = "CARRIER_COMPLIANT_QUEUE.MODIFY_PROCESSED";
            sp_ModifyProcessed.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_ModifyProcessed).BindByName = true;
#endif

            p = sp_ModifyProcessed.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_ModifyProcessed.Parameters.Add(p);

            p = sp_ModifyProcessed.CreateParameter();
            p.ParameterName = "CC_MESSSAGE_ID_I";
            p.DbType = DbType.String;
            p.Size = 50;
            p.Direction = ParameterDirection.Input;
            sp_ModifyProcessed.Parameters.Add(p);

            p = sp_ModifyProcessed.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_ModifyProcessed.Parameters.Add(p);
        }

        private void CreateSP_New()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_New = connectionProvider.GetConnection().CreateCommand();
            sp_New.CommandText = "CARRIER_COMPLIANT_QUEUE.NEW";
            sp_New.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_New).BindByName = true;
#endif

            p = sp_New.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_New.Parameters.Add(p);

            oP = sp_New.CreateParameter() as OracleParameter;
            oP.ParameterName = "CCMSG_I";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.Input;
            sp_New.Parameters.Add(oP);


            p = sp_New.CreateParameter();
            p.ParameterName = "CCTYPE_I";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Input;
            sp_New.Parameters.Add(p);

            p = sp_New.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_New.Parameters.Add(p);

            p = sp_New.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_New.Parameters.Add(p);

            p = sp_New.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_New.Parameters.Add(p);

            p = sp_New.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_New.Parameters.Add(p);

            p = sp_New.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_New.Parameters.Add(p);

            p = sp_New.CreateParameter();
            p.ParameterName = "CCJOBID_WAIT_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_New.Parameters.Add(p);
        }

        private void CreateSP_NewclosedepartureAt()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_NewclosedepartureAt = connectionProvider.GetConnection().CreateCommand();
            sp_NewclosedepartureAt.CommandText = "CARRIER_COMPLIANT_QUEUE.NEWCLOSEDEPARTURE_AT";
            sp_NewclosedepartureAt.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_NewclosedepartureAt).BindByName = true;
#endif

            oP = sp_NewclosedepartureAt.CreateParameter() as OracleParameter;
            oP.ParameterName = "CCMSG_I";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.Input;
            sp_NewclosedepartureAt.Parameters.Add(oP);


            p = sp_NewclosedepartureAt.CreateParameter();
            p.ParameterName = "CCTYPE_I";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Input;
            sp_NewclosedepartureAt.Parameters.Add(p);

            p = sp_NewclosedepartureAt.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewclosedepartureAt.Parameters.Add(p);

            p = sp_NewclosedepartureAt.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewclosedepartureAt.Parameters.Add(p);

            p = sp_NewclosedepartureAt.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewclosedepartureAt.Parameters.Add(p);

            p = sp_NewclosedepartureAt.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewclosedepartureAt.Parameters.Add(p);

            p = sp_NewclosedepartureAt.CreateParameter();
            p.ParameterName = "CCJOBID_O";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Output;
            sp_NewclosedepartureAt.Parameters.Add(p);

            p = sp_NewclosedepartureAt.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_NewclosedepartureAt.Parameters.Add(p);
        }

        private void CreateSP_NewprintparcelAt()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_NewprintparcelAt = connectionProvider.GetConnection().CreateCommand();
            sp_NewprintparcelAt.CommandText = "CARRIER_COMPLIANT_QUEUE.NEWPRINTPARCEL_AT";
            sp_NewprintparcelAt.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_NewprintparcelAt).BindByName = true;
#endif

            oP = sp_NewprintparcelAt.CreateParameter() as OracleParameter;
            oP.ParameterName = "CCMSG_I";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.Input;
            sp_NewprintparcelAt.Parameters.Add(oP);


            p = sp_NewprintparcelAt.CreateParameter();
            p.ParameterName = "CCTYPE_I";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Input;
            sp_NewprintparcelAt.Parameters.Add(p);

            p = sp_NewprintparcelAt.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewprintparcelAt.Parameters.Add(p);

            p = sp_NewprintparcelAt.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewprintparcelAt.Parameters.Add(p);

            p = sp_NewprintparcelAt.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewprintparcelAt.Parameters.Add(p);

            p = sp_NewprintparcelAt.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewprintparcelAt.Parameters.Add(p);

            p = sp_NewprintparcelAt.CreateParameter();
            p.ParameterName = "CCJOBID_O";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Output;
            sp_NewprintparcelAt.Parameters.Add(p);

            p = sp_NewprintparcelAt.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_NewprintparcelAt.Parameters.Add(p);
        }

        private void CreateSP_NewprintshipmentAt()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_NewprintshipmentAt = connectionProvider.GetConnection().CreateCommand();
            sp_NewprintshipmentAt.CommandText = "CARRIER_COMPLIANT_QUEUE.NEWPRINTSHIPMENT_AT";
            sp_NewprintshipmentAt.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_NewprintshipmentAt).BindByName = true;
#endif

            oP = sp_NewprintshipmentAt.CreateParameter() as OracleParameter;
            oP.ParameterName = "CCMSG_I";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.Input;
            sp_NewprintshipmentAt.Parameters.Add(oP);


            p = sp_NewprintshipmentAt.CreateParameter();
            p.ParameterName = "CCTYPE_I";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Input;
            sp_NewprintshipmentAt.Parameters.Add(p);

            p = sp_NewprintshipmentAt.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewprintshipmentAt.Parameters.Add(p);

            p = sp_NewprintshipmentAt.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewprintshipmentAt.Parameters.Add(p);

            p = sp_NewprintshipmentAt.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewprintshipmentAt.Parameters.Add(p);

            p = sp_NewprintshipmentAt.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewprintshipmentAt.Parameters.Add(p);

            p = sp_NewprintshipmentAt.CreateParameter();
            p.ParameterName = "CCJOBID_O";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Output;
            sp_NewprintshipmentAt.Parameters.Add(p);

            p = sp_NewprintshipmentAt.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_NewprintshipmentAt.Parameters.Add(p);
        }

        private void CreateSP_NewremoveparcelAt()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_NewremoveparcelAt = connectionProvider.GetConnection().CreateCommand();
            sp_NewremoveparcelAt.CommandText = "CARRIER_COMPLIANT_QUEUE.NEWREMOVEPARCEL_AT";
            sp_NewremoveparcelAt.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_NewremoveparcelAt).BindByName = true;
#endif

            oP = sp_NewremoveparcelAt.CreateParameter() as OracleParameter;
            oP.ParameterName = "CCMSG_I";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.Input;
            sp_NewremoveparcelAt.Parameters.Add(oP);


            p = sp_NewremoveparcelAt.CreateParameter();
            p.ParameterName = "CCTYPE_I";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Input;
            sp_NewremoveparcelAt.Parameters.Add(p);

            p = sp_NewremoveparcelAt.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewremoveparcelAt.Parameters.Add(p);

            p = sp_NewremoveparcelAt.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewremoveparcelAt.Parameters.Add(p);

            p = sp_NewremoveparcelAt.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewremoveparcelAt.Parameters.Add(p);

            p = sp_NewremoveparcelAt.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewremoveparcelAt.Parameters.Add(p);

            p = sp_NewremoveparcelAt.CreateParameter();
            p.ParameterName = "CCJOBID_O";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Output;
            sp_NewremoveparcelAt.Parameters.Add(p);

            p = sp_NewremoveparcelAt.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_NewremoveparcelAt.Parameters.Add(p);
        }

        private void CreateSP_NewupdateparcelAt()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_NewupdateparcelAt = connectionProvider.GetConnection().CreateCommand();
            sp_NewupdateparcelAt.CommandText = "CARRIER_COMPLIANT_QUEUE.NEWUPDATEPARCEL_AT";
            sp_NewupdateparcelAt.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_NewupdateparcelAt).BindByName = true;
#endif

            oP = sp_NewupdateparcelAt.CreateParameter() as OracleParameter;
            oP.ParameterName = "CCMSG_I";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.Input;
            sp_NewupdateparcelAt.Parameters.Add(oP);


            p = sp_NewupdateparcelAt.CreateParameter();
            p.ParameterName = "CCTYPE_I";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateparcelAt.Parameters.Add(p);

            p = sp_NewupdateparcelAt.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateparcelAt.Parameters.Add(p);

            p = sp_NewupdateparcelAt.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateparcelAt.Parameters.Add(p);

            p = sp_NewupdateparcelAt.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateparcelAt.Parameters.Add(p);

            p = sp_NewupdateparcelAt.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateparcelAt.Parameters.Add(p);

            p = sp_NewupdateparcelAt.CreateParameter();
            p.ParameterName = "CCJOBID_O";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Output;
            sp_NewupdateparcelAt.Parameters.Add(p);

            p = sp_NewupdateparcelAt.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateparcelAt.Parameters.Add(p);
        }

        private void CreateSP_NewupdateshipmentAt()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_NewupdateshipmentAt = connectionProvider.GetConnection().CreateCommand();
            sp_NewupdateshipmentAt.CommandText = "CARRIER_COMPLIANT_QUEUE.NEWUPDATESHIPMENT_AT";
            sp_NewupdateshipmentAt.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_NewupdateshipmentAt).BindByName = true;
#endif

            oP = sp_NewupdateshipmentAt.CreateParameter() as OracleParameter;
            oP.ParameterName = "CCMSG_I";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.Input;
            sp_NewupdateshipmentAt.Parameters.Add(oP);


            p = sp_NewupdateshipmentAt.CreateParameter();
            p.ParameterName = "CCTYPE_I";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateshipmentAt.Parameters.Add(p);

            p = sp_NewupdateshipmentAt.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateshipmentAt.Parameters.Add(p);

            p = sp_NewupdateshipmentAt.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateshipmentAt.Parameters.Add(p);

            p = sp_NewupdateshipmentAt.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateshipmentAt.Parameters.Add(p);

            p = sp_NewupdateshipmentAt.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateshipmentAt.Parameters.Add(p);

            p = sp_NewupdateshipmentAt.CreateParameter();
            p.ParameterName = "CCJOBID_O";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Output;
            sp_NewupdateshipmentAt.Parameters.Add(p);

            p = sp_NewupdateshipmentAt.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_NewupdateshipmentAt.Parameters.Add(p);
        }

        private void CreateSP_NewAt()
        {
            IDbDataParameter p;
            OracleParameter oP;

            sp_NewAt = connectionProvider.GetConnection().CreateCommand();
            sp_NewAt.CommandText = "CARRIER_COMPLIANT_QUEUE.NEW_AT";
            sp_NewAt.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_NewAt).BindByName = true;
#endif

            oP = sp_NewAt.CreateParameter() as OracleParameter;
            oP.ParameterName = "CCMSG_I";
#if ODP_NET
            oP.OracleDbType = OracleDbType.Clob;
#else
      oP.OracleType = OracleType.Clob;
#endif
            oP.Direction = ParameterDirection.Input;
            sp_NewAt.Parameters.Add(oP);


            p = sp_NewAt.CreateParameter();
            p.ParameterName = "CCTYPE_I";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Input;
            sp_NewAt.Parameters.Add(p);

            p = sp_NewAt.CreateParameter();
            p.ParameterName = "DEPARTURE_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewAt.Parameters.Add(p);

            p = sp_NewAt.CreateParameter();
            p.ParameterName = "CONSIGNMENT_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewAt.Parameters.Add(p);

            p = sp_NewAt.CreateParameter();
            p.ParameterName = "PBCARID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewAt.Parameters.Add(p);

            p = sp_NewAt.CreateParameter();
            p.ParameterName = "PBHEADID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewAt.Parameters.Add(p);

            p = sp_NewAt.CreateParameter();
            p.ParameterName = "CCJOBID_O";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Output;
            sp_NewAt.Parameters.Add(p);

            p = sp_NewAt.CreateParameter();
            p.ParameterName = "CCPRI_I";
            p.DbType = DbType.Double;
            p.Direction = ParameterDirection.Input;
            sp_NewAt.Parameters.Add(p);
        }

        private void CreateSP_NewLog()
        {
            IDbDataParameter p;

            sp_NewLog = connectionProvider.GetConnection().CreateCommand();
            sp_NewLog.CommandText = "CARRIER_COMPLIANT_QUEUE.NEW_LOG";
            sp_NewLog.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_NewLog).BindByName = true;
#endif

            p = sp_NewLog.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_NewLog.Parameters.Add(p);

            p = sp_NewLog.CreateParameter();
            p.ParameterName = "CCTYPE_I";
            p.DbType = DbType.String;
            p.Size = 2;
            p.Direction = ParameterDirection.Input;
            sp_NewLog.Parameters.Add(p);

            p = sp_NewLog.CreateParameter();
            p.ParameterName = "TIMESTAMPDESCR_I";
            p.DbType = DbType.String;
            p.Size = 200;
            p.Direction = ParameterDirection.Input;
            sp_NewLog.Parameters.Add(p);

            p = sp_NewLog.CreateParameter();
            p.ParameterName = "TIMESTAMP_I";
            p.DbType = DbType.DateTime;
            p.Direction = ParameterDirection.Input;
            sp_NewLog.Parameters.Add(p);

            p = sp_NewLog.CreateParameter();
            p.ParameterName = "LOG_SEQUENCE_I";
            p.DbType = DbType.Decimal;
            p.Precision = 5;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_NewLog.Parameters.Add(p);

            p = sp_NewLog.CreateParameter();
            p.ParameterName = "CCMSG_LENGTH_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_NewLog.Parameters.Add(p);

            p = sp_NewLog.CreateParameter();
            p.ParameterName = "ADAPTER_ID_I";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Input;
            sp_NewLog.Parameters.Add(p);
        }

        private void CreateSP_Remove()
        {
            IDbDataParameter p;

            sp_Remove = connectionProvider.GetConnection().CreateCommand();
            sp_Remove.CommandText = "CARRIER_COMPLIANT_QUEUE.REMOVE";
            sp_Remove.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_Remove).BindByName = true;
#endif

            p = sp_Remove.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_Remove.Parameters.Add(p);

            p = sp_Remove.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_Remove.Parameters.Add(p);
        }

        private void CreateSP_Reset()
        {
            IDbDataParameter p;

            sp_Reset = connectionProvider.GetConnection().CreateCommand();
            sp_Reset.CommandText = "CARRIER_COMPLIANT_QUEUE.RESET";
            sp_Reset.CommandType = System.Data.CommandType.StoredProcedure;
#if ODP_NET
            ((OracleCommand)sp_Reset).BindByName = true;
#endif

            p = sp_Reset.CreateParameter();
            p.ParameterName = "CCJOBID_I";
            p.DbType = DbType.Decimal;
            p.Precision = 12;
            p.Scale = 0;
            p.Direction = ParameterDirection.Input;
            sp_Reset.Parameters.Add(p);

            p = sp_Reset.CreateParameter();
            p.ParameterName = "ALMID_O";
            p.DbType = DbType.String;
            p.Size = 35;
            p.Direction = ParameterDirection.Output;
            sp_Reset.Parameters.Add(p);
        }

        // ----------------------------------------------------------------------------

        public void AdapterReset(string ADAPTER_ID_I)
        {
            if (sp_AdapterReset == null)
                CreateSP_AdapterReset();

            sp_AdapterReset.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(ADAPTER_ID_I))
                (sp_AdapterReset.Parameters["ADAPTER_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_AdapterReset.Parameters["ADAPTER_ID_I"] as IDbDataParameter).Value = ADAPTER_ID_I;

            // Execute stored procedure

            sp_AdapterReset.Prepare();
            sp_AdapterReset.ExecuteNonQuery();

            // Set Out Parameters
        }

        public Nullable<double> GetwaitjobClosedeparture(Nullable<double> CCJOBID_I,
                                                         string DEPARTURE_ID_I,
                                                         string CONSIGNMENT_ID_I,
                                                         string PBCARID_I,
                                                         string PBHEADID_I,
                                                         Nullable<int> CCPRI_I)
        {
            if (sp_GetwaitjobClosedeparture == null)
                CreateSP_GetwaitjobClosedeparture();

            sp_GetwaitjobClosedeparture.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_GetwaitjobClosedeparture.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobClosedeparture.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_GetwaitjobClosedeparture.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobClosedeparture.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_GetwaitjobClosedeparture.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobClosedeparture.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_GetwaitjobClosedeparture.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobClosedeparture.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_GetwaitjobClosedeparture.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobClosedeparture.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_GetwaitjobClosedeparture.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobClosedeparture.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_GetwaitjobClosedeparture.Prepare();
            sp_GetwaitjobClosedeparture.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<double> ret;

            if ((sp_GetwaitjobClosedeparture.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = Convert.ToDouble((sp_GetwaitjobClosedeparture.Parameters[""] as IDbDataParameter).Value);

            return ret;
        }

        public Nullable<double> GetwaitjobPrintdeparture(Nullable<double> CCJOBID_I,
                                                         string DEPARTURE_ID_I,
                                                         string CONSIGNMENT_ID_I,
                                                         string PBCARID_I,
                                                         string PBHEADID_I,
                                                         Nullable<int> CCPRI_I)
        {
            if (sp_GetwaitjobPrintdeparture == null)
                CreateSP_GetwaitjobPrintdeparture();

            sp_GetwaitjobPrintdeparture.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_GetwaitjobPrintdeparture.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintdeparture.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_GetwaitjobPrintdeparture.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintdeparture.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_GetwaitjobPrintdeparture.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintdeparture.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_GetwaitjobPrintdeparture.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintdeparture.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_GetwaitjobPrintdeparture.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintdeparture.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_GetwaitjobPrintdeparture.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintdeparture.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_GetwaitjobPrintdeparture.Prepare();
            sp_GetwaitjobPrintdeparture.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<double> ret;

            if ((sp_GetwaitjobPrintdeparture.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = Convert.ToDouble((sp_GetwaitjobPrintdeparture.Parameters[""] as IDbDataParameter).Value);

            return ret;
        }

        public Nullable<double> GetwaitjobPrintparcel(Nullable<double> CCJOBID_I,
                                                      string DEPARTURE_ID_I,
                                                      string CONSIGNMENT_ID_I,
                                                      string PBCARID_I,
                                                      string PBHEADID_I,
                                                      Nullable<int> CCPRI_I)
        {
            if (sp_GetwaitjobPrintparcel == null)
                CreateSP_GetwaitjobPrintparcel();

            sp_GetwaitjobPrintparcel.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_GetwaitjobPrintparcel.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintparcel.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_GetwaitjobPrintparcel.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintparcel.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_GetwaitjobPrintparcel.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintparcel.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_GetwaitjobPrintparcel.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintparcel.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_GetwaitjobPrintparcel.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintparcel.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_GetwaitjobPrintparcel.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintparcel.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_GetwaitjobPrintparcel.Prepare();
            sp_GetwaitjobPrintparcel.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<double> ret;

            if ((sp_GetwaitjobPrintparcel.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = Convert.ToDouble((sp_GetwaitjobPrintparcel.Parameters[""] as IDbDataParameter).Value);

            return ret;
        }

        public Nullable<double> GetwaitjobPrintshipment(Nullable<double> CCJOBID_I,
                                                        string DEPARTURE_ID_I,
                                                        string CONSIGNMENT_ID_I,
                                                        string PBCARID_I,
                                                        string PBHEADID_I,
                                                        Nullable<int> CCPRI_I)
        {
            if (sp_GetwaitjobPrintshipment == null)
                CreateSP_GetwaitjobPrintshipment();

            sp_GetwaitjobPrintshipment.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_GetwaitjobPrintshipment.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintshipment.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_GetwaitjobPrintshipment.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintshipment.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_GetwaitjobPrintshipment.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintshipment.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_GetwaitjobPrintshipment.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintshipment.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_GetwaitjobPrintshipment.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintshipment.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_GetwaitjobPrintshipment.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobPrintshipment.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_GetwaitjobPrintshipment.Prepare();
            sp_GetwaitjobPrintshipment.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<double> ret;

            if ((sp_GetwaitjobPrintshipment.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = Convert.ToDouble((sp_GetwaitjobPrintshipment.Parameters[""] as IDbDataParameter).Value);

            return ret;
        }

        public Nullable<double> GetwaitjobUpdateparcel(Nullable<double> CCJOBID_I,
                                                       string DEPARTURE_ID_I,
                                                       string CONSIGNMENT_ID_I,
                                                       string PBCARID_I,
                                                       string PBHEADID_I,
                                                       Nullable<int> CCPRI_I)
        {
            if (sp_GetwaitjobUpdateparcel == null)
                CreateSP_GetwaitjobUpdateparcel();

            sp_GetwaitjobUpdateparcel.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_GetwaitjobUpdateparcel.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateparcel.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_GetwaitjobUpdateparcel.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateparcel.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_GetwaitjobUpdateparcel.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateparcel.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_GetwaitjobUpdateparcel.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateparcel.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_GetwaitjobUpdateparcel.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateparcel.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_GetwaitjobUpdateparcel.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateparcel.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_GetwaitjobUpdateparcel.Prepare();
            sp_GetwaitjobUpdateparcel.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<double> ret;

            if ((sp_GetwaitjobUpdateparcel.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = Convert.ToDouble((sp_GetwaitjobUpdateparcel.Parameters[""] as IDbDataParameter).Value);

            return ret;
        }

        public Nullable<double> GetwaitjobUpdateshipment(Nullable<double> CCJOBID_I,
                                                         string DEPARTURE_ID_I,
                                                         string CONSIGNMENT_ID_I,
                                                         string PBCARID_I,
                                                         string PBHEADID_I,
                                                         Nullable<int> CCPRI_I)
        {
            if (sp_GetwaitjobUpdateshipment == null)
                CreateSP_GetwaitjobUpdateshipment();

            sp_GetwaitjobUpdateshipment.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_GetwaitjobUpdateshipment.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateshipment.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_GetwaitjobUpdateshipment.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateshipment.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_GetwaitjobUpdateshipment.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateshipment.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_GetwaitjobUpdateshipment.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateshipment.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_GetwaitjobUpdateshipment.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateshipment.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_GetwaitjobUpdateshipment.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetwaitjobUpdateshipment.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_GetwaitjobUpdateshipment.Prepare();
            sp_GetwaitjobUpdateshipment.ExecuteNonQuery();

            // Set Out Parameters

            Nullable<double> ret;

            if ((sp_GetwaitjobUpdateshipment.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = Convert.ToDouble((sp_GetwaitjobUpdateshipment.Parameters[""] as IDbDataParameter).Value);

            return ret;
        }

        public void GetNextMessage(string ADAPTER_ID_I,
                                   ref Nullable<double> CCJOBID_O,
                                   ref string CCTYPE_O,
                                   ref string CCMSG_O,
                                   ref string WHID_O)
        {
            if (sp_GetNextMessage == null)
                CreateSP_GetNextMessage();

            sp_GetNextMessage.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(ADAPTER_ID_I))
                (sp_GetNextMessage.Parameters["ADAPTER_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_GetNextMessage.Parameters["ADAPTER_ID_I"] as IDbDataParameter).Value = ADAPTER_ID_I;

            // Execute stored procedure

            sp_GetNextMessage.Prepare();
            sp_GetNextMessage.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_GetNextMessage.Parameters["CCJOBID_O"] as IDbDataParameter).Value == DBNull.Value)
                CCJOBID_O = null;
            else
                CCJOBID_O = Convert.ToDouble((sp_GetNextMessage.Parameters["CCJOBID_O"] as IDbDataParameter).Value);

            if ((sp_GetNextMessage.Parameters["CCTYPE_O"] as IDbDataParameter).Value == DBNull.Value)
                CCTYPE_O = null;
            else
                CCTYPE_O = (sp_GetNextMessage.Parameters["CCTYPE_O"] as IDbDataParameter).Value.ToString();

            if ((sp_GetNextMessage.Parameters["CCMSG_O"] as IDbDataParameter).Value == DBNull.Value || ((OracleClob)((sp_GetNextMessage.Parameters["CCMSG_O"] as IDbDataParameter).Value)).IsNull)
                CCMSG_O = null;
            else
                CCMSG_O = (string)((OracleClob)((sp_GetNextMessage.Parameters["CCMSG_O"] as IDbDataParameter).Value)).Value;

            if ((sp_GetNextMessage.Parameters["WHID_O"] as IDbDataParameter).Value == DBNull.Value)
                WHID_O = null;
            else
                WHID_O = (sp_GetNextMessage.Parameters["WHID_O"] as IDbDataParameter).Value.ToString();

        }

        public string GetSourceVersionInfo()
        {
            if (sp_GetSourceVersionInfo == null)
                CreateSP_GetSourceVersionInfo();

            sp_GetSourceVersionInfo.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            // Execute stored procedure

            sp_GetSourceVersionInfo.Prepare();
            sp_GetSourceVersionInfo.ExecuteNonQuery();

            // Set Out Parameters

            string ret;

            if ((sp_GetSourceVersionInfo.Parameters[""] as IDbDataParameter).Value == DBNull.Value)
                ret = null;
            else
                ret = (sp_GetSourceVersionInfo.Parameters[""] as IDbDataParameter).Value.ToString();

            return ret;
        }

        public void Handledependencies(Nullable<double> CCJOBID_I,
                                       ref string ALMID_O)
        {
            if (sp_Handledependencies == null)
                CreateSP_Handledependencies();

            sp_Handledependencies.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_Handledependencies.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Handledependencies.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            // Execute stored procedure

            sp_Handledependencies.Prepare();
            sp_Handledependencies.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_Handledependencies.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_Handledependencies.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public void ModifyError(Nullable<double> CCJOBID_I,
                                string CCERRMSG_I,
                                string CC_MESSSAGE_ID_I,
                                string ALMID_I,
                                ref string ALMID_O)
        {
            if (sp_ModifyError == null)
                CreateSP_ModifyError();

            sp_ModifyError.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_ModifyError.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyError.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(CCERRMSG_I))
                (sp_ModifyError.Parameters["CCERRMSG_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyError.Parameters["CCERRMSG_I"] as IDbDataParameter).Value = CCERRMSG_I;

            if (String.IsNullOrEmpty(CC_MESSSAGE_ID_I))
                (sp_ModifyError.Parameters["CC_MESSSAGE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyError.Parameters["CC_MESSSAGE_ID_I"] as IDbDataParameter).Value = CC_MESSSAGE_ID_I;

            if (String.IsNullOrEmpty(ALMID_I))
                (sp_ModifyError.Parameters["ALMID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyError.Parameters["ALMID_I"] as IDbDataParameter).Value = ALMID_I;

            // Execute stored procedure

            sp_ModifyError.Prepare();
            sp_ModifyError.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_ModifyError.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_ModifyError.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public void ModifyProcessed(Nullable<double> CCJOBID_I,
                                    string CC_MESSSAGE_ID_I,
                                    ref string ALMID_O)
        {
            if (sp_ModifyProcessed == null)
                CreateSP_ModifyProcessed();

            sp_ModifyProcessed.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_ModifyProcessed.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyProcessed.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(CC_MESSSAGE_ID_I))
                (sp_ModifyProcessed.Parameters["CC_MESSSAGE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_ModifyProcessed.Parameters["CC_MESSSAGE_ID_I"] as IDbDataParameter).Value = CC_MESSSAGE_ID_I;

            // Execute stored procedure

            sp_ModifyProcessed.Prepare();
            sp_ModifyProcessed.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_ModifyProcessed.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_ModifyProcessed.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public void New(Nullable<double> CCJOBID_I,
                        string CCMSG_I,
                        string CCTYPE_I,
                        string DEPARTURE_ID_I,
                        string CONSIGNMENT_ID_I,
                        string PBCARID_I,
                        string PBHEADID_I,
                        Nullable<int> CCPRI_I,
                        Nullable<double> CCJOBID_WAIT_I)
        {
            if (sp_New == null)
                CreateSP_New();

            sp_New.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_New.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_New.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(CCMSG_I))
                (sp_New.Parameters["CCMSG_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_New.Parameters["CCMSG_I"] as IDbDataParameter).Value = CCMSG_I;

            if (String.IsNullOrEmpty(CCTYPE_I))
                (sp_New.Parameters["CCTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_New.Parameters["CCTYPE_I"] as IDbDataParameter).Value = CCTYPE_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_New.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_New.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_New.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_New.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_New.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_New.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_New.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_New.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_New.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_New.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            if (CCJOBID_WAIT_I == null)
                (sp_New.Parameters["CCJOBID_WAIT_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_New.Parameters["CCJOBID_WAIT_I"] as IDbDataParameter).Value = CCJOBID_WAIT_I;

            // Execute stored procedure

            sp_New.Prepare();
            sp_New.ExecuteNonQuery();

            // Set Out Parameters
        }

        public void NewclosedepartureAt(string CCMSG_I,
                                        string CCTYPE_I,
                                        string DEPARTURE_ID_I,
                                        string CONSIGNMENT_ID_I,
                                        string PBCARID_I,
                                        string PBHEADID_I,
                                        ref Nullable<double> CCJOBID_O,
                                        Nullable<int> CCPRI_I)
        {
            if (sp_NewclosedepartureAt == null)
                CreateSP_NewclosedepartureAt();

            sp_NewclosedepartureAt.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CCMSG_I))
                (sp_NewclosedepartureAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewclosedepartureAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = CCMSG_I;

            if (String.IsNullOrEmpty(CCTYPE_I))
                (sp_NewclosedepartureAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewclosedepartureAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = CCTYPE_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_NewclosedepartureAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewclosedepartureAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_NewclosedepartureAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewclosedepartureAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_NewclosedepartureAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewclosedepartureAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_NewclosedepartureAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewclosedepartureAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_NewclosedepartureAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewclosedepartureAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_NewclosedepartureAt.Prepare();
            sp_NewclosedepartureAt.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_NewclosedepartureAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value == DBNull.Value)
                CCJOBID_O = null;
            else
                CCJOBID_O = Convert.ToDouble((sp_NewclosedepartureAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value);
        }

        public void NewprintparcelAt(string CCMSG_I,
                                     string CCTYPE_I,
                                     string DEPARTURE_ID_I,
                                     string CONSIGNMENT_ID_I,
                                     string PBCARID_I,
                                     string PBHEADID_I,
                                     ref Nullable<double> CCJOBID_O,
                                     Nullable<int> CCPRI_I)
        {
            if (sp_NewprintparcelAt == null)
                CreateSP_NewprintparcelAt();

            sp_NewprintparcelAt.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CCMSG_I))
                (sp_NewprintparcelAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintparcelAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = CCMSG_I;

            if (String.IsNullOrEmpty(CCTYPE_I))
                (sp_NewprintparcelAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintparcelAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = CCTYPE_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_NewprintparcelAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintparcelAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_NewprintparcelAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintparcelAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_NewprintparcelAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintparcelAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_NewprintparcelAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintparcelAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_NewprintparcelAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintparcelAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_NewprintparcelAt.Prepare();
            sp_NewprintparcelAt.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_NewprintparcelAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value == DBNull.Value)
                CCJOBID_O = null;
            else
                CCJOBID_O = Convert.ToDouble((sp_NewprintparcelAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value);
        }

        public void NewprintshipmentAt(string CCMSG_I,
                                       string CCTYPE_I,
                                       string DEPARTURE_ID_I,
                                       string CONSIGNMENT_ID_I,
                                       string PBCARID_I,
                                       string PBHEADID_I,
                                       ref Nullable<double> CCJOBID_O,
                                       Nullable<int> CCPRI_I)
        {
            if (sp_NewprintshipmentAt == null)
                CreateSP_NewprintshipmentAt();

            sp_NewprintshipmentAt.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CCMSG_I))
                (sp_NewprintshipmentAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintshipmentAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = CCMSG_I;

            if (String.IsNullOrEmpty(CCTYPE_I))
                (sp_NewprintshipmentAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintshipmentAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = CCTYPE_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_NewprintshipmentAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintshipmentAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_NewprintshipmentAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintshipmentAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_NewprintshipmentAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintshipmentAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_NewprintshipmentAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintshipmentAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_NewprintshipmentAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewprintshipmentAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_NewprintshipmentAt.Prepare();
            sp_NewprintshipmentAt.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_NewprintshipmentAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value == DBNull.Value)
                CCJOBID_O = null;
            else
                CCJOBID_O = Convert.ToDouble((sp_NewprintshipmentAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value);
        }

        public void NewremoveparcelAt(string CCMSG_I,
                                      string CCTYPE_I,
                                      string DEPARTURE_ID_I,
                                      string CONSIGNMENT_ID_I,
                                      string PBCARID_I,
                                      string PBHEADID_I,
                                      ref Nullable<double> CCJOBID_O,
                                      Nullable<int> CCPRI_I)
        {
            if (sp_NewremoveparcelAt == null)
                CreateSP_NewremoveparcelAt();

            sp_NewremoveparcelAt.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CCMSG_I))
                (sp_NewremoveparcelAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewremoveparcelAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = CCMSG_I;

            if (String.IsNullOrEmpty(CCTYPE_I))
                (sp_NewremoveparcelAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewremoveparcelAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = CCTYPE_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_NewremoveparcelAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewremoveparcelAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_NewremoveparcelAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewremoveparcelAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_NewremoveparcelAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewremoveparcelAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_NewremoveparcelAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewremoveparcelAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_NewremoveparcelAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewremoveparcelAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_NewremoveparcelAt.Prepare();
            sp_NewremoveparcelAt.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_NewremoveparcelAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value == DBNull.Value)
                CCJOBID_O = null;
            else
                CCJOBID_O = Convert.ToDouble((sp_NewremoveparcelAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value);
        }

        public void NewupdateparcelAt(string CCMSG_I,
                                      string CCTYPE_I,
                                      string DEPARTURE_ID_I,
                                      string CONSIGNMENT_ID_I,
                                      string PBCARID_I,
                                      string PBHEADID_I,
                                      ref Nullable<double> CCJOBID_O,
                                      Nullable<int> CCPRI_I)
        {
            if (sp_NewupdateparcelAt == null)
                CreateSP_NewupdateparcelAt();

            sp_NewupdateparcelAt.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CCMSG_I))
                (sp_NewupdateparcelAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateparcelAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = CCMSG_I;

            if (String.IsNullOrEmpty(CCTYPE_I))
                (sp_NewupdateparcelAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateparcelAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = CCTYPE_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_NewupdateparcelAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateparcelAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_NewupdateparcelAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateparcelAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_NewupdateparcelAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateparcelAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_NewupdateparcelAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateparcelAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_NewupdateparcelAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateparcelAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_NewupdateparcelAt.Prepare();
            sp_NewupdateparcelAt.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_NewupdateparcelAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value == DBNull.Value)
                CCJOBID_O = null;
            else
                CCJOBID_O = Convert.ToDouble((sp_NewupdateparcelAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value);
        }

        public void NewupdateshipmentAt(string CCMSG_I,
                                        string CCTYPE_I,
                                        string DEPARTURE_ID_I,
                                        string CONSIGNMENT_ID_I,
                                        string PBCARID_I,
                                        string PBHEADID_I,
                                        ref Nullable<double> CCJOBID_O,
                                        Nullable<int> CCPRI_I)
        {
            if (sp_NewupdateshipmentAt == null)
                CreateSP_NewupdateshipmentAt();

            sp_NewupdateshipmentAt.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CCMSG_I))
                (sp_NewupdateshipmentAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateshipmentAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = CCMSG_I;

            if (String.IsNullOrEmpty(CCTYPE_I))
                (sp_NewupdateshipmentAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateshipmentAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = CCTYPE_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_NewupdateshipmentAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateshipmentAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_NewupdateshipmentAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateshipmentAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_NewupdateshipmentAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateshipmentAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_NewupdateshipmentAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateshipmentAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_NewupdateshipmentAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewupdateshipmentAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_NewupdateshipmentAt.Prepare();
            sp_NewupdateshipmentAt.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_NewupdateshipmentAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value == DBNull.Value)
                CCJOBID_O = null;
            else
                CCJOBID_O = Convert.ToDouble((sp_NewupdateshipmentAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value);
        }

        public void NewAt(string CCMSG_I,
                          string CCTYPE_I,
                          string DEPARTURE_ID_I,
                          string CONSIGNMENT_ID_I,
                          string PBCARID_I,
                          string PBHEADID_I,
                          ref Nullable<double> CCJOBID_O,
                          Nullable<int> CCPRI_I)
        {
            if (sp_NewAt == null)
                CreateSP_NewAt();

            sp_NewAt.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (String.IsNullOrEmpty(CCMSG_I))
                (sp_NewAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewAt.Parameters["CCMSG_I"] as IDbDataParameter).Value = CCMSG_I;

            if (String.IsNullOrEmpty(CCTYPE_I))
                (sp_NewAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewAt.Parameters["CCTYPE_I"] as IDbDataParameter).Value = CCTYPE_I;

            if (String.IsNullOrEmpty(DEPARTURE_ID_I))
                (sp_NewAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewAt.Parameters["DEPARTURE_ID_I"] as IDbDataParameter).Value = DEPARTURE_ID_I;

            if (String.IsNullOrEmpty(CONSIGNMENT_ID_I))
                (sp_NewAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewAt.Parameters["CONSIGNMENT_ID_I"] as IDbDataParameter).Value = CONSIGNMENT_ID_I;

            if (String.IsNullOrEmpty(PBCARID_I))
                (sp_NewAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewAt.Parameters["PBCARID_I"] as IDbDataParameter).Value = PBCARID_I;

            if (String.IsNullOrEmpty(PBHEADID_I))
                (sp_NewAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewAt.Parameters["PBHEADID_I"] as IDbDataParameter).Value = PBHEADID_I;

            if (CCPRI_I == null)
                (sp_NewAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewAt.Parameters["CCPRI_I"] as IDbDataParameter).Value = CCPRI_I;

            // Execute stored procedure

            sp_NewAt.Prepare();
            sp_NewAt.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_NewAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value == DBNull.Value)
                CCJOBID_O = null;
            else
                CCJOBID_O = Convert.ToDouble((sp_NewAt.Parameters["CCJOBID_O"] as IDbDataParameter).Value);
        }

        public void NewLog(Nullable<double> CCJOBID_I,
                           string CCTYPE_I,
                           string TIMESTAMPDESCR_I,
                           Nullable<DateTime> TIMESTAMP_I,
                           Nullable<int> LOG_SEQUENCE_I,
                           Nullable<double> CCMSG_LENGTH_I,
                           string ADAPTER_ID_I)
        {
            if (sp_NewLog == null)
                CreateSP_NewLog();

            sp_NewLog.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_NewLog.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewLog.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            if (String.IsNullOrEmpty(CCTYPE_I))
                (sp_NewLog.Parameters["CCTYPE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewLog.Parameters["CCTYPE_I"] as IDbDataParameter).Value = CCTYPE_I;

            if (String.IsNullOrEmpty(TIMESTAMPDESCR_I))
                (sp_NewLog.Parameters["TIMESTAMPDESCR_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewLog.Parameters["TIMESTAMPDESCR_I"] as IDbDataParameter).Value = TIMESTAMPDESCR_I;

            if (TIMESTAMP_I == null)
                (sp_NewLog.Parameters["TIMESTAMP_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewLog.Parameters["TIMESTAMP_I"] as IDbDataParameter).Value = TIMESTAMP_I;

            if (LOG_SEQUENCE_I == null)
                (sp_NewLog.Parameters["LOG_SEQUENCE_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewLog.Parameters["LOG_SEQUENCE_I"] as IDbDataParameter).Value = LOG_SEQUENCE_I;

            if (CCMSG_LENGTH_I == null)
                (sp_NewLog.Parameters["CCMSG_LENGTH_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewLog.Parameters["CCMSG_LENGTH_I"] as IDbDataParameter).Value = CCMSG_LENGTH_I;

            if (String.IsNullOrEmpty(ADAPTER_ID_I))
                (sp_NewLog.Parameters["ADAPTER_ID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_NewLog.Parameters["ADAPTER_ID_I"] as IDbDataParameter).Value = ADAPTER_ID_I;

            // Execute stored procedure

            sp_NewLog.Prepare();
            sp_NewLog.ExecuteNonQuery();

            // Set Out Parameters
        }

        public void Remove(Nullable<double> CCJOBID_I,
                           ref string ALMID_O)
        {
            if (sp_Remove == null)
                CreateSP_Remove();

            sp_Remove.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_Remove.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Remove.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            // Execute stored procedure

            sp_Remove.Prepare();
            sp_Remove.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_Remove.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_Remove.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }

        public void Reset(Nullable<double> CCJOBID_I,
                          ref string ALMID_O)
        {
            if (sp_Reset == null)
                CreateSP_Reset();

            sp_Reset.Transaction = connectionProvider.CurrentTransaction;

            // Set In Parameters

            if (CCJOBID_I == null)
                (sp_Reset.Parameters["CCJOBID_I"] as IDbDataParameter).Value = DBNull.Value;
            else
                (sp_Reset.Parameters["CCJOBID_I"] as IDbDataParameter).Value = CCJOBID_I;

            // Execute stored procedure

            sp_Reset.Prepare();
            sp_Reset.ExecuteNonQuery();

            // Set Out Parameters

            if ((sp_Reset.Parameters["ALMID_O"] as IDbDataParameter).Value == DBNull.Value)
                ALMID_O = null;
            else
                ALMID_O = (sp_Reset.Parameters["ALMID_O"] as IDbDataParameter).Value.ToString();
        }
    }
}
