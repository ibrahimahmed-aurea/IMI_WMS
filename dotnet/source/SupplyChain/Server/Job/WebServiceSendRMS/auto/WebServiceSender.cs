/*
  File           : 

  Description    : Internal classes for calling webservices with outgoing data.
                   This code was generated, do not edit.

*/
using System;
using System.Diagnostics;
using System.Xml.Serialization;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;

namespace Imi.Wms.WebServices.ExternalInterface
{
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  [System.Web.Services.WebServiceBindingAttribute(Name="InboundInterfaceSoap", Namespace="http://im.se/wms/webservices/")]
  public class SenderHandler : System.Web.Services.Protocols.SoapHttpClientProtocol
  {
    public string _Debug()
    {
      return "Generated on   : 2017-09-08 11:58:10\r\n" +
             "Generated by   : SWG\\aron@SE0133D\r\n" +
             "Generated in   : C:\\projects\\views\\aron_80M_ss\\dotnet\\source\\CodeGenerators\\wscc\r\n";
    }

    public SenderHandler()
    {
      this.Url = "http://localhost/Inbound/auto/ExternalInterface.asmx"; // the Url ALWAYS need to have a value otherwise an exception occurs.
    }


    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/Departure", RequestNamespace="http://im.se/wms/webservices/", ResponseNamespace="http://im.se/wms/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void Departure( string CommPartnerId, string TransactionId, DepartureDoc aDepartureDoc )
    {
      this.Invoke("Departure", new object[] {
        CommPartnerId,
        TransactionId,
        aDepartureDoc});
      return;
    }

    public System.IAsyncResult BeginDeparture( string CommPartnerId, string TransactionId, DepartureDoc aDepartureDoc, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("Departure", new object[] {
        CommPartnerId,
        TransactionId,
        aDepartureDoc}, callback, asyncState);
    }

    public void EndDeparture(System.IAsyncResult asyncResult)
    {
      this.EndInvoke(asyncResult);
    }


    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/DepartureNode", RequestNamespace="http://im.se/wms/webservices/", ResponseNamespace="http://im.se/wms/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DepartureNode( string CommPartnerId, string TransactionId, DepartureNodeDoc aDepartureNodeDoc )
    {
      this.Invoke("DepartureNode", new object[] {
        CommPartnerId,
        TransactionId,
        aDepartureNodeDoc});
      return;
    }

    public System.IAsyncResult BeginDepartureNode( string CommPartnerId, string TransactionId, DepartureNodeDoc aDepartureNodeDoc, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("DepartureNode", new object[] {
        CommPartnerId,
        TransactionId,
        aDepartureNodeDoc}, callback, asyncState);
    }

    public void EndDepartureNode(System.IAsyncResult asyncResult)
    {
      this.EndInvoke(asyncResult);
    }


    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/DepartureTransportType", RequestNamespace="http://im.se/wms/webservices/", ResponseNamespace="http://im.se/wms/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DepartureTransportType( string CommPartnerId, string TransactionId, DepartureTransportTypeDoc aDepartureTransportTypeDoc )
    {
      this.Invoke("DepartureTransportType", new object[] {
        CommPartnerId,
        TransactionId,
        aDepartureTransportTypeDoc});
      return;
    }

    public System.IAsyncResult BeginDepartureTransportType( string CommPartnerId, string TransactionId, DepartureTransportTypeDoc aDepartureTransportTypeDoc, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("DepartureTransportType", new object[] {
        CommPartnerId,
        TransactionId,
        aDepartureTransportTypeDoc}, callback, asyncState);
    }

    public void EndDepartureTransportType(System.IAsyncResult asyncResult)
    {
      this.EndInvoke(asyncResult);
    }


    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/DepartureLoad", RequestNamespace="http://im.se/wms/webservices/", ResponseNamespace="http://im.se/wms/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void DepartureLoad( string CommPartnerId, string TransactionId, DepartureLoadDoc aDepartureLoadDoc )
    {
      this.Invoke("DepartureLoad", new object[] {
        CommPartnerId,
        TransactionId,
        aDepartureLoadDoc});
      return;
    }

    public System.IAsyncResult BeginDepartureLoad( string CommPartnerId, string TransactionId, DepartureLoadDoc aDepartureLoadDoc, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("DepartureLoad", new object[] {
        CommPartnerId,
        TransactionId,
        aDepartureLoadDoc}, callback, asyncState);
    }

    public void EndDepartureLoad(System.IAsyncResult asyncResult)
    {
      this.EndInvoke(asyncResult);
    }


    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/ModifyDepartureLoad", RequestNamespace="http://im.se/wms/webservices/", ResponseNamespace="http://im.se/wms/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void ModifyDepartureLoad( string CommPartnerId, string TransactionId, ModifyDepartureLoadDoc aModifyDepartureLoadDoc )
    {
      this.Invoke("ModifyDepartureLoad", new object[] {
        CommPartnerId,
        TransactionId,
        aModifyDepartureLoadDoc});
      return;
    }

    public System.IAsyncResult BeginModifyDepartureLoad( string CommPartnerId, string TransactionId, ModifyDepartureLoadDoc aModifyDepartureLoadDoc, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("ModifyDepartureLoad", new object[] {
        CommPartnerId,
        TransactionId,
        aModifyDepartureLoadDoc}, callback, asyncState);
    }

    public void EndModifyDepartureLoad(System.IAsyncResult asyncResult)
    {
      this.EndInvoke(asyncResult);
    }


    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/RemoveDeparture", RequestNamespace="http://im.se/wms/webservices/", ResponseNamespace="http://im.se/wms/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveDeparture( string CommPartnerId, string TransactionId, RemoveDepartureDoc aRemoveDepartureDoc )
    {
      this.Invoke("RemoveDeparture", new object[] {
        CommPartnerId,
        TransactionId,
        aRemoveDepartureDoc});
      return;
    }

    public System.IAsyncResult BeginRemoveDeparture( string CommPartnerId, string TransactionId, RemoveDepartureDoc aRemoveDepartureDoc, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("RemoveDeparture", new object[] {
        CommPartnerId,
        TransactionId,
        aRemoveDepartureDoc}, callback, asyncState);
    }

    public void EndRemoveDeparture(System.IAsyncResult asyncResult)
    {
      this.EndInvoke(asyncResult);
    }


    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/RemoveDepartureNode", RequestNamespace="http://im.se/wms/webservices/", ResponseNamespace="http://im.se/wms/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveDepartureNode( string CommPartnerId, string TransactionId, RemoveDepartureNodeDoc aRemoveDepartureNodeDoc )
    {
      this.Invoke("RemoveDepartureNode", new object[] {
        CommPartnerId,
        TransactionId,
        aRemoveDepartureNodeDoc});
      return;
    }

    public System.IAsyncResult BeginRemoveDepartureNode( string CommPartnerId, string TransactionId, RemoveDepartureNodeDoc aRemoveDepartureNodeDoc, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("RemoveDepartureNode", new object[] {
        CommPartnerId,
        TransactionId,
        aRemoveDepartureNodeDoc}, callback, asyncState);
    }

    public void EndRemoveDepartureNode(System.IAsyncResult asyncResult)
    {
      this.EndInvoke(asyncResult);
    }


    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/RemoveDepartureTransportType", RequestNamespace="http://im.se/wms/webservices/", ResponseNamespace="http://im.se/wms/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoveDepartureTransportType( string CommPartnerId, string TransactionId, RemoveDepartureTransportTypeDoc aRemoveDepartureTransportTypeDoc )
    {
      this.Invoke("RemoveDepartureTransportType", new object[] {
        CommPartnerId,
        TransactionId,
        aRemoveDepartureTransportTypeDoc});
      return;
    }

    public System.IAsyncResult BeginRemoveDepartureTransportType( string CommPartnerId, string TransactionId, RemoveDepartureTransportTypeDoc aRemoveDepartureTransportTypeDoc, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("RemoveDepartureTransportType", new object[] {
        CommPartnerId,
        TransactionId,
        aRemoveDepartureTransportTypeDoc}, callback, asyncState);
    }

    public void EndRemoveDepartureTransportType(System.IAsyncResult asyncResult)
    {
      this.EndInvoke(asyncResult);
    }


    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://im.se/wms/webservices/Confirm", RequestNamespace="http://im.se/wms/webservices/", ResponseNamespace="http://im.se/wms/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void Confirm( string CommPartnerId, string TransactionId, ConfirmDoc aConfirmDoc )
    {
      this.Invoke("Confirm", new object[] {
        CommPartnerId,
        TransactionId,
        aConfirmDoc});
      return;
    }

    public System.IAsyncResult BeginConfirm( string CommPartnerId, string TransactionId, ConfirmDoc aConfirmDoc, System.AsyncCallback callback, object asyncState)
    {
      return this.BeginInvoke("Confirm", new object[] {
        CommPartnerId,
        TransactionId,
        aConfirmDoc}, callback, asyncState);
    }

    public void EndConfirm(System.IAsyncResult asyncResult)
    {
      this.EndInvoke(asyncResult);
    }

  }
}
