/*
  File           : 

  Description    : Internal classes for getting outbound data from queue tables.
 
 * 061219 5.1.16    olla    dotnet2.0 conversion

*/
using System;
using System.Text;
using System.Data;
using System.Collections;
using Imi.Framework.Job.Data;

namespace Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen
{
    public class SelectHandler
    {
        public string _Debug()
        {
            return "Generated on   : 2005-09-21 20:25:46\r\n" +
                   "Generated by   : IMINT1\\olla@IMIPC1091\r\n" +
                   "Generated in   : C:\\project\\views\\olla_temp_ss\\client\\C#\\wscc\r\n";
        }
    }

    public class BalanceAnswerLineSelect
    {
        private Database db;

        public BalanceAnswerLineSelect(Database db)
        {
            this.db = db;
        }

        public BalanceAnswerLineDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (BalanceAnswerLineDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aBalanceAnswerLineDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_BALANCE_ANSWER.LASTBALANCEANSWER" +
                     ",HAPI_BALANCE_ANSWER.WAREHOUSEIDENTITY" +
                     ",HAPI_BALANCE_ANSWER.OWNERIDENTITY" +
                     ",HAPI_BALANCE_ANSWER.PRODUCTNUMBER" +
                     ",HAPI_BALANCE_ANSWER.PRODUCTIONLOTIDENTITY" +
                     ",HAPI_BALANCE_ANSWER.PRODUCTIONSUBLOTIDENTITY" +
                     ",HAPI_BALANCE_ANSWER.MARKETINGLOTIDENTITY" +
                     ",HAPI_BALANCE_ANSWER.QUALITYLOTIDENTITY" +
                     ",HAPI_BALANCE_ANSWER.PACKAGEIDENTITY" +
                     ",HAPI_BALANCE_ANSWER.INVENTORYSTATUSCODE" +
                     ",HAPI_BALANCE_ANSWER.FREEQUANTITY" +
                     ",HAPI_BALANCE_ANSWER.PICKLOCATIONQUANTITY" +
                     ",HAPI_BALANCE_ANSWER.RESERVEDFORREPLENQUANTITY" +
                     ",HAPI_BALANCE_ANSWER.PICKEDQUANTITY" +
                     ",HAPI_BALANCE_ANSWER.TOPICKQUANTITY" +
                     ",HAPI_BALANCE_ANSWER.CUSTOMERRESERVEDQUANTITY" +
                     ",HAPI_BALANCE_ANSWER.MESSAGENUMBER" +
              " from   OWUSER.HAPI_BALANCE_ANSWER" +
              " where  OWUSER.HAPI_BALANCE_ANSWER.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                BalanceAnswerLineDoc aBalanceAnswerLineDoc = new BalanceAnswerLineDoc();

                aBalanceAnswerLineDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aBalanceAnswerLineDoc.LastBalanceAnswer = null;
                else
                {
                    aBalanceAnswerLineDoc.LastBalanceAnswer = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aBalanceAnswerLineDoc.WarehouseIdentity = null;
                else
                {
                    aBalanceAnswerLineDoc.WarehouseIdentity = r.GetString(1);
                }

                if (r.IsDBNull(2))
                    aBalanceAnswerLineDoc.OwnerIdentity = null;
                else
                {
                    aBalanceAnswerLineDoc.OwnerIdentity = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aBalanceAnswerLineDoc.ProductNumber = null;
                else
                {
                    aBalanceAnswerLineDoc.ProductNumber = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aBalanceAnswerLineDoc.ProductionLotIdentity = null;
                else
                {
                    aBalanceAnswerLineDoc.ProductionLotIdentity = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aBalanceAnswerLineDoc.ProductionSubLotIdentity = null;
                else
                {
                    aBalanceAnswerLineDoc.ProductionSubLotIdentity = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aBalanceAnswerLineDoc.MarketingLotIdentity = null;
                else
                {
                    aBalanceAnswerLineDoc.MarketingLotIdentity = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aBalanceAnswerLineDoc.QualityLotIdentity = null;
                else
                {
                    aBalanceAnswerLineDoc.QualityLotIdentity = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aBalanceAnswerLineDoc.PackageIdentity = null;
                else
                {
                    aBalanceAnswerLineDoc.PackageIdentity = r.GetString(8);
                }

                if (r.IsDBNull(9))
                    aBalanceAnswerLineDoc.InventoryStatusCode = null;
                else
                {
                    aBalanceAnswerLineDoc.InventoryStatusCode = r.GetString(9);
                }

                if (r.IsDBNull(10))
                    aBalanceAnswerLineDoc.FreeQuantity = null;
                else
                {
                    aBalanceAnswerLineDoc.FreeQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aBalanceAnswerLineDoc.FreeQuantity.Value = Convert.ToDouble(r.GetDecimal(10));
                }

                if (r.IsDBNull(11))
                    aBalanceAnswerLineDoc.PickLocationQuantity = null;
                else
                {
                    aBalanceAnswerLineDoc.PickLocationQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aBalanceAnswerLineDoc.PickLocationQuantity.Value = Convert.ToDouble(r.GetDecimal(11));
                }

                if (r.IsDBNull(12))
                    aBalanceAnswerLineDoc.ReservedForReplenQuantity = null;
                else
                {
                    aBalanceAnswerLineDoc.ReservedForReplenQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aBalanceAnswerLineDoc.ReservedForReplenQuantity.Value = Convert.ToDouble(r.GetDecimal(12));
                }

                if (r.IsDBNull(13))
                    aBalanceAnswerLineDoc.PickedQuantity = null;
                else
                {
                    aBalanceAnswerLineDoc.PickedQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aBalanceAnswerLineDoc.PickedQuantity.Value = Convert.ToDouble(r.GetDecimal(13));
                }

                if (r.IsDBNull(14))
                    aBalanceAnswerLineDoc.TopickQuantity = null;
                else
                {
                    aBalanceAnswerLineDoc.TopickQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aBalanceAnswerLineDoc.TopickQuantity.Value = Convert.ToDouble(r.GetDecimal(14));
                }

                if (r.IsDBNull(15))
                    aBalanceAnswerLineDoc.CustomerReservedQuantity = null;
                else
                {
                    aBalanceAnswerLineDoc.CustomerReservedQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aBalanceAnswerLineDoc.CustomerReservedQuantity.Value = Convert.ToDouble(r.GetDecimal(15));
                }

                if (r.IsDBNull(16))
                    aBalanceAnswerLineDoc.MessageNumber = null;
                else
                {
                    aBalanceAnswerLineDoc.MessageNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aBalanceAnswerLineDoc.MessageNumber.Value = Convert.ToDouble(r.GetDecimal(16));
                }

                aBalanceAnswerLineDocList.Add(aBalanceAnswerLineDoc);
            }

            r.Close();


            return aBalanceAnswerLineDocList;
        }
    }

    public class DeliveryReceiptHeadSelect
    {
        private Database db;

        private DeliveryReceiptLineSelect aDeliveryReceiptLineSelect;

        public DeliveryReceiptHeadSelect(Database db)
        {
            this.db = db;

            aDeliveryReceiptLineSelect = new DeliveryReceiptLineSelect(this.db);
        }

        public DeliveryReceiptHeadDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (DeliveryReceiptHeadDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aDeliveryReceiptHeadDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_DLVRY_RECEIPT_HEAD.DELIVERYIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_HEAD.ARRIVALDATETIME" +
                     ",HAPI_DLVRY_RECEIPT_HEAD.WAREHOUSEIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_HEAD.EMPLOYEEIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_HEAD.RECEIVETYPE" +
                     ",HAPI_DLVRY_RECEIPT_HEAD.PACKINGSLIPNUMBER" +
                     ",HAPI_DLVRY_RECEIPT_HEAD.BILLOFLADINGNUMBER" +
                     ",HAPI_DLVRY_RECEIPT_HEAD.VEHICLEIDENTITY" +
              " from   OWUSER.HAPI_DLVRY_RECEIPT_HEAD" +
              " where  OWUSER.HAPI_DLVRY_RECEIPT_HEAD.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                DeliveryReceiptHeadDoc aDeliveryReceiptHeadDoc = new DeliveryReceiptHeadDoc();

                aDeliveryReceiptHeadDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aDeliveryReceiptHeadDoc.DeliveryIdentity = null;
                else
                {
                    aDeliveryReceiptHeadDoc.DeliveryIdentity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptHeadDoc.DeliveryIdentity.Value = r.GetInt32(0);
                }

                if (r.IsDBNull(1))
                    aDeliveryReceiptHeadDoc.ArrivalDateTime = null;
                else
                {
                    aDeliveryReceiptHeadDoc.ArrivalDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aDeliveryReceiptHeadDoc.ArrivalDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(1), DateTimeKind.Local);
                }

                if (r.IsDBNull(2))
                    aDeliveryReceiptHeadDoc.WarehouseIdentity = null;
                else
                {
                    aDeliveryReceiptHeadDoc.WarehouseIdentity = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aDeliveryReceiptHeadDoc.EmployeeIdentity = null;
                else
                {
                    aDeliveryReceiptHeadDoc.EmployeeIdentity = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aDeliveryReceiptHeadDoc.ReceiveType = null;
                else
                {
                    aDeliveryReceiptHeadDoc.ReceiveType = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aDeliveryReceiptHeadDoc.PackingSlipNumber = null;
                else
                {
                    aDeliveryReceiptHeadDoc.PackingSlipNumber = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aDeliveryReceiptHeadDoc.BillOfLadingNumber = null;
                else
                {
                    aDeliveryReceiptHeadDoc.BillOfLadingNumber = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aDeliveryReceiptHeadDoc.VehicleIdentity = null;
                else
                {
                    aDeliveryReceiptHeadDoc.VehicleIdentity = r.GetString(7);
                }

                aDeliveryReceiptHeadDocList.Add(aDeliveryReceiptHeadDoc);
            }

            r.Close();

            ArrayList aDeliveryReceiptLineDocList = aDeliveryReceiptLineSelect.InternalProcess(HapiTransId);

            foreach (DeliveryReceiptHeadDoc aDeliveryReceiptHeadDoc in aDeliveryReceiptHeadDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (DeliveryReceiptLineDoc aDeliveryReceiptLineDoc in aDeliveryReceiptLineDocList)
                {
                    if (GeneratedComparer.EqualDeliveryReceiptHeadDocDeliveryReceiptLineDoc(aDeliveryReceiptHeadDoc, aDeliveryReceiptLineDoc))
                        ConnectedChildren.Add(aDeliveryReceiptLineDoc);
                }
                aDeliveryReceiptHeadDoc.aDeliveryReceiptLineDocs = ConnectedChildren.ToArray(typeof(DeliveryReceiptLineDoc)) as DeliveryReceiptLineDoc[];
            }

            return aDeliveryReceiptHeadDocList;
        }
    }

    public class DeliveryReceiptLineSelect
    {
        private Database db;

        private DeliveryReceiptPackingMaterialSelect aDeliveryReceiptPackingMaterialSelect;

        public DeliveryReceiptLineSelect(Database db)
        {
            this.db = db;

            aDeliveryReceiptPackingMaterialSelect = new DeliveryReceiptPackingMaterialSelect(this.db);
        }

        public DeliveryReceiptLineDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (DeliveryReceiptLineDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aDeliveryReceiptLineDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_DLVRY_RECEIPT_LINE.INVENTORYSTATUSCODE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.PURCHASEORDERLINESEQUENCE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.PURCHASEORDERTYPE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERORDERNUMBER" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERORDERLINEPOSITION" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERORDERLINEKITPOSITION" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERORDERLINESEQUENCE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.DESPATCHADVICENOTICEIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.ITEMLOADIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.EXPIRYDATE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.RETURNSFINISHED" +
                     ",HAPI_DLVRY_RECEIPT_LINE.DECIDEDACTIONCODE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.FROMPARTYID" +
                     ",HAPI_DLVRY_RECEIPT_LINE.FROMPARTYQUALIFIER" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERRETURNORDERNUMBER" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERRETURNORDERSEQUENCE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERRETURNORDERLINEPOS" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERRETURNORDERLINEKITPOS" +
                     ",HAPI_DLVRY_RECEIPT_LINE.CUSTOMERRETURNORDERLINESEQ" +
                     ",HAPI_DLVRY_RECEIPT_LINE.DISCREPANCYCODE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.DISCREPANCYACTIONCODE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.MANUFACTURINGDATE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.MEASUREQUALIFIER" +
                     ",HAPI_DLVRY_RECEIPT_LINE.DELIVERYIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.DELIVERYIDENTITYLINE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.ARRIVALDATETIME" +
                     ",HAPI_DLVRY_RECEIPT_LINE.PRODUCTIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.PACKAGEIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.DELIVEREDQUANTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.MEASUREDQUANTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.PRODUCTIONLOTIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.PRODUCTIONSUBLOTIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.MARKETINGLOTIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.QUALITYLOTIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_LINE.PURCHASEORDERNUMBER" +
                     ",HAPI_DLVRY_RECEIPT_LINE.PURCHASEORDERSEQUENCE" +
                     ",HAPI_DLVRY_RECEIPT_LINE.PURCHASEORDERLINEPOSITION" +
              " from   OWUSER.HAPI_DLVRY_RECEIPT_LINE" +
              " where  OWUSER.HAPI_DLVRY_RECEIPT_LINE.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                DeliveryReceiptLineDoc aDeliveryReceiptLineDoc = new DeliveryReceiptLineDoc();

                aDeliveryReceiptLineDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aDeliveryReceiptLineDoc.InventoryStatusCode = null;
                else
                {
                    aDeliveryReceiptLineDoc.InventoryStatusCode = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aDeliveryReceiptLineDoc.PurchaseOrderLineSequence = null;
                else
                {
                    aDeliveryReceiptLineDoc.PurchaseOrderLineSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.PurchaseOrderLineSequence.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aDeliveryReceiptLineDoc.PurchaseOrderType = null;
                else
                {
                    aDeliveryReceiptLineDoc.PurchaseOrderType = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aDeliveryReceiptLineDoc.CustomerOrderNumber = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerOrderNumber = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aDeliveryReceiptLineDoc.CustomerOrderSequence = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.CustomerOrderSequence.Value = r.GetInt32(4);
                }

                if (r.IsDBNull(5))
                    aDeliveryReceiptLineDoc.CustomerOrderLinePosition = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerOrderLinePosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.CustomerOrderLinePosition.Value = r.GetInt32(5);
                }

                if (r.IsDBNull(6))
                    aDeliveryReceiptLineDoc.CustomerOrderLineKitPosition = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerOrderLineKitPosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.CustomerOrderLineKitPosition.Value = r.GetInt32(6);
                }

                if (r.IsDBNull(7))
                    aDeliveryReceiptLineDoc.CustomerOrderLineSequence = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerOrderLineSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.CustomerOrderLineSequence.Value = r.GetInt32(7);
                }

                if (r.IsDBNull(8))
                    aDeliveryReceiptLineDoc.DespatchadvicenoticeIdentity = null;
                else
                {
                    aDeliveryReceiptLineDoc.DespatchadvicenoticeIdentity = r.GetString(8);
                }

                if (r.IsDBNull(9))
                    aDeliveryReceiptLineDoc.ItemLoadIdentity = null;
                else
                {
                    aDeliveryReceiptLineDoc.ItemLoadIdentity = r.GetString(9);
                }

                if (r.IsDBNull(10))
                    aDeliveryReceiptLineDoc.ExpiryDate = null;
                else
                {
                    aDeliveryReceiptLineDoc.ExpiryDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aDeliveryReceiptLineDoc.ExpiryDate.Value = DateTime.SpecifyKind(r.GetDateTime(10), DateTimeKind.Local);
                }

                if (r.IsDBNull(11))
                    aDeliveryReceiptLineDoc.ReturnsFinished = null;
                else
                {
                    aDeliveryReceiptLineDoc.ReturnsFinished = r.GetString(11);
                }

                if (r.IsDBNull(12))
                    aDeliveryReceiptLineDoc.DecidedActionCode = null;
                else
                {
                    aDeliveryReceiptLineDoc.DecidedActionCode = r.GetString(12);
                }

                if (r.IsDBNull(13))
                    aDeliveryReceiptLineDoc.FromPartyId = null;
                else
                {
                    aDeliveryReceiptLineDoc.FromPartyId = r.GetString(13);
                }

                if (r.IsDBNull(14))
                    aDeliveryReceiptLineDoc.FromPartyQualifier = null;
                else
                {
                    aDeliveryReceiptLineDoc.FromPartyQualifier = r.GetString(14);
                }

                if (r.IsDBNull(15))
                    aDeliveryReceiptLineDoc.CustomerReturnOrderNumber = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerReturnOrderNumber = r.GetString(15);
                }

                if (r.IsDBNull(16))
                    aDeliveryReceiptLineDoc.CustomerReturnOrderSequence = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerReturnOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.CustomerReturnOrderSequence.Value = r.GetInt32(16);
                }

                if (r.IsDBNull(17))
                    aDeliveryReceiptLineDoc.CustomerReturnOrderLinePos = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerReturnOrderLinePos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.CustomerReturnOrderLinePos.Value = r.GetInt32(17);
                }

                if (r.IsDBNull(18))
                    aDeliveryReceiptLineDoc.CustomerReturnOrderLineKitPos = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerReturnOrderLineKitPos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.CustomerReturnOrderLineKitPos.Value = r.GetInt32(18);
                }

                if (r.IsDBNull(19))
                    aDeliveryReceiptLineDoc.CustomerReturnOrderLineSeq = null;
                else
                {
                    aDeliveryReceiptLineDoc.CustomerReturnOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.CustomerReturnOrderLineSeq.Value = r.GetInt32(19);
                }

                if (r.IsDBNull(20))
                    aDeliveryReceiptLineDoc.DiscrepancyCode = null;
                else
                {
                    aDeliveryReceiptLineDoc.DiscrepancyCode = r.GetString(20);
                }

                if (r.IsDBNull(21))
                    aDeliveryReceiptLineDoc.DiscrepancyActionCode = null;
                else
                {
                    aDeliveryReceiptLineDoc.DiscrepancyActionCode = r.GetString(21);
                }

                if (r.IsDBNull(22))
                    aDeliveryReceiptLineDoc.ManufacturingDate = null;
                else
                {
                    aDeliveryReceiptLineDoc.ManufacturingDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aDeliveryReceiptLineDoc.ManufacturingDate.Value = DateTime.SpecifyKind(r.GetDateTime(22), DateTimeKind.Local);
                }

                if (r.IsDBNull(23))
                    aDeliveryReceiptLineDoc.MeasureQualifier = null;
                else
                {
                    aDeliveryReceiptLineDoc.MeasureQualifier = r.GetString(23);
                }

                if (r.IsDBNull(24))
                    aDeliveryReceiptLineDoc.DeliveryIdentity = null;
                else
                {
                    aDeliveryReceiptLineDoc.DeliveryIdentity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.DeliveryIdentity.Value = r.GetInt32(24);
                }

                if (r.IsDBNull(25))
                    aDeliveryReceiptLineDoc.DeliveryidentityLine = null;
                else
                {
                    aDeliveryReceiptLineDoc.DeliveryidentityLine = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.DeliveryidentityLine.Value = r.GetInt32(25);
                }

                if (r.IsDBNull(26))
                    aDeliveryReceiptLineDoc.ArrivalDateTime = null;
                else
                {
                    aDeliveryReceiptLineDoc.ArrivalDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aDeliveryReceiptLineDoc.ArrivalDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(26), DateTimeKind.Local);
                }

                if (r.IsDBNull(27))
                    aDeliveryReceiptLineDoc.ProductIdentity = null;
                else
                {
                    aDeliveryReceiptLineDoc.ProductIdentity = r.GetString(27);
                }

                if (r.IsDBNull(28))
                    aDeliveryReceiptLineDoc.PackageIdentity = null;
                else
                {
                    aDeliveryReceiptLineDoc.PackageIdentity = r.GetString(28);
                }

                if (r.IsDBNull(29))
                    aDeliveryReceiptLineDoc.DeliveredQuantity = null;
                else
                {
                    aDeliveryReceiptLineDoc.DeliveredQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aDeliveryReceiptLineDoc.DeliveredQuantity.Value = Convert.ToDouble(r.GetDecimal(29));
                }

                if (r.IsDBNull(30))
                    aDeliveryReceiptLineDoc.MeasuredQuantity = null;
                else
                {
                    aDeliveryReceiptLineDoc.MeasuredQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aDeliveryReceiptLineDoc.MeasuredQuantity.Value = Convert.ToDouble(r.GetDecimal(30));
                }

                if (r.IsDBNull(31))
                    aDeliveryReceiptLineDoc.ProductionLotIdentity = null;
                else
                {
                    aDeliveryReceiptLineDoc.ProductionLotIdentity = r.GetString(31);
                }

                if (r.IsDBNull(32))
                    aDeliveryReceiptLineDoc.ProductionSubLotIdentity = null;
                else
                {
                    aDeliveryReceiptLineDoc.ProductionSubLotIdentity = r.GetString(32);
                }

                if (r.IsDBNull(33))
                    aDeliveryReceiptLineDoc.MarketingLotIdentity = null;
                else
                {
                    aDeliveryReceiptLineDoc.MarketingLotIdentity = r.GetString(33);
                }

                if (r.IsDBNull(34))
                    aDeliveryReceiptLineDoc.QualityLotIdentity = null;
                else
                {
                    aDeliveryReceiptLineDoc.QualityLotIdentity = r.GetString(34);
                }

                if (r.IsDBNull(35))
                    aDeliveryReceiptLineDoc.PurchaseOrderNumber = null;
                else
                {
                    aDeliveryReceiptLineDoc.PurchaseOrderNumber = r.GetString(35);
                }

                if (r.IsDBNull(36))
                    aDeliveryReceiptLineDoc.PurchaseOrderSequence = null;
                else
                {
                    aDeliveryReceiptLineDoc.PurchaseOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.PurchaseOrderSequence.Value = r.GetInt32(36);
                }

                if (r.IsDBNull(37))
                    aDeliveryReceiptLineDoc.PurchaseOrderLinePosition = null;
                else
                {
                    aDeliveryReceiptLineDoc.PurchaseOrderLinePosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptLineDoc.PurchaseOrderLinePosition.Value = r.GetInt32(37);
                }

                aDeliveryReceiptLineDocList.Add(aDeliveryReceiptLineDoc);
            }

            r.Close();

            ArrayList aDeliveryReceiptPackingMaterialDocList = aDeliveryReceiptPackingMaterialSelect.InternalProcess(HapiTransId);

            foreach (DeliveryReceiptLineDoc aDeliveryReceiptLineDoc in aDeliveryReceiptLineDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (DeliveryReceiptPackingMaterialDoc aDeliveryReceiptPackingMaterialDoc in aDeliveryReceiptPackingMaterialDocList)
                {
                    if (GeneratedComparer.EqualDeliveryReceiptLineDocDeliveryReceiptPackingMaterialDoc(aDeliveryReceiptLineDoc, aDeliveryReceiptPackingMaterialDoc))
                        ConnectedChildren.Add(aDeliveryReceiptPackingMaterialDoc);
                }
                aDeliveryReceiptLineDoc.aDeliveryReceiptPackingMaterialDocs = ConnectedChildren.ToArray(typeof(DeliveryReceiptPackingMaterialDoc)) as DeliveryReceiptPackingMaterialDoc[];
            }

            return aDeliveryReceiptLineDocList;
        }
    }

    public class DeliveryReceiptPackingMaterialSelect
    {
        private Database db;

        public DeliveryReceiptPackingMaterialSelect(Database db)
        {
            this.db = db;
        }

        public DeliveryReceiptPackingMaterialDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (DeliveryReceiptPackingMaterialDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aDeliveryReceiptPackingMaterialDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_DLVRY_RECEIPT_PM.PACKINGMATERIALTYPE" +
                     ",HAPI_DLVRY_RECEIPT_PM.VENDORIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_PM.PURCHASEORDERTYPE" +
                     ",HAPI_DLVRY_RECEIPT_PM.CUSTOMERRETURNORDERSEQUENCE" +
                     ",HAPI_DLVRY_RECEIPT_PM.CUSTOMERRETURNORDERLINEPOS" +
                     ",HAPI_DLVRY_RECEIPT_PM.CUSTOMERRETURNORDERLINEKITPOS" +
                     ",HAPI_DLVRY_RECEIPT_PM.CUSTOMERRETURNORDERLINESEQ" +
                     ",HAPI_DLVRY_RECEIPT_PM.DELIVERYIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_PM.ARRIVALDATETIME" +
                     ",HAPI_DLVRY_RECEIPT_PM.DELIVERYIDENTITYLINE" +
                     ",HAPI_DLVRY_RECEIPT_PM.PACKAGEIDENTITY" +
                     ",HAPI_DLVRY_RECEIPT_PM.DELIVEREDQUANTITY" +
                     ",HAPI_DLVRY_RECEIPT_PM.PURCHASEORDERNUMBER" +
                     ",HAPI_DLVRY_RECEIPT_PM.PURCHASEORDERSEQUENCE" +
                     ",HAPI_DLVRY_RECEIPT_PM.CUSTOMERORDERNUMBER" +
                     ",HAPI_DLVRY_RECEIPT_PM.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_DLVRY_RECEIPT_PM.FROMPARTYID" +
                     ",HAPI_DLVRY_RECEIPT_PM.FROMPARTYQUALIFIER" +
                     ",HAPI_DLVRY_RECEIPT_PM.CUSTOMERRETURNORDERNUMBER" +
              " from   OWUSER.HAPI_DLVRY_RECEIPT_PM" +
              " where  OWUSER.HAPI_DLVRY_RECEIPT_PM.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                DeliveryReceiptPackingMaterialDoc aDeliveryReceiptPackingMaterialDoc = new DeliveryReceiptPackingMaterialDoc();

                aDeliveryReceiptPackingMaterialDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aDeliveryReceiptPackingMaterialDoc.PackingMaterialType = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.PackingMaterialType = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aDeliveryReceiptPackingMaterialDoc.VendorIdentity = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.VendorIdentity = r.GetString(1);
                }

                if (r.IsDBNull(2))
                    aDeliveryReceiptPackingMaterialDoc.PurchaseOrderType = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.PurchaseOrderType = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderSequence = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderSequence.Value = r.GetInt32(3);
                }

                if (r.IsDBNull(4))
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderLinePos = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderLinePos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderLinePos.Value = r.GetInt32(4);
                }

                if (r.IsDBNull(5))
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderLineKitPos = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderLineKitPos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderLineKitPos.Value = r.GetInt32(5);
                }

                if (r.IsDBNull(6))
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderLineSeq = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderLineSeq.Value = r.GetInt32(6);
                }

                if (r.IsDBNull(7))
                    aDeliveryReceiptPackingMaterialDoc.DeliveryIdentity = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.DeliveryIdentity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptPackingMaterialDoc.DeliveryIdentity.Value = r.GetInt32(7);
                }

                if (r.IsDBNull(8))
                    aDeliveryReceiptPackingMaterialDoc.ArrivalDateTime = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.ArrivalDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aDeliveryReceiptPackingMaterialDoc.ArrivalDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(8), DateTimeKind.Local);
                }

                if (r.IsDBNull(9))
                    aDeliveryReceiptPackingMaterialDoc.DeliveryidentityLine = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.DeliveryidentityLine = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptPackingMaterialDoc.DeliveryidentityLine.Value = r.GetInt32(9);
                }

                if (r.IsDBNull(10))
                    aDeliveryReceiptPackingMaterialDoc.PackageIdentity = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.PackageIdentity = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aDeliveryReceiptPackingMaterialDoc.DeliveredQuantity = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.DeliveredQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aDeliveryReceiptPackingMaterialDoc.DeliveredQuantity.Value = Convert.ToDouble(r.GetDecimal(11));
                }

                if (r.IsDBNull(12))
                    aDeliveryReceiptPackingMaterialDoc.PurchaseOrderNumber = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.PurchaseOrderNumber = r.GetString(12);
                }

                if (r.IsDBNull(13))
                    aDeliveryReceiptPackingMaterialDoc.PurchaseOrderSequence = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.PurchaseOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptPackingMaterialDoc.PurchaseOrderSequence.Value = r.GetInt32(13);
                }

                if (r.IsDBNull(14))
                    aDeliveryReceiptPackingMaterialDoc.CustomerOrderNumber = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.CustomerOrderNumber = r.GetString(14);
                }

                if (r.IsDBNull(15))
                    aDeliveryReceiptPackingMaterialDoc.CustomerOrderSequence = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aDeliveryReceiptPackingMaterialDoc.CustomerOrderSequence.Value = r.GetInt32(15);
                }

                if (r.IsDBNull(16))
                    aDeliveryReceiptPackingMaterialDoc.FromPartyId = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.FromPartyId = r.GetString(16);
                }

                if (r.IsDBNull(17))
                    aDeliveryReceiptPackingMaterialDoc.FromPartyQualifier = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.FromPartyQualifier = r.GetString(17);
                }

                if (r.IsDBNull(18))
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderNumber = null;
                else
                {
                    aDeliveryReceiptPackingMaterialDoc.CustomerReturnOrderNumber = r.GetString(18);
                }

                aDeliveryReceiptPackingMaterialDocList.Add(aDeliveryReceiptPackingMaterialDoc);
            }

            r.Close();


            return aDeliveryReceiptPackingMaterialDocList;
        }
    }

    public class InspectionReceiptHeadSelect
    {
        private Database db;

        private InspectionReceiptLineSelect aInspectionReceiptLineSelect;

        public InspectionReceiptHeadSelect(Database db)
        {
            this.db = db;

            aInspectionReceiptLineSelect = new InspectionReceiptLineSelect(this.db);
        }

        public InspectionReceiptHeadDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (InspectionReceiptHeadDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aInspectionReceiptHeadDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_INSPECTION_RECEIPT_HEAD.WAREHOUSEIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_HEAD.EMPLOYEEIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_HEAD.RETURNHANDLEDDATETIME" +
              " from   OWUSER.HAPI_INSPECTION_RECEIPT_HEAD" +
              " where  OWUSER.HAPI_INSPECTION_RECEIPT_HEAD.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                InspectionReceiptHeadDoc aInspectionReceiptHeadDoc = new InspectionReceiptHeadDoc();

                aInspectionReceiptHeadDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aInspectionReceiptHeadDoc.WarehouseIdentity = null;
                else
                {
                    aInspectionReceiptHeadDoc.WarehouseIdentity = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aInspectionReceiptHeadDoc.EmployeeIdentity = null;
                else
                {
                    aInspectionReceiptHeadDoc.EmployeeIdentity = r.GetString(1);
                }

                if (r.IsDBNull(2))
                    aInspectionReceiptHeadDoc.ReturnhandleddateTime = null;
                else
                {
                    aInspectionReceiptHeadDoc.ReturnhandleddateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aInspectionReceiptHeadDoc.ReturnhandleddateTime.Value = DateTime.SpecifyKind(r.GetDateTime(2), DateTimeKind.Local);
                }

                aInspectionReceiptHeadDocList.Add(aInspectionReceiptHeadDoc);
            }

            r.Close();

            ArrayList aInspectionReceiptLineDocList = aInspectionReceiptLineSelect.InternalProcess(HapiTransId);

            foreach (InspectionReceiptHeadDoc aInspectionReceiptHeadDoc in aInspectionReceiptHeadDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (InspectionReceiptLineDoc aInspectionReceiptLineDoc in aInspectionReceiptLineDocList)
                {
                    if (GeneratedComparer.EqualInspectionReceiptHeadDocInspectionReceiptLineDoc(aInspectionReceiptHeadDoc, aInspectionReceiptLineDoc))
                        ConnectedChildren.Add(aInspectionReceiptLineDoc);
                }
                aInspectionReceiptHeadDoc.aInspectionReceiptLineDocs = ConnectedChildren.ToArray(typeof(InspectionReceiptLineDoc)) as InspectionReceiptLineDoc[];
            }

            return aInspectionReceiptHeadDocList;
        }
    }

    public class InspectionReceiptLineSelect
    {
        private Database db;

        private InspectionReceiptLinePackingMaterialSelect aInspectionReceiptLinePackingMaterialSelect;

        public InspectionReceiptLineSelect(Database db)
        {
            this.db = db;

            aInspectionReceiptLinePackingMaterialSelect = new InspectionReceiptLinePackingMaterialSelect(this.db);
        }

        public InspectionReceiptLineDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (InspectionReceiptLineDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aInspectionReceiptLineDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_INSPECTION_RECEIPT_LINE.PRODUCTIONSUBLOTIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.MARKETINGLOTIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.QUALITYLOTIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.ITEMLOADIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.EXPIRYDATE" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.FROMPARTYID" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.FROMPARTYQUALIFIER" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.SHIPTOCUSTOMERIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.SHIPTOCUSTOMERQUALIFIER" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.WORKORDERIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.WORKORDERLINE" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.WORKORDERLINESEQ" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.PRODUCTIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.PACKAGEIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.INSPECTEDQUANTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.DECIDEDACTIONCODE" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.CUSTOMERRETURNORDERNUMBER" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.CUSTOMERRETURNORDERSEQUENCE" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.CUSTOMERRETURNORDERLINEPOS" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.CUSTOMERRETURNORDERLINEKITPOS" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.CUSTOMERRETURNORDERLINESEQ" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.DELIVERYIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.DELIVERYIDENTITYLINE" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.MEASUREDQUANTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.INVENTORYSTATUSCODE" +
                     ",HAPI_INSPECTION_RECEIPT_LINE.PRODUCTIONLOTIDENTITY" +
              " from   OWUSER.HAPI_INSPECTION_RECEIPT_LINE" +
              " where  OWUSER.HAPI_INSPECTION_RECEIPT_LINE.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                InspectionReceiptLineDoc aInspectionReceiptLineDoc = new InspectionReceiptLineDoc();

                aInspectionReceiptLineDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aInspectionReceiptLineDoc.ProductionSubLotIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.ProductionSubLotIdentity = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aInspectionReceiptLineDoc.MarketingLotIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.MarketingLotIdentity = r.GetString(1);
                }

                if (r.IsDBNull(2))
                    aInspectionReceiptLineDoc.QualityLotIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.QualityLotIdentity = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aInspectionReceiptLineDoc.ItemLoadIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.ItemLoadIdentity = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aInspectionReceiptLineDoc.ExpiryDate = null;
                else
                {
                    aInspectionReceiptLineDoc.ExpiryDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aInspectionReceiptLineDoc.ExpiryDate.Value = DateTime.SpecifyKind(r.GetDateTime(4), DateTimeKind.Local);
                }

                if (r.IsDBNull(5))
                    aInspectionReceiptLineDoc.FromPartyId = null;
                else
                {
                    aInspectionReceiptLineDoc.FromPartyId = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aInspectionReceiptLineDoc.FromPartyQualifier = null;
                else
                {
                    aInspectionReceiptLineDoc.FromPartyQualifier = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aInspectionReceiptLineDoc.ShiptoCustomerIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.ShiptoCustomerIdentity = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aInspectionReceiptLineDoc.ShiptoCustomerQualifier = null;
                else
                {
                    aInspectionReceiptLineDoc.ShiptoCustomerQualifier = r.GetString(8);
                }

                if (r.IsDBNull(9))
                    aInspectionReceiptLineDoc.WorkOrderIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.WorkOrderIdentity = r.GetString(9);
                }

                if (r.IsDBNull(10))
                    aInspectionReceiptLineDoc.WorkOrderLine = null;
                else
                {
                    aInspectionReceiptLineDoc.WorkOrderLine = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLineDoc.WorkOrderLine.Value = r.GetInt32(10);
                }

                if (r.IsDBNull(11))
                    aInspectionReceiptLineDoc.WorkOrderLineSeq = null;
                else
                {
                    aInspectionReceiptLineDoc.WorkOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLineDoc.WorkOrderLineSeq.Value = r.GetInt32(11);
                }

                if (r.IsDBNull(12))
                    aInspectionReceiptLineDoc.ProductIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.ProductIdentity = r.GetString(12);
                }

                if (r.IsDBNull(13))
                    aInspectionReceiptLineDoc.PackageIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.PackageIdentity = r.GetString(13);
                }

                if (r.IsDBNull(14))
                    aInspectionReceiptLineDoc.InspectedQuantity = null;
                else
                {
                    aInspectionReceiptLineDoc.InspectedQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aInspectionReceiptLineDoc.InspectedQuantity.Value = Convert.ToDouble(r.GetDecimal(14));
                }

                if (r.IsDBNull(15))
                    aInspectionReceiptLineDoc.DecidedActionCode = null;
                else
                {
                    aInspectionReceiptLineDoc.DecidedActionCode = r.GetString(15);
                }

                if (r.IsDBNull(16))
                    aInspectionReceiptLineDoc.CustomerReturnOrderNumber = null;
                else
                {
                    aInspectionReceiptLineDoc.CustomerReturnOrderNumber = r.GetString(16);
                }

                if (r.IsDBNull(17))
                    aInspectionReceiptLineDoc.CustomerReturnOrderSequence = null;
                else
                {
                    aInspectionReceiptLineDoc.CustomerReturnOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLineDoc.CustomerReturnOrderSequence.Value = r.GetInt32(17);
                }

                if (r.IsDBNull(18))
                    aInspectionReceiptLineDoc.CustomerReturnOrderLinePos = null;
                else
                {
                    aInspectionReceiptLineDoc.CustomerReturnOrderLinePos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLineDoc.CustomerReturnOrderLinePos.Value = r.GetInt32(18);
                }

                if (r.IsDBNull(19))
                    aInspectionReceiptLineDoc.CustomerReturnOrderLineKitPos = null;
                else
                {
                    aInspectionReceiptLineDoc.CustomerReturnOrderLineKitPos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLineDoc.CustomerReturnOrderLineKitPos.Value = r.GetInt32(19);
                }

                if (r.IsDBNull(20))
                    aInspectionReceiptLineDoc.CustomerReturnOrderLineSeq = null;
                else
                {
                    aInspectionReceiptLineDoc.CustomerReturnOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLineDoc.CustomerReturnOrderLineSeq.Value = r.GetInt32(20);
                }

                if (r.IsDBNull(21))
                    aInspectionReceiptLineDoc.DeliveryIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.DeliveryIdentity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLineDoc.DeliveryIdentity.Value = r.GetInt32(21);
                }

                if (r.IsDBNull(22))
                    aInspectionReceiptLineDoc.DeliveryidentityLine = null;
                else
                {
                    aInspectionReceiptLineDoc.DeliveryidentityLine = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLineDoc.DeliveryidentityLine.Value = r.GetInt32(22);
                }

                if (r.IsDBNull(23))
                    aInspectionReceiptLineDoc.MeasuredQuantity = null;
                else
                {
                    aInspectionReceiptLineDoc.MeasuredQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aInspectionReceiptLineDoc.MeasuredQuantity.Value = Convert.ToDouble(r.GetDecimal(23));
                }

                if (r.IsDBNull(24))
                    aInspectionReceiptLineDoc.InventoryStatusCode = null;
                else
                {
                    aInspectionReceiptLineDoc.InventoryStatusCode = r.GetString(24);
                }

                if (r.IsDBNull(25))
                    aInspectionReceiptLineDoc.ProductionLotIdentity = null;
                else
                {
                    aInspectionReceiptLineDoc.ProductionLotIdentity = r.GetString(25);
                }

                aInspectionReceiptLineDocList.Add(aInspectionReceiptLineDoc);
            }

            r.Close();

            ArrayList aInspectionReceiptLinePackingMaterialDocList = aInspectionReceiptLinePackingMaterialSelect.InternalProcess(HapiTransId);

            foreach (InspectionReceiptLineDoc aInspectionReceiptLineDoc in aInspectionReceiptLineDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (InspectionReceiptLinePackingMaterialDoc aInspectionReceiptLinePackingMaterialDoc in aInspectionReceiptLinePackingMaterialDocList)
                {
                    if (GeneratedComparer.EqualInspectionReceiptLineDocInspectionReceiptLinePackingMaterialDoc(aInspectionReceiptLineDoc, aInspectionReceiptLinePackingMaterialDoc))
                        ConnectedChildren.Add(aInspectionReceiptLinePackingMaterialDoc);
                }
                aInspectionReceiptLineDoc.aInspectionReceiptLinePackingMaterialDocs = ConnectedChildren.ToArray(typeof(InspectionReceiptLinePackingMaterialDoc)) as InspectionReceiptLinePackingMaterialDoc[];
            }

            return aInspectionReceiptLineDocList;
        }
    }

    public class InspectionReceiptLinePackingMaterialSelect
    {
        private Database db;

        public InspectionReceiptLinePackingMaterialSelect(Database db)
        {
            this.db = db;

        }

        public InspectionReceiptLinePackingMaterialDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (InspectionReceiptLinePackingMaterialDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aInspectionReceiptLinePackingMaterialDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_INSPECTION_RECEIPT_LINEPM.WORKORDERIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.WORKORDERLINE" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.WORKORDERLINESEQ" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.WORKORDERLINEPMSEQ" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.PACKINGMATERIALIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.PACKAGEIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.INSPECTEDPMQUANTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.DECIDEDACTIONCODE" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.CUSTOMERRETURNORDERNUMBER" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.CUSTOMERRETURNORDERSEQUENCE" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.CUSTOMERRETURNORDERLINEPOS" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.CUSTOMERRETURNORDERLINEKITPOS" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.CUSTOMERRETURNORDERLINESEQ" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.DELIVERYIDENTITY" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.DELIVERYIDENTITYLINE" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.FROMPARTYID" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.FROMPARTYQUALIFIER" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.CUSTOMERORDERNUMBER" +
                     ",HAPI_INSPECTION_RECEIPT_LINEPM.CUSTOMERORDERSEQUENCE" +
              " from   OWUSER.HAPI_INSPECTION_RECEIPT_LINEPM" +
              " where  OWUSER.HAPI_INSPECTION_RECEIPT_LINEPM.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                InspectionReceiptLinePackingMaterialDoc aInspectionReceiptLinePackingMaterialDoc = new InspectionReceiptLinePackingMaterialDoc();

                aInspectionReceiptLinePackingMaterialDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderIdentity = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderIdentity = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderLine = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderLine = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderLine.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderLineSeq = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderLineSeq.Value = r.GetInt32(2);
                }

                if (r.IsDBNull(3))
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderLinePmSeq = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderLinePmSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLinePackingMaterialDoc.WorkOrderLinePmSeq.Value = r.GetInt32(3);
                }

                if (r.IsDBNull(4))
                    aInspectionReceiptLinePackingMaterialDoc.PackingMaterialIdentity = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.PackingMaterialIdentity = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aInspectionReceiptLinePackingMaterialDoc.PackageIdentity = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.PackageIdentity = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aInspectionReceiptLinePackingMaterialDoc.InspectedPmQuantity = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.InspectedPmQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aInspectionReceiptLinePackingMaterialDoc.InspectedPmQuantity.Value = Convert.ToDouble(r.GetDecimal(6));
                }

                if (r.IsDBNull(7))
                    aInspectionReceiptLinePackingMaterialDoc.DecidedActionCode = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.DecidedActionCode = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderNumber = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderNumber = r.GetString(8);
                }

                if (r.IsDBNull(9))
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderSequence = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderSequence.Value = r.GetInt32(9);
                }

                if (r.IsDBNull(10))
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderLinePos = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderLinePos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderLinePos.Value = r.GetInt32(10);
                }

                if (r.IsDBNull(11))
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderLineKitPos = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderLineKitPos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderLineKitPos.Value = r.GetInt32(11);
                }

                if (r.IsDBNull(12))
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderLineSeq = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLinePackingMaterialDoc.CustomerReturnOrderLineSeq.Value = r.GetInt32(12);
                }

                if (r.IsDBNull(13))
                    aInspectionReceiptLinePackingMaterialDoc.DeliveryIdentity = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.DeliveryIdentity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLinePackingMaterialDoc.DeliveryIdentity.Value = r.GetInt32(13);
                }

                if (r.IsDBNull(14))
                    aInspectionReceiptLinePackingMaterialDoc.DeliveryidentityLine = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.DeliveryidentityLine = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInspectionReceiptLinePackingMaterialDoc.DeliveryidentityLine.Value = r.GetInt32(14);
                }

                if (r.IsDBNull(15))
                    aInspectionReceiptLinePackingMaterialDoc.FromPartyId = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.FromPartyId = r.GetString(15);
                }

                if (r.IsDBNull(16))
                    aInspectionReceiptLinePackingMaterialDoc.FromPartyQualifier = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.FromPartyQualifier = r.GetString(16);
                }

                if (r.IsDBNull(17))
                    aInspectionReceiptLinePackingMaterialDoc.CustomerOrderNumber = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.CustomerOrderNumber = r.GetString(17);
                }

                if (r.IsDBNull(18))
                    aInspectionReceiptLinePackingMaterialDoc.CustomerOrderSequence = null;
                else
                {
                    aInspectionReceiptLinePackingMaterialDoc.CustomerOrderSequence = r.GetString(18);
                }

                aInspectionReceiptLinePackingMaterialDocList.Add(aInspectionReceiptLinePackingMaterialDoc);
            }

            r.Close();


            return aInspectionReceiptLinePackingMaterialDocList;
        }
    }

    public class InventoryChangeLineSelect
    {
        private Database db;

        public InventoryChangeLineSelect(Database db)
        {
            this.db = db;

        }

        public InventoryChangeLineDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (InventoryChangeLineDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aInventoryChangeLineDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_INVENTORY_CHANGE.MEASUREDQTY" +
                     ",HAPI_INVENTORY_CHANGE.MEASUREDQTY2" +
                     ",HAPI_INVENTORY_CHANGE.PRODUCTDATE" +
                     ",HAPI_INVENTORY_CHANGE.PRODUCTDATE2" +
                     ",HAPI_INVENTORY_CHANGE.VENDORIDENTITY2" +
                     ",HAPI_INVENTORY_CHANGE.PRODUCTNUMBER2" +
                     ",HAPI_INVENTORY_CHANGE.PACKAGEIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.PACKAGEIDENTITY2" +
                     ",HAPI_INVENTORY_CHANGE.QUANTITY" +
                     ",HAPI_INVENTORY_CHANGE.QUANTITY2" +
                     ",HAPI_INVENTORY_CHANGE.INVENTORYSTATUSCODE" +
                     ",HAPI_INVENTORY_CHANGE.INVENTORYSTATUSCODE2" +
                     ",HAPI_INVENTORY_CHANGE.PRODUCTIONLOTIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.PRODUCTIONLOTIDENTITY2" +
                     ",HAPI_INVENTORY_CHANGE.PRODUCTIONSUBLOTIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.PRODUCTIONSUBLOTIDENTITY2" +
                     ",HAPI_INVENTORY_CHANGE.MARKETINGLOTIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.MARKETINGLOTIDENTITY2" +
                     ",HAPI_INVENTORY_CHANGE.QUALITYLOTIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.QUALITYLOTIDENTITY2" +
                     ",HAPI_INVENTORY_CHANGE.WAREHOUSEIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.CUSTOMERORDERNUMBER" +
                     ",HAPI_INVENTORY_CHANGE.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_INVENTORY_CHANGE.CUSTOMERORDERLINEPOSITION" +
                     ",HAPI_INVENTORY_CHANGE.CUSTOMERORDERLINEKITPOSITION" +
                     ",HAPI_INVENTORY_CHANGE.CUSTOMERORDERLINESEQUENCE" +
                     ",HAPI_INVENTORY_CHANGE.REASONCODE" +
                     ",HAPI_INVENTORY_CHANGE.FREETEXT" +
                     ",HAPI_INVENTORY_CHANGE.EMPLOYEEID" +
                     ",HAPI_INVENTORY_CHANGE.TIMESTAMP" +
                     ",HAPI_INVENTORY_CHANGE.ITEMLOADIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.OPERATIONCODE" +
                     ",HAPI_INVENTORY_CHANGE.INVENTORYCHANGECODE" +
                     ",HAPI_INVENTORY_CHANGE.INVENTORYCHANGETEXT" +
                     ",HAPI_INVENTORY_CHANGE.DESPATCHADVICEIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.PURCHASEORDERNUMBER" +
                     ",HAPI_INVENTORY_CHANGE.PURCHASEORDERSEQUENCE" +
                     ",HAPI_INVENTORY_CHANGE.PURCHASEORDERLINEPOSITION" +
                     ",HAPI_INVENTORY_CHANGE.PURCHASEORDERLINESEQUENCE" +
                     ",HAPI_INVENTORY_CHANGE.VENDORIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.OWNERIDENTITY" +
                     ",HAPI_INVENTORY_CHANGE.OWNERIDENTITY2" +
                     ",HAPI_INVENTORY_CHANGE.PRODUCTNUMBER" +
              " from   OWUSER.HAPI_INVENTORY_CHANGE" +
              " where  OWUSER.HAPI_INVENTORY_CHANGE.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                InventoryChangeLineDoc aInventoryChangeLineDoc = new InventoryChangeLineDoc();

                aInventoryChangeLineDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aInventoryChangeLineDoc.MeasuredQty = null;
                else
                {
                    aInventoryChangeLineDoc.MeasuredQty = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aInventoryChangeLineDoc.MeasuredQty.Value = Convert.ToDouble(r.GetDecimal(0));
                }

                if (r.IsDBNull(1))
                    aInventoryChangeLineDoc.MeasuredQty2 = null;
                else
                {
                    aInventoryChangeLineDoc.MeasuredQty2 = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aInventoryChangeLineDoc.MeasuredQty2.Value = Convert.ToDouble(r.GetDecimal(1));
                }

                if (r.IsDBNull(2))
                    aInventoryChangeLineDoc.ProductDate = null;
                else
                {
                    aInventoryChangeLineDoc.ProductDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aInventoryChangeLineDoc.ProductDate.Value = DateTime.SpecifyKind(r.GetDateTime(2), DateTimeKind.Local);
                }

                if (r.IsDBNull(3))
                    aInventoryChangeLineDoc.ProductDate2 = null;
                else
                {
                    aInventoryChangeLineDoc.ProductDate2 = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aInventoryChangeLineDoc.ProductDate2.Value = DateTime.SpecifyKind(r.GetDateTime(3), DateTimeKind.Local);
                }

                if (r.IsDBNull(4))
                    aInventoryChangeLineDoc.VendorIdentity2 = null;
                else
                {
                    aInventoryChangeLineDoc.VendorIdentity2 = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aInventoryChangeLineDoc.ProductNumber2 = null;
                else
                {
                    aInventoryChangeLineDoc.ProductNumber2 = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aInventoryChangeLineDoc.PackageIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.PackageIdentity = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aInventoryChangeLineDoc.PackageIdentity2 = null;
                else
                {
                    aInventoryChangeLineDoc.PackageIdentity2 = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aInventoryChangeLineDoc.Quantity = null;
                else
                {
                    aInventoryChangeLineDoc.Quantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aInventoryChangeLineDoc.Quantity.Value = Convert.ToDouble(r.GetDecimal(8));
                }

                if (r.IsDBNull(9))
                    aInventoryChangeLineDoc.Quantity2 = null;
                else
                {
                    aInventoryChangeLineDoc.Quantity2 = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aInventoryChangeLineDoc.Quantity2.Value = Convert.ToDouble(r.GetDecimal(9));
                }

                if (r.IsDBNull(10))
                    aInventoryChangeLineDoc.InventoryStatusCode = null;
                else
                {
                    aInventoryChangeLineDoc.InventoryStatusCode = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aInventoryChangeLineDoc.InventoryStatusCode2 = null;
                else
                {
                    aInventoryChangeLineDoc.InventoryStatusCode2 = r.GetString(11);
                }

                if (r.IsDBNull(12))
                    aInventoryChangeLineDoc.ProductionLotIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.ProductionLotIdentity = r.GetString(12);
                }

                if (r.IsDBNull(13))
                    aInventoryChangeLineDoc.ProductionLotIdentity2 = null;
                else
                {
                    aInventoryChangeLineDoc.ProductionLotIdentity2 = r.GetString(13);
                }

                if (r.IsDBNull(14))
                    aInventoryChangeLineDoc.ProductionSubLotIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.ProductionSubLotIdentity = r.GetString(14);
                }

                if (r.IsDBNull(15))
                    aInventoryChangeLineDoc.ProductionSublotIdentity2 = null;
                else
                {
                    aInventoryChangeLineDoc.ProductionSublotIdentity2 = r.GetString(15);
                }

                if (r.IsDBNull(16))
                    aInventoryChangeLineDoc.MarketingLotIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.MarketingLotIdentity = r.GetString(16);
                }

                if (r.IsDBNull(17))
                    aInventoryChangeLineDoc.MarketingLotIdentity2 = null;
                else
                {
                    aInventoryChangeLineDoc.MarketingLotIdentity2 = r.GetString(17);
                }

                if (r.IsDBNull(18))
                    aInventoryChangeLineDoc.QualityLotIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.QualityLotIdentity = r.GetString(18);
                }

                if (r.IsDBNull(19))
                    aInventoryChangeLineDoc.QualityLotIdentity2 = null;
                else
                {
                    aInventoryChangeLineDoc.QualityLotIdentity2 = r.GetString(19);
                }

                if (r.IsDBNull(20))
                    aInventoryChangeLineDoc.WarehouseIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.WarehouseIdentity = r.GetString(20);
                }

                if (r.IsDBNull(21))
                    aInventoryChangeLineDoc.CustomerOrderNumber = null;
                else
                {
                    aInventoryChangeLineDoc.CustomerOrderNumber = r.GetString(21);
                }

                if (r.IsDBNull(22))
                    aInventoryChangeLineDoc.CustomerOrderSequence = null;
                else
                {
                    aInventoryChangeLineDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInventoryChangeLineDoc.CustomerOrderSequence.Value = r.GetInt32(22);
                }

                if (r.IsDBNull(23))
                    aInventoryChangeLineDoc.CustomerOrderLinePosition = null;
                else
                {
                    aInventoryChangeLineDoc.CustomerOrderLinePosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInventoryChangeLineDoc.CustomerOrderLinePosition.Value = r.GetInt32(23);
                }

                if (r.IsDBNull(24))
                    aInventoryChangeLineDoc.CustomerOrderLineKitPosition = null;
                else
                {
                    aInventoryChangeLineDoc.CustomerOrderLineKitPosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInventoryChangeLineDoc.CustomerOrderLineKitPosition.Value = r.GetInt32(24);
                }

                if (r.IsDBNull(25))
                    aInventoryChangeLineDoc.CustomerOrderLineSequence = null;
                else
                {
                    aInventoryChangeLineDoc.CustomerOrderLineSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInventoryChangeLineDoc.CustomerOrderLineSequence.Value = r.GetInt32(25);
                }

                if (r.IsDBNull(26))
                    aInventoryChangeLineDoc.ReasonCode = null;
                else
                {
                    aInventoryChangeLineDoc.ReasonCode = r.GetString(26);
                }

                if (r.IsDBNull(27))
                    aInventoryChangeLineDoc.FreeText = null;
                else
                {
                    aInventoryChangeLineDoc.FreeText = r.GetString(27);
                }

                if (r.IsDBNull(28))
                    aInventoryChangeLineDoc.EmployeeId = null;
                else
                {
                    aInventoryChangeLineDoc.EmployeeId = r.GetString(28);
                }

                if (r.IsDBNull(29))
                    aInventoryChangeLineDoc.TimeStamp = null;
                else
                {
                    aInventoryChangeLineDoc.TimeStamp = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aInventoryChangeLineDoc.TimeStamp.Value = DateTime.SpecifyKind(r.GetDateTime(29), DateTimeKind.Local);
                }

                if (r.IsDBNull(30))
                    aInventoryChangeLineDoc.ItemLoadIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.ItemLoadIdentity = r.GetString(30);
                }

                if (r.IsDBNull(31))
                    aInventoryChangeLineDoc.OperationCode = null;
                else
                {
                    aInventoryChangeLineDoc.OperationCode = r.GetString(31);
                }

                if (r.IsDBNull(32))
                    aInventoryChangeLineDoc.InventoryChangeCode = null;
                else
                {
                    aInventoryChangeLineDoc.InventoryChangeCode = r.GetString(32);
                }

                if (r.IsDBNull(33))
                    aInventoryChangeLineDoc.InventoryChangeText = null;
                else
                {
                    aInventoryChangeLineDoc.InventoryChangeText = r.GetString(33);
                }

                if (r.IsDBNull(34))
                    aInventoryChangeLineDoc.DespatchadviceIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.DespatchadviceIdentity = r.GetString(34);
                }

                if (r.IsDBNull(35))
                    aInventoryChangeLineDoc.PurchaseOrderNumber = null;
                else
                {
                    aInventoryChangeLineDoc.PurchaseOrderNumber = r.GetString(35);
                }

                if (r.IsDBNull(36))
                    aInventoryChangeLineDoc.PurchaseOrderSequence = null;
                else
                {
                    aInventoryChangeLineDoc.PurchaseOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInventoryChangeLineDoc.PurchaseOrderSequence.Value = r.GetInt32(36);
                }

                if (r.IsDBNull(37))
                    aInventoryChangeLineDoc.PurchaseOrderLinePosition = null;
                else
                {
                    aInventoryChangeLineDoc.PurchaseOrderLinePosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInventoryChangeLineDoc.PurchaseOrderLinePosition.Value = r.GetInt32(37);
                }

                if (r.IsDBNull(38))
                    aInventoryChangeLineDoc.PurchaseOrderLineSequence = null;
                else
                {
                    aInventoryChangeLineDoc.PurchaseOrderLineSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInventoryChangeLineDoc.PurchaseOrderLineSequence.Value = r.GetInt32(38);
                }

                if (r.IsDBNull(39))
                    aInventoryChangeLineDoc.VendorIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.VendorIdentity = r.GetString(39);
                }

                if (r.IsDBNull(40))
                    aInventoryChangeLineDoc.OwnerIdentity = null;
                else
                {
                    aInventoryChangeLineDoc.OwnerIdentity = r.GetString(40);
                }

                if (r.IsDBNull(41))
                    aInventoryChangeLineDoc.OwnerIdentity2 = null;
                else
                {
                    aInventoryChangeLineDoc.OwnerIdentity2 = r.GetString(41);
                }

                if (r.IsDBNull(42))
                    aInventoryChangeLineDoc.ProductNumber = null;
                else
                {
                    aInventoryChangeLineDoc.ProductNumber = r.GetString(42);
                }

                aInventoryChangeLineDocList.Add(aInventoryChangeLineDoc);
            }

            r.Close();


            return aInventoryChangeLineDocList;
        }
    }

    public class PickReceiptHeadSelect
    {
        private Database db;

        private PickReceiptHeadPackingMaterialSelect aPickReceiptHeadPackingMaterialSelect;
        private PickReceiptLineSelect aPickReceiptLineSelect;
        private PickReceiptServiceSelect aPickReceiptServiceSelect;
        private PickReceiptTextSelect aPickReceiptTextSelect;

        public PickReceiptHeadSelect(Database db)
        {
            this.db = db;

            aPickReceiptHeadPackingMaterialSelect = new PickReceiptHeadPackingMaterialSelect(this.db);
            aPickReceiptLineSelect = new PickReceiptLineSelect(this.db);
            aPickReceiptServiceSelect = new PickReceiptServiceSelect(this.db);
            aPickReceiptTextSelect = new PickReceiptTextSelect(this.db);
        }

        public PickReceiptHeadDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (PickReceiptHeadDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aPickReceiptHeadDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_PICK_RECEIPT_HEAD.LASTONDEPARTURE" +
                     ",HAPI_PICK_RECEIPT_HEAD.CUSTOMERORDERNUMBER" +
                     ",HAPI_PICK_RECEIPT_HEAD.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_HEAD.CUSTOMERORDERSUBSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_HEAD.WAREHOUSEIDENTITY" +
              " from   OWUSER.HAPI_PICK_RECEIPT_HEAD" +
              " where  OWUSER.HAPI_PICK_RECEIPT_HEAD.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                PickReceiptHeadDoc aPickReceiptHeadDoc = new PickReceiptHeadDoc();

                aPickReceiptHeadDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aPickReceiptHeadDoc.LastOndeparture = null;
                else
                {
                    aPickReceiptHeadDoc.LastOndeparture = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aPickReceiptHeadDoc.CustomerOrderNumber = null;
                else
                {
                    aPickReceiptHeadDoc.CustomerOrderNumber = r.GetString(1);
                }

                if (r.IsDBNull(2))
                    aPickReceiptHeadDoc.CustomerOrderSequence = null;
                else
                {
                    aPickReceiptHeadDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptHeadDoc.CustomerOrderSequence.Value = r.GetInt32(2);
                }

                if (r.IsDBNull(3))
                    aPickReceiptHeadDoc.CustomerOrderSubSequence = null;
                else
                {
                    aPickReceiptHeadDoc.CustomerOrderSubSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptHeadDoc.CustomerOrderSubSequence.Value = r.GetInt32(3);
                }

                if (r.IsDBNull(4))
                    aPickReceiptHeadDoc.WarehouseIdentity = null;
                else
                {
                    aPickReceiptHeadDoc.WarehouseIdentity = r.GetString(4);
                }

                aPickReceiptHeadDocList.Add(aPickReceiptHeadDoc);
            }

            r.Close();

            ArrayList aPickReceiptHeadPackingMaterialDocList = aPickReceiptHeadPackingMaterialSelect.InternalProcess(HapiTransId);
            ArrayList aPickReceiptLineDocList = aPickReceiptLineSelect.InternalProcess(HapiTransId);
            ArrayList aPickReceiptServiceDocList = aPickReceiptServiceSelect.InternalProcess(HapiTransId);
            ArrayList aPickReceiptTextDocList = aPickReceiptTextSelect.InternalProcess(HapiTransId);

            foreach (PickReceiptHeadDoc aPickReceiptHeadDoc in aPickReceiptHeadDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (PickReceiptHeadPackingMaterialDoc aPickReceiptHeadPackingMaterialDoc in aPickReceiptHeadPackingMaterialDocList)
                {
                    if (GeneratedComparer.EqualPickReceiptHeadDocPickReceiptHeadPackingMaterialDoc(aPickReceiptHeadDoc, aPickReceiptHeadPackingMaterialDoc))
                        ConnectedChildren.Add(aPickReceiptHeadPackingMaterialDoc);
                }
                aPickReceiptHeadDoc.aPickReceiptHeadPackingMaterialDocs = ConnectedChildren.ToArray(typeof(PickReceiptHeadPackingMaterialDoc)) as PickReceiptHeadPackingMaterialDoc[];
                ConnectedChildren = new ArrayList();

                foreach (PickReceiptLineDoc aPickReceiptLineDoc in aPickReceiptLineDocList)
                {
                    if (GeneratedComparer.EqualPickReceiptHeadDocPickReceiptLineDoc(aPickReceiptHeadDoc, aPickReceiptLineDoc))
                        ConnectedChildren.Add(aPickReceiptLineDoc);
                }
                aPickReceiptHeadDoc.aPickReceiptLineDocs = ConnectedChildren.ToArray(typeof(PickReceiptLineDoc)) as PickReceiptLineDoc[];
                ConnectedChildren = new ArrayList();

                foreach (PickReceiptServiceDoc aPickReceiptServiceDoc in aPickReceiptServiceDocList)
                {
                    if (GeneratedComparer.EqualPickReceiptHeadDocPickReceiptServiceDoc(aPickReceiptHeadDoc, aPickReceiptServiceDoc))
                        ConnectedChildren.Add(aPickReceiptServiceDoc);
                }
                aPickReceiptHeadDoc.aPickReceiptServiceDocs = ConnectedChildren.ToArray(typeof(PickReceiptServiceDoc)) as PickReceiptServiceDoc[];
                ConnectedChildren = new ArrayList();

                foreach (PickReceiptTextDoc aPickReceiptTextDoc in aPickReceiptTextDocList)
                {
                    if (GeneratedComparer.EqualPickReceiptHeadDocPickReceiptTextDoc(aPickReceiptHeadDoc, aPickReceiptTextDoc))
                        ConnectedChildren.Add(aPickReceiptTextDoc);
                }
                aPickReceiptHeadDoc.aPickReceiptTextDocs = ConnectedChildren.ToArray(typeof(PickReceiptTextDoc)) as PickReceiptTextDoc[];
            }

            return aPickReceiptHeadDocList;
        }
    }

    public class PickReceiptHeadPackingMaterialSelect
    {
        private Database db;

        public PickReceiptHeadPackingMaterialSelect(Database db)
        {
            this.db = db;

        }

        public PickReceiptHeadPackingMaterialDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (PickReceiptHeadPackingMaterialDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aPickReceiptHeadPackingMaterialDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_PICK_RECEIPT_HEAD_PM.PACKINGMATERIALTYPE" +
                     ",HAPI_PICK_RECEIPT_HEAD_PM.QUANTITY" +
                     ",HAPI_PICK_RECEIPT_HEAD_PM.CUSTOMERORDERNUMBER" +
                     ",HAPI_PICK_RECEIPT_HEAD_PM.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_HEAD_PM.CUSTOMERORDERSUBSEQUENCE" +
              " from   OWUSER.HAPI_PICK_RECEIPT_HEAD_PM" +
              " where  OWUSER.HAPI_PICK_RECEIPT_HEAD_PM.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                PickReceiptHeadPackingMaterialDoc aPickReceiptHeadPackingMaterialDoc = new PickReceiptHeadPackingMaterialDoc();

                aPickReceiptHeadPackingMaterialDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aPickReceiptHeadPackingMaterialDoc.PackingMaterialType = null;
                else
                {
                    aPickReceiptHeadPackingMaterialDoc.PackingMaterialType = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aPickReceiptHeadPackingMaterialDoc.Quantity = null;
                else
                {
                    aPickReceiptHeadPackingMaterialDoc.Quantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aPickReceiptHeadPackingMaterialDoc.Quantity.Value = Convert.ToDouble(r.GetDecimal(1));
                }

                if (r.IsDBNull(2))
                    aPickReceiptHeadPackingMaterialDoc.CustomerOrderNumber = null;
                else
                {
                    aPickReceiptHeadPackingMaterialDoc.CustomerOrderNumber = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aPickReceiptHeadPackingMaterialDoc.CustomerOrderSequence = null;
                else
                {
                    aPickReceiptHeadPackingMaterialDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptHeadPackingMaterialDoc.CustomerOrderSequence.Value = r.GetInt32(3);
                }

                if (r.IsDBNull(4))
                    aPickReceiptHeadPackingMaterialDoc.CustomerOrderSubSequence = null;
                else
                {
                    aPickReceiptHeadPackingMaterialDoc.CustomerOrderSubSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptHeadPackingMaterialDoc.CustomerOrderSubSequence.Value = r.GetInt32(4);
                }

                aPickReceiptHeadPackingMaterialDocList.Add(aPickReceiptHeadPackingMaterialDoc);
            }

            r.Close();


            return aPickReceiptHeadPackingMaterialDocList;
        }
    }

    public class PickReceiptLineSelect
    {
        private Database db;

        private PickReceiptLinePackingMaterialSelect aPickReceiptLinePackingMaterialSelect;

        public PickReceiptLineSelect(Database db)
        {
            this.db = db;

            aPickReceiptLinePackingMaterialSelect = new PickReceiptLinePackingMaterialSelect(this.db);
        }

        public PickReceiptLineDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (PickReceiptLineDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aPickReceiptLineDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_PICK_RECEIPT_LINE.CUSTOMERORDERLINEKITPOSITION" +
                     ",HAPI_PICK_RECEIPT_LINE.CUSTOMERORDERLINESEQUENCE" +
                     ",HAPI_PICK_RECEIPT_LINE.OWNERIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.PRODUCTIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.PACKAGEIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.PICKQUANTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.MEASUREDQTY" +
                     ",HAPI_PICK_RECEIPT_LINE.RESTCODE" +
                     ",HAPI_PICK_RECEIPT_LINE.DEPARTUREIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.DEPARTUREWEEKDAY" +
                     ",HAPI_PICK_RECEIPT_LINE.MARKETINGLOTIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.QUALITYLOTIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.FREIGHTERIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.SHIPDATE" +
                     ",HAPI_PICK_RECEIPT_LINE.CONSIGNMENTNOTE" +
                     ",HAPI_PICK_RECEIPT_LINE.PACKINGSLIPIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.ORDEREDQUANTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.UNDERQUANTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.OVERQUANTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.PRODUCTIONLOTIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.PRODUCTIONSUBLOTIDENTITY" +
                     ",HAPI_PICK_RECEIPT_LINE.INVENTORYSTATUSCODE" +
                     ",HAPI_PICK_RECEIPT_LINE.SERIALNUMBER" +
                     ",HAPI_PICK_RECEIPT_LINE.CUSTOMERORDERNUMBER" +
                     ",HAPI_PICK_RECEIPT_LINE.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_LINE.CUSTOMERORDERSUBSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_LINE.CUSTOMERORDERLINEPOSITION" +
              " from   OWUSER.HAPI_PICK_RECEIPT_LINE" +
              " where  OWUSER.HAPI_PICK_RECEIPT_LINE.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                PickReceiptLineDoc aPickReceiptLineDoc = new PickReceiptLineDoc();

                aPickReceiptLineDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aPickReceiptLineDoc.CustomerOrderLineKitPosition = null;
                else
                {
                    aPickReceiptLineDoc.CustomerOrderLineKitPosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLineDoc.CustomerOrderLineKitPosition.Value = r.GetInt32(0);
                }

                if (r.IsDBNull(1))
                    aPickReceiptLineDoc.CustomerOrderLineSequence = null;
                else
                {
                    aPickReceiptLineDoc.CustomerOrderLineSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLineDoc.CustomerOrderLineSequence.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aPickReceiptLineDoc.OwnerIdentity = null;
                else
                {
                    aPickReceiptLineDoc.OwnerIdentity = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aPickReceiptLineDoc.ProductIdentity = null;
                else
                {
                    aPickReceiptLineDoc.ProductIdentity = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aPickReceiptLineDoc.PackageIdentity = null;
                else
                {
                    aPickReceiptLineDoc.PackageIdentity = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aPickReceiptLineDoc.PickQuantity = null;
                else
                {
                    aPickReceiptLineDoc.PickQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aPickReceiptLineDoc.PickQuantity.Value = Convert.ToDouble(r.GetDecimal(5));
                }

                if (r.IsDBNull(6))
                    aPickReceiptLineDoc.MeasuredQty = null;
                else
                {
                    aPickReceiptLineDoc.MeasuredQty = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aPickReceiptLineDoc.MeasuredQty.Value = Convert.ToDouble(r.GetDecimal(6));
                }

                if (r.IsDBNull(7))
                    aPickReceiptLineDoc.RestCode = null;
                else
                {
                    aPickReceiptLineDoc.RestCode = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aPickReceiptLineDoc.DepartureIdentity = null;
                else
                {
                    aPickReceiptLineDoc.DepartureIdentity = r.GetString(8);
                }

                if (r.IsDBNull(9))
                    aPickReceiptLineDoc.DepartureWeekday = null;
                else
                {
                    aPickReceiptLineDoc.DepartureWeekday = r.GetString(9);
                }

                if (r.IsDBNull(10))
                    aPickReceiptLineDoc.MarketingLotIdentity = null;
                else
                {
                    aPickReceiptLineDoc.MarketingLotIdentity = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aPickReceiptLineDoc.QualityLotIdentity = null;
                else
                {
                    aPickReceiptLineDoc.QualityLotIdentity = r.GetString(11);
                }

                if (r.IsDBNull(12))
                    aPickReceiptLineDoc.FreighterIdentity = null;
                else
                {
                    aPickReceiptLineDoc.FreighterIdentity = r.GetString(12);
                }

                if (r.IsDBNull(13))
                    aPickReceiptLineDoc.ShipDate = null;
                else
                {
                    aPickReceiptLineDoc.ShipDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aPickReceiptLineDoc.ShipDate.Value = DateTime.SpecifyKind(r.GetDateTime(13), DateTimeKind.Local);
                }

                if (r.IsDBNull(14))
                    aPickReceiptLineDoc.ConsignmentNote = null;
                else
                {
                    aPickReceiptLineDoc.ConsignmentNote = r.GetString(14);
                }

                if (r.IsDBNull(15))
                    aPickReceiptLineDoc.PackingSlipIdentity = null;
                else
                {
                    aPickReceiptLineDoc.PackingSlipIdentity = r.GetString(15);
                }

                if (r.IsDBNull(16))
                    aPickReceiptLineDoc.OrderedQuantity = null;
                else
                {
                    aPickReceiptLineDoc.OrderedQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aPickReceiptLineDoc.OrderedQuantity.Value = Convert.ToDouble(r.GetDecimal(16));
                }

                if (r.IsDBNull(17))
                    aPickReceiptLineDoc.UnderQuantity = null;
                else
                {
                    aPickReceiptLineDoc.UnderQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aPickReceiptLineDoc.UnderQuantity.Value = Convert.ToDouble(r.GetDecimal(17));
                }

                if (r.IsDBNull(18))
                    aPickReceiptLineDoc.OverQuantity = null;
                else
                {
                    aPickReceiptLineDoc.OverQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aPickReceiptLineDoc.OverQuantity.Value = Convert.ToDouble(r.GetDecimal(18));
                }

                if (r.IsDBNull(19))
                    aPickReceiptLineDoc.ProductionLotIdentity = null;
                else
                {
                    aPickReceiptLineDoc.ProductionLotIdentity = r.GetString(19);
                }

                if (r.IsDBNull(20))
                    aPickReceiptLineDoc.ProductionSubLotIdentity = null;
                else
                {
                    aPickReceiptLineDoc.ProductionSubLotIdentity = r.GetString(20);
                }

                if (r.IsDBNull(21))
                    aPickReceiptLineDoc.InventoryStatusCode = null;
                else
                {
                    aPickReceiptLineDoc.InventoryStatusCode = r.GetString(21);
                }

                if (r.IsDBNull(22))
                    aPickReceiptLineDoc.SerialNumber = null;
                else
                {
                    aPickReceiptLineDoc.SerialNumber = r.GetString(22);
                }

                if (r.IsDBNull(23))
                    aPickReceiptLineDoc.CustomerOrderNumber = null;
                else
                {
                    aPickReceiptLineDoc.CustomerOrderNumber = r.GetString(23);
                }

                if (r.IsDBNull(24))
                    aPickReceiptLineDoc.CustomerOrderSequence = null;
                else
                {
                    aPickReceiptLineDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLineDoc.CustomerOrderSequence.Value = r.GetInt32(24);
                }

                if (r.IsDBNull(25))
                    aPickReceiptLineDoc.CustomerOrderSubSequence = null;
                else
                {
                    aPickReceiptLineDoc.CustomerOrderSubSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLineDoc.CustomerOrderSubSequence.Value = r.GetInt32(25);
                }

                if (r.IsDBNull(26))
                    aPickReceiptLineDoc.CustomerOrderLinePosition = null;
                else
                {
                    aPickReceiptLineDoc.CustomerOrderLinePosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLineDoc.CustomerOrderLinePosition.Value = r.GetInt32(26);
                }

                aPickReceiptLineDocList.Add(aPickReceiptLineDoc);
            }

            r.Close();

            ArrayList aPickReceiptLinePackingMaterialDocList = aPickReceiptLinePackingMaterialSelect.InternalProcess(HapiTransId);

            foreach (PickReceiptLineDoc aPickReceiptLineDoc in aPickReceiptLineDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (PickReceiptLinePackingMaterialDoc aPickReceiptLinePackingMaterialDoc in aPickReceiptLinePackingMaterialDocList)
                {
                    if (GeneratedComparer.EqualPickReceiptLineDocPickReceiptLinePackingMaterialDoc(aPickReceiptLineDoc, aPickReceiptLinePackingMaterialDoc))
                        ConnectedChildren.Add(aPickReceiptLinePackingMaterialDoc);
                }
                aPickReceiptLineDoc.aPickReceiptLinePackingMaterialDocs = ConnectedChildren.ToArray(typeof(PickReceiptLinePackingMaterialDoc)) as PickReceiptLinePackingMaterialDoc[];
            }

            return aPickReceiptLineDocList;
        }
    }

    public class PickReceiptLinePackingMaterialSelect
    {
        private Database db;

        public PickReceiptLinePackingMaterialSelect(Database db)
        {
            this.db = db;

        }

        public PickReceiptLinePackingMaterialDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (PickReceiptLinePackingMaterialDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aPickReceiptLinePackingMaterialDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_PICK_RECEIPT_LINE_PM.PACKINGMATERIALTYPE" +
                     ",HAPI_PICK_RECEIPT_LINE_PM.QUANTITY" +
                     ",HAPI_PICK_RECEIPT_LINE_PM.CUSTOMERORDERNUMBER" +
                     ",HAPI_PICK_RECEIPT_LINE_PM.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_LINE_PM.CUSTOMERORDERSUBSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_LINE_PM.CUSTOMERORDERLINEPOSITION" +
                     ",HAPI_PICK_RECEIPT_LINE_PM.CUSTOMERORDERLINEKITPOSITION" +
                     ",HAPI_PICK_RECEIPT_LINE_PM.CUSTOMERORDERLINESEQUENCE" +
              " from   OWUSER.HAPI_PICK_RECEIPT_LINE_PM" +
              " where  OWUSER.HAPI_PICK_RECEIPT_LINE_PM.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                PickReceiptLinePackingMaterialDoc aPickReceiptLinePackingMaterialDoc = new PickReceiptLinePackingMaterialDoc();

                aPickReceiptLinePackingMaterialDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aPickReceiptLinePackingMaterialDoc.PackingMaterialType = null;
                else
                {
                    aPickReceiptLinePackingMaterialDoc.PackingMaterialType = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aPickReceiptLinePackingMaterialDoc.Quantity = null;
                else
                {
                    aPickReceiptLinePackingMaterialDoc.Quantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aPickReceiptLinePackingMaterialDoc.Quantity.Value = Convert.ToDouble(r.GetDecimal(1));
                }

                if (r.IsDBNull(2))
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderNumber = null;
                else
                {
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderNumber = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderSequence = null;
                else
                {
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderSequence.Value = r.GetInt32(3);
                }

                if (r.IsDBNull(4))
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderSubSequence = null;
                else
                {
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderSubSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderSubSequence.Value = r.GetInt32(4);
                }

                if (r.IsDBNull(5))
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderLinePosition = null;
                else
                {
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderLinePosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderLinePosition.Value = r.GetInt32(5);
                }

                if (r.IsDBNull(6))
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderLineKitPosition = null;
                else
                {
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderLineKitPosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderLineKitPosition.Value = r.GetInt32(6);
                }

                if (r.IsDBNull(7))
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderLineSequence = null;
                else
                {
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderLineSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptLinePackingMaterialDoc.CustomerOrderLineSequence.Value = r.GetInt32(7);
                }

                aPickReceiptLinePackingMaterialDocList.Add(aPickReceiptLinePackingMaterialDoc);
            }

            r.Close();


            return aPickReceiptLinePackingMaterialDocList;
        }
    }

    public class PickReceiptServiceSelect
    {
        private Database db;

        public PickReceiptServiceSelect(Database db)
        {
            this.db = db;

        }

        public PickReceiptServiceDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (PickReceiptServiceDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aPickReceiptServiceDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_PICK_RECEIPT_SERVICE.CUSTOMERORDERNUMBER" +
                     ",HAPI_PICK_RECEIPT_SERVICE.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_SERVICE.CUSTOMERORDERSUBSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_SERVICE.SERVICEQUALIFIER" +
                     ",HAPI_PICK_RECEIPT_SERVICE.SERVICECODE" +
                     ",HAPI_PICK_RECEIPT_SERVICE.SERVICEQTY" +
              " from   OWUSER.HAPI_PICK_RECEIPT_SERVICE" +
              " where  OWUSER.HAPI_PICK_RECEIPT_SERVICE.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                PickReceiptServiceDoc aPickReceiptServiceDoc = new PickReceiptServiceDoc();

                aPickReceiptServiceDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aPickReceiptServiceDoc.CustomerOrderNumber = null;
                else
                {
                    aPickReceiptServiceDoc.CustomerOrderNumber = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aPickReceiptServiceDoc.CustomerOrderSequence = null;
                else
                {
                    aPickReceiptServiceDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptServiceDoc.CustomerOrderSequence.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aPickReceiptServiceDoc.CustomerOrderSubSequence = null;
                else
                {
                    aPickReceiptServiceDoc.CustomerOrderSubSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptServiceDoc.CustomerOrderSubSequence.Value = r.GetInt32(2);
                }

                if (r.IsDBNull(3))
                    aPickReceiptServiceDoc.ServiceQualifier = null;
                else
                {
                    aPickReceiptServiceDoc.ServiceQualifier = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aPickReceiptServiceDoc.ServiceCode = null;
                else
                {
                    aPickReceiptServiceDoc.ServiceCode = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aPickReceiptServiceDoc.ServiceQty = null;
                else
                {
                    aPickReceiptServiceDoc.ServiceQty = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aPickReceiptServiceDoc.ServiceQty.Value = Convert.ToDouble(r.GetDecimal(5));
                }

                aPickReceiptServiceDocList.Add(aPickReceiptServiceDoc);
            }

            r.Close();


            return aPickReceiptServiceDocList;
        }
    }

    public class PickReceiptTextSelect
    {
        private Database db;

        public PickReceiptTextSelect(Database db)
        {
            this.db = db;

        }

        public PickReceiptTextDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (PickReceiptTextDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aPickReceiptTextDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_PICK_RECEIPT_TEXT.CUSTOMERORDERNUMBER" +
                     ",HAPI_PICK_RECEIPT_TEXT.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_TEXT.CUSTOMERORDERSUBSEQUENCE" +
                     ",HAPI_PICK_RECEIPT_TEXT.TEXTFUNCTION" +
                     ",HAPI_PICK_RECEIPT_TEXT.TEXT" +
              " from   OWUSER.HAPI_PICK_RECEIPT_TEXT" +
              " where  OWUSER.HAPI_PICK_RECEIPT_TEXT.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                PickReceiptTextDoc aPickReceiptTextDoc = new PickReceiptTextDoc();

                aPickReceiptTextDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aPickReceiptTextDoc.CustomerOrderNumber = null;
                else
                {
                    aPickReceiptTextDoc.CustomerOrderNumber = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aPickReceiptTextDoc.CustomerOrderSequence = null;
                else
                {
                    aPickReceiptTextDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptTextDoc.CustomerOrderSequence.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aPickReceiptTextDoc.CustomerOrderSubSequence = null;
                else
                {
                    aPickReceiptTextDoc.CustomerOrderSubSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aPickReceiptTextDoc.CustomerOrderSubSequence.Value = r.GetInt32(2);
                }

                if (r.IsDBNull(3))
                    aPickReceiptTextDoc.TextFunction = null;
                else
                {
                    aPickReceiptTextDoc.TextFunction = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aPickReceiptTextDoc.Text = null;
                else
                {
                    aPickReceiptTextDoc.Text = r.GetString(4);
                }

                aPickReceiptTextDocList.Add(aPickReceiptTextDoc);
            }

            r.Close();


            return aPickReceiptTextDocList;
        }
    }

    public class ReturnedPackingMaterialHeadSelect
    {
        private Database db;

        private ReturnedPackingMaterialLineSelect aReturnedPackingMaterialLineSelect;

        public ReturnedPackingMaterialHeadSelect(Database db)
        {
            this.db = db;

            aReturnedPackingMaterialLineSelect = new ReturnedPackingMaterialLineSelect(this.db);
        }

        public ReturnedPackingMaterialHeadDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ReturnedPackingMaterialHeadDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aReturnedPackingMaterialHeadDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_RETURNED_PM_HEAD.RPMID" +
                     ",HAPI_RETURNED_PM_HEAD.CUSTOMER_ID" +
                     ",HAPI_RETURNED_PM_HEAD.REFERENSE" +
                     ",HAPI_RETURNED_PM_HEAD.ARRIVALDATETIME" +
                     ",HAPI_RETURNED_PM_HEAD.WAREHOUSEIDENTITY" +
              " from   OWUSER.HAPI_RETURNED_PM_HEAD" +
              " where  OWUSER.HAPI_RETURNED_PM_HEAD.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ReturnedPackingMaterialHeadDoc aReturnedPackingMaterialHeadDoc = new ReturnedPackingMaterialHeadDoc();

                aReturnedPackingMaterialHeadDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aReturnedPackingMaterialHeadDoc.Rpmid = null;
                else
                {
                    aReturnedPackingMaterialHeadDoc.Rpmid = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aReturnedPackingMaterialHeadDoc.Rpmid.Value = Convert.ToDouble(r.GetDecimal(0));
                }

                if (r.IsDBNull(1))
                    aReturnedPackingMaterialHeadDoc.Customer_id = null;
                else
                {
                    aReturnedPackingMaterialHeadDoc.Customer_id = r.GetString(1);
                }

                if (r.IsDBNull(2))
                    aReturnedPackingMaterialHeadDoc.Referense = null;
                else
                {
                    aReturnedPackingMaterialHeadDoc.Referense = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aReturnedPackingMaterialHeadDoc.ArrivalDateTime = null;
                else
                {
                    aReturnedPackingMaterialHeadDoc.ArrivalDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aReturnedPackingMaterialHeadDoc.ArrivalDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(3), DateTimeKind.Local);
                }

                if (r.IsDBNull(4))
                    aReturnedPackingMaterialHeadDoc.WarehouseIdentity = null;
                else
                {
                    aReturnedPackingMaterialHeadDoc.WarehouseIdentity = r.GetString(4);
                }

                aReturnedPackingMaterialHeadDocList.Add(aReturnedPackingMaterialHeadDoc);
            }

            r.Close();

            ArrayList aReturnedPackingMaterialLineDocList = aReturnedPackingMaterialLineSelect.InternalProcess(HapiTransId);

            foreach (ReturnedPackingMaterialHeadDoc aReturnedPackingMaterialHeadDoc in aReturnedPackingMaterialHeadDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (ReturnedPackingMaterialLineDoc aReturnedPackingMaterialLineDoc in aReturnedPackingMaterialLineDocList)
                {
                    if (GeneratedComparer.EqualReturnedPackingMaterialHeadDocReturnedPackingMaterialLineDoc(aReturnedPackingMaterialHeadDoc, aReturnedPackingMaterialLineDoc))
                        ConnectedChildren.Add(aReturnedPackingMaterialLineDoc);
                }
                aReturnedPackingMaterialHeadDoc.aReturnedPackingMaterialLineDocs = ConnectedChildren.ToArray(typeof(ReturnedPackingMaterialLineDoc)) as ReturnedPackingMaterialLineDoc[];
            }

            return aReturnedPackingMaterialHeadDocList;
        }
    }

    public class ReturnedPackingMaterialLineSelect
    {
        private Database db;

        public ReturnedPackingMaterialLineSelect(Database db)
        {
            this.db = db;

        }

        public ReturnedPackingMaterialLineDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ReturnedPackingMaterialLineDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aReturnedPackingMaterialLineDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_RETURNED_PM_LINE.RPMID" +
                     ",HAPI_RETURNED_PM_LINE.SEQNUM" +
                     ",HAPI_RETURNED_PM_LINE.PRODUCTIDENTITY" +
                     ",HAPI_RETURNED_PM_LINE.QUANTITY" +
              " from   OWUSER.HAPI_RETURNED_PM_LINE" +
              " where  OWUSER.HAPI_RETURNED_PM_LINE.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ReturnedPackingMaterialLineDoc aReturnedPackingMaterialLineDoc = new ReturnedPackingMaterialLineDoc();

                aReturnedPackingMaterialLineDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aReturnedPackingMaterialLineDoc.Rpmid = null;
                else
                {
                    aReturnedPackingMaterialLineDoc.Rpmid = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aReturnedPackingMaterialLineDoc.Rpmid.Value = Convert.ToDouble(r.GetDecimal(0));
                }

                if (r.IsDBNull(1))
                    aReturnedPackingMaterialLineDoc.Seqnum = null;
                else
                {
                    aReturnedPackingMaterialLineDoc.Seqnum = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aReturnedPackingMaterialLineDoc.Seqnum.Value = Convert.ToDouble(r.GetDecimal(1));
                }

                if (r.IsDBNull(2))
                    aReturnedPackingMaterialLineDoc.ProductIdentity = null;
                else
                {
                    aReturnedPackingMaterialLineDoc.ProductIdentity = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aReturnedPackingMaterialLineDoc.Quantity = null;
                else
                {
                    aReturnedPackingMaterialLineDoc.Quantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aReturnedPackingMaterialLineDoc.Quantity.Value = Convert.ToDouble(r.GetDecimal(3));
                }

                aReturnedPackingMaterialLineDocList.Add(aReturnedPackingMaterialLineDoc);
            }

            r.Close();


            return aReturnedPackingMaterialLineDocList;
        }
    }

    public class ReturnReceiptHeadSelect
    {
        private Database db;

        private ReturnReceiptHeadPackingMaterialSelect aReturnReceiptHeadPackingMaterialSelect;
        private ReturnReceiptLineSelect aReturnReceiptLineSelect;

        public ReturnReceiptHeadSelect(Database db)
        {
            this.db = db;

            aReturnReceiptHeadPackingMaterialSelect = new ReturnReceiptHeadPackingMaterialSelect(this.db);
            aReturnReceiptLineSelect = new ReturnReceiptLineSelect(this.db);
        }

        public ReturnReceiptHeadDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ReturnReceiptHeadDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aReturnReceiptHeadDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_RETURN_RECEIPT_HEAD.RETURNORDERNUMBER" +
                     ",HAPI_RETURN_RECEIPT_HEAD.RETURNORDERSEQUENCE" +
                     ",HAPI_RETURN_RECEIPT_HEAD.RETURNORDERSUBSEQUENCE" +
                     ",HAPI_RETURN_RECEIPT_HEAD.WAREHOUSEIDENTITY" +
                     ",HAPI_RETURN_RECEIPT_HEAD.SHIPDATE" +
                     ",HAPI_RETURN_RECEIPT_HEAD.SPONTANEOUSRETURN" +
                     ",HAPI_RETURN_RECEIPT_HEAD.VENDORIDENTITY" +
              " from   OWUSER.HAPI_RETURN_RECEIPT_HEAD" +
              " where  OWUSER.HAPI_RETURN_RECEIPT_HEAD.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ReturnReceiptHeadDoc aReturnReceiptHeadDoc = new ReturnReceiptHeadDoc();

                aReturnReceiptHeadDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aReturnReceiptHeadDoc.ReturnOrderNumber = null;
                else
                {
                    aReturnReceiptHeadDoc.ReturnOrderNumber = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aReturnReceiptHeadDoc.ReturnOrderSequence = null;
                else
                {
                    aReturnReceiptHeadDoc.ReturnOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aReturnReceiptHeadDoc.ReturnOrderSequence.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aReturnReceiptHeadDoc.ReturnOrderSubSequence = null;
                else
                {
                    aReturnReceiptHeadDoc.ReturnOrderSubSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aReturnReceiptHeadDoc.ReturnOrderSubSequence.Value = r.GetInt32(2);
                }

                if (r.IsDBNull(3))
                    aReturnReceiptHeadDoc.WarehouseIdentity = null;
                else
                {
                    aReturnReceiptHeadDoc.WarehouseIdentity = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aReturnReceiptHeadDoc.ShipDate = null;
                else
                {
                    aReturnReceiptHeadDoc.ShipDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aReturnReceiptHeadDoc.ShipDate.Value = DateTime.SpecifyKind(r.GetDateTime(4), DateTimeKind.Local);
                }

                if (r.IsDBNull(5))
                    aReturnReceiptHeadDoc.SpontaneousReturn = null;
                else
                {
                    aReturnReceiptHeadDoc.SpontaneousReturn = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aReturnReceiptHeadDoc.VendorIdentity = null;
                else
                {
                    aReturnReceiptHeadDoc.VendorIdentity = r.GetString(6);
                }

                aReturnReceiptHeadDocList.Add(aReturnReceiptHeadDoc);
            }

            r.Close();

            ArrayList aReturnReceiptHeadPackingMaterialDocList = aReturnReceiptHeadPackingMaterialSelect.InternalProcess(HapiTransId);
            ArrayList aReturnReceiptLineDocList = aReturnReceiptLineSelect.InternalProcess(HapiTransId);

            foreach (ReturnReceiptHeadDoc aReturnReceiptHeadDoc in aReturnReceiptHeadDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (ReturnReceiptHeadPackingMaterialDoc aReturnReceiptHeadPackingMaterialDoc in aReturnReceiptHeadPackingMaterialDocList)
                {
                    if (GeneratedComparer.EqualReturnReceiptHeadDocReturnReceiptHeadPackingMaterialDoc(aReturnReceiptHeadDoc, aReturnReceiptHeadPackingMaterialDoc))
                        ConnectedChildren.Add(aReturnReceiptHeadPackingMaterialDoc);
                }
                aReturnReceiptHeadDoc.aReturnReceiptHeadPackingMaterialDocs = ConnectedChildren.ToArray(typeof(ReturnReceiptHeadPackingMaterialDoc)) as ReturnReceiptHeadPackingMaterialDoc[];
                ConnectedChildren = new ArrayList();

                foreach (ReturnReceiptLineDoc aReturnReceiptLineDoc in aReturnReceiptLineDocList)
                {
                    if (GeneratedComparer.EqualReturnReceiptHeadDocReturnReceiptLineDoc(aReturnReceiptHeadDoc, aReturnReceiptLineDoc))
                        ConnectedChildren.Add(aReturnReceiptLineDoc);
                }
                aReturnReceiptHeadDoc.aReturnReceiptLineDocs = ConnectedChildren.ToArray(typeof(ReturnReceiptLineDoc)) as ReturnReceiptLineDoc[];
            }

            return aReturnReceiptHeadDocList;
        }
    }

    public class ReturnReceiptHeadPackingMaterialSelect
    {
        private Database db;

        public ReturnReceiptHeadPackingMaterialSelect(Database db)
        {
            this.db = db;

        }

        public ReturnReceiptHeadPackingMaterialDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ReturnReceiptHeadPackingMaterialDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aReturnReceiptHeadPackingMaterialDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_RETURN_RECEIPT_HEAD_PM.RETURNORDERNUMBER" +
                     ",HAPI_RETURN_RECEIPT_HEAD_PM.RETURNORDERSEQUENCE" +
                     ",HAPI_RETURN_RECEIPT_HEAD_PM.RETURNORDERSUBSEQUENCE" +
                     ",HAPI_RETURN_RECEIPT_HEAD_PM.SHIPDATE" +
                     ",HAPI_RETURN_RECEIPT_HEAD_PM.PRODUCTIDENTITY" +
                     ",HAPI_RETURN_RECEIPT_HEAD_PM.PICKQUANTITY" +
                     ",HAPI_RETURN_RECEIPT_HEAD_PM.SPONTANEOUSRETURN" +
              " from   OWUSER.HAPI_RETURN_RECEIPT_HEAD_PM" +
              " where  OWUSER.HAPI_RETURN_RECEIPT_HEAD_PM.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ReturnReceiptHeadPackingMaterialDoc aReturnReceiptHeadPackingMaterialDoc = new ReturnReceiptHeadPackingMaterialDoc();

                aReturnReceiptHeadPackingMaterialDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aReturnReceiptHeadPackingMaterialDoc.ReturnOrderNumber = null;
                else
                {
                    aReturnReceiptHeadPackingMaterialDoc.ReturnOrderNumber = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aReturnReceiptHeadPackingMaterialDoc.ReturnOrderSequence = null;
                else
                {
                    aReturnReceiptHeadPackingMaterialDoc.ReturnOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aReturnReceiptHeadPackingMaterialDoc.ReturnOrderSequence.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aReturnReceiptHeadPackingMaterialDoc.ReturnOrderSubSequence = null;
                else
                {
                    aReturnReceiptHeadPackingMaterialDoc.ReturnOrderSubSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aReturnReceiptHeadPackingMaterialDoc.ReturnOrderSubSequence.Value = r.GetInt32(2);
                }

                if (r.IsDBNull(3))
                    aReturnReceiptHeadPackingMaterialDoc.ShipDate = null;
                else
                {
                    aReturnReceiptHeadPackingMaterialDoc.ShipDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aReturnReceiptHeadPackingMaterialDoc.ShipDate.Value = DateTime.SpecifyKind(r.GetDateTime(3), DateTimeKind.Local);
                }

                if (r.IsDBNull(4))
                    aReturnReceiptHeadPackingMaterialDoc.ProductIdentity = null;
                else
                {
                    aReturnReceiptHeadPackingMaterialDoc.ProductIdentity = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aReturnReceiptHeadPackingMaterialDoc.PickQuantity = null;
                else
                {
                    aReturnReceiptHeadPackingMaterialDoc.PickQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aReturnReceiptHeadPackingMaterialDoc.PickQuantity.Value = Convert.ToDouble(r.GetDecimal(5));
                }

                if (r.IsDBNull(6))
                    aReturnReceiptHeadPackingMaterialDoc.SpontaneousReturn = null;
                else
                {
                    aReturnReceiptHeadPackingMaterialDoc.SpontaneousReturn = r.GetString(6);
                }

                aReturnReceiptHeadPackingMaterialDocList.Add(aReturnReceiptHeadPackingMaterialDoc);
            }

            r.Close();


            return aReturnReceiptHeadPackingMaterialDocList;
        }
    }

    public class ReturnReceiptLineSelect
    {
        private Database db;

        public ReturnReceiptLineSelect(Database db)
        {
            this.db = db;

        }

        public ReturnReceiptLineDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ReturnReceiptLineDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aReturnReceiptLineDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_RETURN_RECEIPT_LINE.RETURNORDERNUMBER" +
                     ",HAPI_RETURN_RECEIPT_LINE.RETURNORDERSEQUENCE" +
                     ",HAPI_RETURN_RECEIPT_LINE.RETURNORDERSUBSEQUENCE" +
                     ",HAPI_RETURN_RECEIPT_LINE.SHIPDATE" +
                     ",HAPI_RETURN_RECEIPT_LINE.RETURNORDERLINEPOSITION" +
                     ",HAPI_RETURN_RECEIPT_LINE.RETURNORDERLINESEQUENCE" +
                     ",HAPI_RETURN_RECEIPT_LINE.PRODUCTIDENTITY" +
                     ",HAPI_RETURN_RECEIPT_LINE.PACKAGEIDENTITY" +
                     ",HAPI_RETURN_RECEIPT_LINE.PRODUCTIONLOTIDENTITY" +
                     ",HAPI_RETURN_RECEIPT_LINE.PRODUCTIONSUBLOTIDENTITY" +
                     ",HAPI_RETURN_RECEIPT_LINE.MARKETINGLOTIDENTITY" +
                     ",HAPI_RETURN_RECEIPT_LINE.PICKQUANTITY" +
                     ",HAPI_RETURN_RECEIPT_LINE.QTYBACK" +
                     ",HAPI_RETURN_RECEIPT_LINE.QTYCANCEL" +
                     ",HAPI_RETURN_RECEIPT_LINE.QTYSURPLUSPICK" +
                     ",HAPI_RETURN_RECEIPT_LINE.INVENTORYSTATUSCODE" +
              " from   OWUSER.HAPI_RETURN_RECEIPT_LINE" +
              " where  OWUSER.HAPI_RETURN_RECEIPT_LINE.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ReturnReceiptLineDoc aReturnReceiptLineDoc = new ReturnReceiptLineDoc();

                aReturnReceiptLineDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aReturnReceiptLineDoc.ReturnOrderNumber = null;
                else
                {
                    aReturnReceiptLineDoc.ReturnOrderNumber = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aReturnReceiptLineDoc.ReturnOrderSequence = null;
                else
                {
                    aReturnReceiptLineDoc.ReturnOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aReturnReceiptLineDoc.ReturnOrderSequence.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aReturnReceiptLineDoc.ReturnOrderSubSequence = null;
                else
                {
                    aReturnReceiptLineDoc.ReturnOrderSubSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aReturnReceiptLineDoc.ReturnOrderSubSequence.Value = r.GetInt32(2);
                }

                if (r.IsDBNull(3))
                    aReturnReceiptLineDoc.ShipDate = null;
                else
                {
                    aReturnReceiptLineDoc.ShipDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aReturnReceiptLineDoc.ShipDate.Value = DateTime.SpecifyKind(r.GetDateTime(3), DateTimeKind.Local);
                }

                if (r.IsDBNull(4))
                    aReturnReceiptLineDoc.ReturnOrderLinePosition = null;
                else
                {
                    aReturnReceiptLineDoc.ReturnOrderLinePosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aReturnReceiptLineDoc.ReturnOrderLinePosition.Value = r.GetInt32(4);
                }

                if (r.IsDBNull(5))
                    aReturnReceiptLineDoc.ReturnOrderLineSequence = null;
                else
                {
                    aReturnReceiptLineDoc.ReturnOrderLineSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aReturnReceiptLineDoc.ReturnOrderLineSequence.Value = r.GetInt32(5);
                }

                if (r.IsDBNull(6))
                    aReturnReceiptLineDoc.ProductIdentity = null;
                else
                {
                    aReturnReceiptLineDoc.ProductIdentity = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aReturnReceiptLineDoc.PackageIdentity = null;
                else
                {
                    aReturnReceiptLineDoc.PackageIdentity = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aReturnReceiptLineDoc.ProductionLotIdentity = null;
                else
                {
                    aReturnReceiptLineDoc.ProductionLotIdentity = r.GetString(8);
                }

                if (r.IsDBNull(9))
                    aReturnReceiptLineDoc.ProductionSubLotIdentity = null;
                else
                {
                    aReturnReceiptLineDoc.ProductionSubLotIdentity = r.GetString(9);
                }

                if (r.IsDBNull(10))
                    aReturnReceiptLineDoc.MarketingLotIdentity = null;
                else
                {
                    aReturnReceiptLineDoc.MarketingLotIdentity = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aReturnReceiptLineDoc.PickQuantity = null;
                else
                {
                    aReturnReceiptLineDoc.PickQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aReturnReceiptLineDoc.PickQuantity.Value = Convert.ToDouble(r.GetDecimal(11));
                }

                if (r.IsDBNull(12))
                    aReturnReceiptLineDoc.Qtyback = null;
                else
                {
                    aReturnReceiptLineDoc.Qtyback = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aReturnReceiptLineDoc.Qtyback.Value = Convert.ToDouble(r.GetDecimal(12));
                }

                if (r.IsDBNull(13))
                    aReturnReceiptLineDoc.Qtycancel = null;
                else
                {
                    aReturnReceiptLineDoc.Qtycancel = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aReturnReceiptLineDoc.Qtycancel.Value = Convert.ToDouble(r.GetDecimal(13));
                }

                if (r.IsDBNull(14))
                    aReturnReceiptLineDoc.QtySurplusPick = null;
                else
                {
                    aReturnReceiptLineDoc.QtySurplusPick = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aReturnReceiptLineDoc.QtySurplusPick.Value = Convert.ToDouble(r.GetDecimal(14));
                }

                if (r.IsDBNull(15))
                    aReturnReceiptLineDoc.InventoryStatusCode = null;
                else
                {
                    aReturnReceiptLineDoc.InventoryStatusCode = r.GetString(15);
                }

                aReturnReceiptLineDocList.Add(aReturnReceiptLineDoc);
            }

            r.Close();


            return aReturnReceiptLineDocList;
        }
    }

    public class ASNHeadSelect
    {
        private Database db;

        private ASNLoadCarrierSelect aASNLoadCarrierSelect;
        private ASNLineSelect aASNLineSelect;

        public ASNHeadSelect(Database db)
        {
            this.db = db;

            aASNLoadCarrierSelect = new ASNLoadCarrierSelect(this.db);
            aASNLineSelect = new ASNLineSelect(this.db);
        }

        public ASNHeadDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ASNHeadDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aASNHeadDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_SHIPMENT_REPORT_HEAD.ASNIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.ASNSEQUENCENUMBER" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SHIPFROMPARTYNODEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.ASNLEVEL" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SHIPDATETIME" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.DOCUMENTDATETIME" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.DELIVERYWINDOWFIRST" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.DELIVERYWINDOWLAST" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SCHEDULEDARRIVALDATETIME" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SHIPFROMPARTYIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SHIPFROMPARTYQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SHIPTOPARTYNODEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SHIPTOPARTYIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SHIPTOPARTYQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.FORWARDERIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.INSTRUCTIONS" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.NUMBEROFLOADCARRIERS" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.VEHICLEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.ESTIMATEDVOLUME" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.VOLUMEUOMIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.BILLOFLADINGNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.PACKINGSLIPNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SHIPPEDFROMWAREHOUSEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_HEAD.SHIPPEDONDEPARTUREIDENTITY" +
              " from   OWUSER.HAPI_SHIPMENT_REPORT_HEAD" +
              " where  OWUSER.HAPI_SHIPMENT_REPORT_HEAD.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ASNHeadDoc aASNHeadDoc = new ASNHeadDoc();

                aASNHeadDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aASNHeadDoc.ASNIdentity = null;
                else
                {
                    aASNHeadDoc.ASNIdentity = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aASNHeadDoc.ASNSequenceNumber = null;
                else
                {
                    aASNHeadDoc.ASNSequenceNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNHeadDoc.ASNSequenceNumber.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aASNHeadDoc.ShipFromPartyNodeIdentity = null;
                else
                {
                    aASNHeadDoc.ShipFromPartyNodeIdentity = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aASNHeadDoc.ASNLevel = null;
                else
                {
                    aASNHeadDoc.ASNLevel = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aASNHeadDoc.ShipDateTime = null;
                else
                {
                    aASNHeadDoc.ShipDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aASNHeadDoc.ShipDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(4), DateTimeKind.Local);
                }

                if (r.IsDBNull(5))
                    aASNHeadDoc.DocumentDateTime = null;
                else
                {
                    aASNHeadDoc.DocumentDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aASNHeadDoc.DocumentDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(5), DateTimeKind.Local);
                }

                if (r.IsDBNull(6))
                    aASNHeadDoc.DeliveryWindowFirst = null;
                else
                {
                    aASNHeadDoc.DeliveryWindowFirst = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aASNHeadDoc.DeliveryWindowFirst.Value = DateTime.SpecifyKind(r.GetDateTime(6), DateTimeKind.Local);
                }

                if (r.IsDBNull(7))
                    aASNHeadDoc.DeliveryWindowLast = null;
                else
                {
                    aASNHeadDoc.DeliveryWindowLast = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aASNHeadDoc.DeliveryWindowLast.Value = DateTime.SpecifyKind(r.GetDateTime(7), DateTimeKind.Local);
                }

                if (r.IsDBNull(8))
                    aASNHeadDoc.ScheduledArrivalDateTime = null;
                else
                {
                    aASNHeadDoc.ScheduledArrivalDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aASNHeadDoc.ScheduledArrivalDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(8), DateTimeKind.Local);
                }

                if (r.IsDBNull(9))
                    aASNHeadDoc.ShipFromPartyIdentity = null;
                else
                {
                    aASNHeadDoc.ShipFromPartyIdentity = r.GetString(9);
                }

                if (r.IsDBNull(10))
                    aASNHeadDoc.ShipFromPartyQualifier = null;
                else
                {
                    aASNHeadDoc.ShipFromPartyQualifier = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aASNHeadDoc.ShipToPartyNodeIdentity = null;
                else
                {
                    aASNHeadDoc.ShipToPartyNodeIdentity = r.GetString(11);
                }

                if (r.IsDBNull(12))
                    aASNHeadDoc.ShiptoPartyIdentity = null;
                else
                {
                    aASNHeadDoc.ShiptoPartyIdentity = r.GetString(12);
                }

                if (r.IsDBNull(13))
                    aASNHeadDoc.ShiptoPartyQualifier = null;
                else
                {
                    aASNHeadDoc.ShiptoPartyQualifier = r.GetString(13);
                }

                if (r.IsDBNull(14))
                    aASNHeadDoc.ForwarderIdentity = null;
                else
                {
                    aASNHeadDoc.ForwarderIdentity = r.GetString(14);
                }

                if (r.IsDBNull(15))
                    aASNHeadDoc.Instructions = null;
                else
                {
                    aASNHeadDoc.Instructions = r.GetString(15);
                }

                if (r.IsDBNull(16))
                    aASNHeadDoc.NumberOfLoadCarriers = null;
                else
                {
                    aASNHeadDoc.NumberOfLoadCarriers = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNHeadDoc.NumberOfLoadCarriers.Value = r.GetInt32(16);
                }

                if (r.IsDBNull(17))
                    aASNHeadDoc.VehicleIdentity = null;
                else
                {
                    aASNHeadDoc.VehicleIdentity = r.GetString(17);
                }

                if (r.IsDBNull(18))
                    aASNHeadDoc.EstimatedVolume = null;
                else
                {
                    aASNHeadDoc.EstimatedVolume = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNHeadDoc.EstimatedVolume.Value = Convert.ToDouble(r.GetDecimal(18));
                }

                if (r.IsDBNull(19))
                    aASNHeadDoc.VolumeUOMIdentity = null;
                else
                {
                    aASNHeadDoc.VolumeUOMIdentity = r.GetString(19);
                }

                if (r.IsDBNull(20))
                    aASNHeadDoc.BillOfLadingNumber = null;
                else
                {
                    aASNHeadDoc.BillOfLadingNumber = r.GetString(20);
                }

                if (r.IsDBNull(21))
                    aASNHeadDoc.PackingSlipNumber = null;
                else
                {
                    aASNHeadDoc.PackingSlipNumber = r.GetString(21);
                }

                if (r.IsDBNull(22))
                    aASNHeadDoc.ShippedFromWarehouseIdentity = null;
                else
                {
                    aASNHeadDoc.ShippedFromWarehouseIdentity = r.GetString(22);
                }

                if (r.IsDBNull(23))
                    aASNHeadDoc.ShippedOnDepartureIdentity = null;
                else
                {
                    aASNHeadDoc.ShippedOnDepartureIdentity = r.GetString(23);
                }

                aASNHeadDocList.Add(aASNHeadDoc);
            }

            r.Close();

            ArrayList aASNLoadCarrierDocList = aASNLoadCarrierSelect.InternalProcess(HapiTransId);
            ArrayList aASNLineDocList = aASNLineSelect.InternalProcess(HapiTransId);

            foreach (ASNHeadDoc aASNHeadDoc in aASNHeadDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (ASNLoadCarrierDoc aASNLoadCarrierDoc in aASNLoadCarrierDocList)
                {
                    if (GeneratedComparer.EqualASNHeadDocASNLoadCarrierDoc(aASNHeadDoc, aASNLoadCarrierDoc))
                        ConnectedChildren.Add(aASNLoadCarrierDoc);
                }
                aASNHeadDoc.aASNLoadCarrierDocs = ConnectedChildren.ToArray(typeof(ASNLoadCarrierDoc)) as ASNLoadCarrierDoc[];
                ConnectedChildren = new ArrayList();

                foreach (ASNLineDoc aASNLineDoc in aASNLineDocList)
                {
                    if (GeneratedComparer.EqualASNHeadDocASNLineDoc(aASNHeadDoc, aASNLineDoc))
                        ConnectedChildren.Add(aASNLineDoc);
                }
                aASNHeadDoc.aASNLineDocs = ConnectedChildren.ToArray(typeof(ASNLineDoc)) as ASNLineDoc[];
            }

            return aASNHeadDocList;
        }
    }

    public class ASNLoadCarrierSelect
    {
        private Database db;

        public ASNLoadCarrierSelect(Database db)
        {
            this.db = db;

        }

        public ASNLoadCarrierDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ASNLoadCarrierDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aASNLoadCarrierDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_SHIPMENT_REPORT_CARRIER.VOLUMEUOMIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.TOTALHEIGHT" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.HEIGHTUOMIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.ASNIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.ASNSEQUENCENUMBER" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.SHIPFROMPARTYNODEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.LOADCARRIERIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.LOADCARRIERQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.LOADCARRIERTYPE" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.EXTERNALLOADCARRIERTYPE" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.PARENTLOADCARRIERIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.PRODUCTTRANSPORTIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.SHIPFROMPARTYIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.SHIPTOPARTYNODEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.SHIPTOPARTYIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.SHIPTOPARTYQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.SHIPTOCUSTOMERNODEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.SHIPTOCUSTOMERIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.SHIPTOCUSTOMERQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.INSTRUCTIONS" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.TOTALWEIGHT" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.WEIGHTUOMIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_CARRIER.TOTALVOLUME" +
              " from   OWUSER.HAPI_SHIPMENT_REPORT_CARRIER" +
              " where  OWUSER.HAPI_SHIPMENT_REPORT_CARRIER.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ASNLoadCarrierDoc aASNLoadCarrierDoc = new ASNLoadCarrierDoc();

                aASNLoadCarrierDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aASNLoadCarrierDoc.VolumeUOMIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.VolumeUOMIdentity = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aASNLoadCarrierDoc.TotalHeight = null;
                else
                {
                    aASNLoadCarrierDoc.TotalHeight = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLoadCarrierDoc.TotalHeight.Value = Convert.ToDouble(r.GetDecimal(1));
                }

                if (r.IsDBNull(2))
                    aASNLoadCarrierDoc.HeightUOMIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.HeightUOMIdentity = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aASNLoadCarrierDoc.ASNIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.ASNIdentity = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aASNLoadCarrierDoc.ASNSequenceNumber = null;
                else
                {
                    aASNLoadCarrierDoc.ASNSequenceNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLoadCarrierDoc.ASNSequenceNumber.Value = r.GetInt32(4);
                }

                if (r.IsDBNull(5))
                    aASNLoadCarrierDoc.ShipFromPartyNodeIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.ShipFromPartyNodeIdentity = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aASNLoadCarrierDoc.LoadCarrierIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.LoadCarrierIdentity = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aASNLoadCarrierDoc.LoadCarrierQualifier = null;
                else
                {
                    aASNLoadCarrierDoc.LoadCarrierQualifier = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aASNLoadCarrierDoc.LoadCarrierType = null;
                else
                {
                    aASNLoadCarrierDoc.LoadCarrierType = r.GetString(8);
                }

                if (r.IsDBNull(9))
                    aASNLoadCarrierDoc.ExternalLoadCarrierType = null;
                else
                {
                    aASNLoadCarrierDoc.ExternalLoadCarrierType = r.GetString(9);
                }

                if (r.IsDBNull(10))
                    aASNLoadCarrierDoc.ParentLoadCarrierIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.ParentLoadCarrierIdentity = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aASNLoadCarrierDoc.ProductTransportIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.ProductTransportIdentity = r.GetString(11);
                }

                if (r.IsDBNull(12))
                    aASNLoadCarrierDoc.ShipFromPartyIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.ShipFromPartyIdentity = r.GetString(12);
                }

                if (r.IsDBNull(13))
                    aASNLoadCarrierDoc.ShipToPartyNodeIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.ShipToPartyNodeIdentity = r.GetString(13);
                }

                if (r.IsDBNull(14))
                    aASNLoadCarrierDoc.ShiptoPartyIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.ShiptoPartyIdentity = r.GetString(14);
                }

                if (r.IsDBNull(15))
                    aASNLoadCarrierDoc.ShiptoPartyQualifier = null;
                else
                {
                    aASNLoadCarrierDoc.ShiptoPartyQualifier = r.GetString(15);
                }

                if (r.IsDBNull(16))
                    aASNLoadCarrierDoc.ShipToCustomerNodeIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.ShipToCustomerNodeIdentity = r.GetString(16);
                }

                if (r.IsDBNull(17))
                    aASNLoadCarrierDoc.ShiptoCustomerIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.ShiptoCustomerIdentity = r.GetString(17);
                }

                if (r.IsDBNull(18))
                    aASNLoadCarrierDoc.ShiptoCustomerQualifier = null;
                else
                {
                    aASNLoadCarrierDoc.ShiptoCustomerQualifier = r.GetString(18);
                }

                if (r.IsDBNull(19))
                    aASNLoadCarrierDoc.Instructions = null;
                else
                {
                    aASNLoadCarrierDoc.Instructions = r.GetString(19);
                }

                if (r.IsDBNull(20))
                    aASNLoadCarrierDoc.TotalWeight = null;
                else
                {
                    aASNLoadCarrierDoc.TotalWeight = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLoadCarrierDoc.TotalWeight.Value = Convert.ToDouble(r.GetDecimal(20));
                }

                if (r.IsDBNull(21))
                    aASNLoadCarrierDoc.WeightUOMIdentity = null;
                else
                {
                    aASNLoadCarrierDoc.WeightUOMIdentity = r.GetString(21);
                }

                if (r.IsDBNull(22))
                    aASNLoadCarrierDoc.TotalVolume = null;
                else
                {
                    aASNLoadCarrierDoc.TotalVolume = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLoadCarrierDoc.TotalVolume.Value = Convert.ToDouble(r.GetDecimal(22));
                }

                aASNLoadCarrierDocList.Add(aASNLoadCarrierDoc);
            }

            r.Close();


            return aASNLoadCarrierDocList;
        }
    }

    public class ASNLineSelect
    {
        private Database db;

        public ASNLineSelect(Database db)
        {
            this.db = db;

        }

        public ASNLineDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ASNLineDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aASNLineDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_SHIPMENT_REPORT_LINE.CUSTOMERORDERLINESEQUENCE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERORDERLINEKITPOSITION" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ORIGINALPURCHASEORDERNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ORIGINALPURCHASEORDERSEQUENCE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ORIGINALPURCHASEORDERLINEPOS" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ORIGINALPURCHASEORDERLINESEQ" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ORIGINALCUSTOMERREFERENCE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.INVENTORYSTATUSCODE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.INVENTORYSTATUSDAYS" +
                     ",HAPI_SHIPMENT_REPORT_LINE.INVENTORYSTATUSKEY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.INVENTORYSTATUSTEXT" +
                     ",HAPI_SHIPMENT_REPORT_LINE.INVENTORYSTATUSALARMDATE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.INSTRUCTIONS" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PREDEFINEDITEMLOADIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PRODUCTNUMBERSHIPFROMPARTNER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PRODUCTNUMBERSHIPTOPARTNER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.GLOBALPRODUCTNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ADDITIONALPACKINGMATERIAL" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERORDERTYPE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PURCHASEORDERNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PURCHASEORDERSEQUENCE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PURCHASEORDERLINEPOS" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PURCHASEORDERLINESEQ" +
                     ",HAPI_SHIPMENT_REPORT_LINE.STOCKEDPRODUCTNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.GLOBALSTOCKEDPRODUCTNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.FROMPARTYIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.FROMPARTYQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERRETURNORDERNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERRETURNORDERSEQUENCE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERRETURNORDERLINEPOS" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERRETURNORDERLINEKITPOS" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERRETURNORDERLINESEQ" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ACTIONCODE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ACTIONCODEREQUIREMENT" +
                     ",HAPI_SHIPMENT_REPORT_LINE.REASONCODE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.REASONTEXT" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPTOVENDORIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPTOVENDORQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.DISCREPANCYQUANTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.DISCREPANCYCODE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.DISCREPANCYTEXT" +
                     ",HAPI_SHIPMENT_REPORT_LINE.QUANTITYUPPERTOLERANCE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CATCHMEASURELOWERTOLERANCE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CATCHMEASUREUPPERTOLERANCE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ASNIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ASNSEQUENCENUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPFROMPARTYNODEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ASNLINENUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ASNLINESEQUENCENUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.LOADCARRIERIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPFROMPARTYIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPTOPARTYNODEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPTOPARTYIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPTOPARTYQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPTOCUSTOMERNODEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPTOCUSTOMERIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPTOCUSTOMERQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SELLTOCUSTOMERIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SELLTOCUSTOMERQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.OWNERIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.OWNERIDENTITYATSHIPTOCUSTOMER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.VENDORIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.VENDORPARTYNODEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PRODUCTNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PRODUCTDESCRIPTION" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PRODUCTNUMBERTYPE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ALTERNATIVEPRODUCTNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.ALTERNATIVEPRODUCTDESCRIPTION" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PRODUCTDATE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.EXPIRYDATE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.MANUFACTURINGDATE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.VENDORPRODUCTNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PURCHASEPRICE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PACKAGEIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PRODUCTIONLOTIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.PRODUCTIONSUBLOTIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.MANUFACTURINGUNIT" +
                     ",HAPI_SHIPMENT_REPORT_LINE.MARKETINGLOTIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SERIALNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.STORAGELOT" +
                     ",HAPI_SHIPMENT_REPORT_LINE.SHIPPEDQUANTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.MEASUREDQUANTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.MEASUREQUALIFIER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.VOLUME" +
                     ",HAPI_SHIPMENT_REPORT_LINE.VOLUMEUOMIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.WEIGHT" +
                     ",HAPI_SHIPMENT_REPORT_LINE.WEIGHTUOMIDENTITY" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERORDERNUMBER" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERORDERSEQUENCE" +
                     ",HAPI_SHIPMENT_REPORT_LINE.CUSTOMERORDERLINEPOSITION" +
              " from   OWUSER.HAPI_SHIPMENT_REPORT_LINE" +
              " where  OWUSER.HAPI_SHIPMENT_REPORT_LINE.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ASNLineDoc aASNLineDoc = new ASNLineDoc();

                aASNLineDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aASNLineDoc.CustomerOrderLineSequence = null;
                else
                {
                    aASNLineDoc.CustomerOrderLineSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.CustomerOrderLineSequence.Value = r.GetInt32(0);
                }

                if (r.IsDBNull(1))
                    aASNLineDoc.CustomerOrderLineKitPosition = null;
                else
                {
                    aASNLineDoc.CustomerOrderLineKitPosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.CustomerOrderLineKitPosition.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aASNLineDoc.OriginalPurchaseOrderNumber = null;
                else
                {
                    aASNLineDoc.OriginalPurchaseOrderNumber = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aASNLineDoc.OriginalPurchaseOrderSequence = null;
                else
                {
                    aASNLineDoc.OriginalPurchaseOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.OriginalPurchaseOrderSequence.Value = r.GetInt32(3);
                }

                if (r.IsDBNull(4))
                    aASNLineDoc.OriginalPurchaseOrderLinePos = null;
                else
                {
                    aASNLineDoc.OriginalPurchaseOrderLinePos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.OriginalPurchaseOrderLinePos.Value = Convert.ToDouble(r.GetDecimal(4));
                }

                if (r.IsDBNull(5))
                    aASNLineDoc.OriginalPurchaseOrderLineSeq = null;
                else
                {
                    aASNLineDoc.OriginalPurchaseOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.OriginalPurchaseOrderLineSeq.Value = r.GetInt32(5);
                }

                if (r.IsDBNull(6))
                    aASNLineDoc.OriginalCustomerReference = null;
                else
                {
                    aASNLineDoc.OriginalCustomerReference = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aASNLineDoc.InventoryStatusCode = null;
                else
                {
                    aASNLineDoc.InventoryStatusCode = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aASNLineDoc.InventoryStatusDays = null;
                else
                {
                    aASNLineDoc.InventoryStatusDays = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.InventoryStatusDays.Value = r.GetInt32(8);
                }

                if (r.IsDBNull(9))
                    aASNLineDoc.InventorystatusKey = null;
                else
                {
                    aASNLineDoc.InventorystatusKey = r.GetString(9);
                }

                if (r.IsDBNull(10))
                    aASNLineDoc.InventorystatusText = null;
                else
                {
                    aASNLineDoc.InventorystatusText = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aASNLineDoc.InventorystatusAlarmDate = null;
                else
                {
                    aASNLineDoc.InventorystatusAlarmDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aASNLineDoc.InventorystatusAlarmDate.Value = DateTime.SpecifyKind(r.GetDateTime(11), DateTimeKind.Local);
                }

                if (r.IsDBNull(12))
                    aASNLineDoc.Instructions = null;
                else
                {
                    aASNLineDoc.Instructions = r.GetString(12);
                }

                if (r.IsDBNull(13))
                    aASNLineDoc.PredefinedItemLoadIdentity = null;
                else
                {
                    aASNLineDoc.PredefinedItemLoadIdentity = r.GetString(13);
                }

                if (r.IsDBNull(14))
                    aASNLineDoc.ProductNumberShipFromPartner = null;
                else
                {
                    aASNLineDoc.ProductNumberShipFromPartner = r.GetString(14);
                }

                if (r.IsDBNull(15))
                    aASNLineDoc.ProductNumberShipToPartner = null;
                else
                {
                    aASNLineDoc.ProductNumberShipToPartner = r.GetString(15);
                }

                if (r.IsDBNull(16))
                    aASNLineDoc.GlobalProductNumber = null;
                else
                {
                    aASNLineDoc.GlobalProductNumber = r.GetString(16);
                }

                if (r.IsDBNull(17))
                    aASNLineDoc.AdditionalPackingMaterial = null;
                else
                {
                    aASNLineDoc.AdditionalPackingMaterial = r.GetString(17);
                }

                if (r.IsDBNull(18))
                    aASNLineDoc.CustomerOrderType = null;
                else
                {
                    aASNLineDoc.CustomerOrderType = r.GetString(18);
                }

                if (r.IsDBNull(19))
                    aASNLineDoc.PurchaseOrderNumber = null;
                else
                {
                    aASNLineDoc.PurchaseOrderNumber = r.GetString(19);
                }

                if (r.IsDBNull(20))
                    aASNLineDoc.PurchaseOrderSequence = null;
                else
                {
                    aASNLineDoc.PurchaseOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.PurchaseOrderSequence.Value = r.GetInt32(20);
                }

                if (r.IsDBNull(21))
                    aASNLineDoc.PurchaseOrderLinePos = null;
                else
                {
                    aASNLineDoc.PurchaseOrderLinePos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.PurchaseOrderLinePos.Value = r.GetInt32(21);
                }

                if (r.IsDBNull(22))
                    aASNLineDoc.PurchaseOrderLineSeq = null;
                else
                {
                    aASNLineDoc.PurchaseOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.PurchaseOrderLineSeq.Value = r.GetInt32(22);
                }

                if (r.IsDBNull(23))
                    aASNLineDoc.StockedProductNumber = null;
                else
                {
                    aASNLineDoc.StockedProductNumber = r.GetString(23);
                }

                if (r.IsDBNull(24))
                    aASNLineDoc.GlobalStockedProductNumber = null;
                else
                {
                    aASNLineDoc.GlobalStockedProductNumber = r.GetString(24);
                }

                if (r.IsDBNull(25))
                    aASNLineDoc.FromPartyIdentity = null;
                else
                {
                    aASNLineDoc.FromPartyIdentity = r.GetString(25);
                }

                if (r.IsDBNull(26))
                    aASNLineDoc.FromPartyQualifier = null;
                else
                {
                    aASNLineDoc.FromPartyQualifier = r.GetString(26);
                }

                if (r.IsDBNull(27))
                    aASNLineDoc.CustomerReturnOrderNumber = null;
                else
                {
                    aASNLineDoc.CustomerReturnOrderNumber = r.GetString(27);
                }

                if (r.IsDBNull(28))
                    aASNLineDoc.CustomerReturnOrderSequence = null;
                else
                {
                    aASNLineDoc.CustomerReturnOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.CustomerReturnOrderSequence.Value = r.GetInt32(28);
                }

                if (r.IsDBNull(29))
                    aASNLineDoc.CustomerReturnOrderLinePos = null;
                else
                {
                    aASNLineDoc.CustomerReturnOrderLinePos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.CustomerReturnOrderLinePos.Value = r.GetInt32(29);
                }

                if (r.IsDBNull(30))
                    aASNLineDoc.CustomerReturnOrderLineKitPos = null;
                else
                {
                    aASNLineDoc.CustomerReturnOrderLineKitPos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.CustomerReturnOrderLineKitPos.Value = r.GetInt32(30);
                }

                if (r.IsDBNull(31))
                    aASNLineDoc.CustomerReturnOrderLineSeq = null;
                else
                {
                    aASNLineDoc.CustomerReturnOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.CustomerReturnOrderLineSeq.Value = r.GetInt32(31);
                }

                if (r.IsDBNull(32))
                    aASNLineDoc.ActionCode = null;
                else
                {
                    aASNLineDoc.ActionCode = r.GetString(32);
                }

                if (r.IsDBNull(33))
                    aASNLineDoc.ActionCodeRequirement = null;
                else
                {
                    aASNLineDoc.ActionCodeRequirement = r.GetString(33);
                }

                if (r.IsDBNull(34))
                    aASNLineDoc.ReasonCode = null;
                else
                {
                    aASNLineDoc.ReasonCode = r.GetString(34);
                }

                if (r.IsDBNull(35))
                    aASNLineDoc.ReasonText = null;
                else
                {
                    aASNLineDoc.ReasonText = r.GetString(35);
                }

                if (r.IsDBNull(36))
                    aASNLineDoc.ShiptoVendorIdentity = null;
                else
                {
                    aASNLineDoc.ShiptoVendorIdentity = r.GetString(36);
                }

                if (r.IsDBNull(37))
                    aASNLineDoc.ShiptoVendorQualifier = null;
                else
                {
                    aASNLineDoc.ShiptoVendorQualifier = r.GetString(37);
                }

                if (r.IsDBNull(38))
                    aASNLineDoc.DiscrepancyQuantity = null;
                else
                {
                    aASNLineDoc.DiscrepancyQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.DiscrepancyQuantity.Value = Convert.ToDouble(r.GetDecimal(38));
                }

                if (r.IsDBNull(39))
                    aASNLineDoc.DiscrepancyCode = null;
                else
                {
                    aASNLineDoc.DiscrepancyCode = r.GetString(39);
                }

                if (r.IsDBNull(40))
                    aASNLineDoc.DiscrepancyText = null;
                else
                {
                    aASNLineDoc.DiscrepancyText = r.GetString(40);
                }

                if (r.IsDBNull(41))
                    aASNLineDoc.QuantityUpperTolerance = null;
                else
                {
                    aASNLineDoc.QuantityUpperTolerance = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.QuantityUpperTolerance.Value = Convert.ToDouble(r.GetDecimal(41));
                }

                if (r.IsDBNull(42))
                    aASNLineDoc.CatchMeasureLowerTolerance = null;
                else
                {
                    aASNLineDoc.CatchMeasureLowerTolerance = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.CatchMeasureLowerTolerance.Value = Convert.ToDouble(r.GetDecimal(42));
                }

                if (r.IsDBNull(43))
                    aASNLineDoc.CatchMeasureUpperTolerance = null;
                else
                {
                    aASNLineDoc.CatchMeasureUpperTolerance = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.CatchMeasureUpperTolerance.Value = Convert.ToDouble(r.GetDecimal(43));
                }

                if (r.IsDBNull(44))
                    aASNLineDoc.ASNIdentity = null;
                else
                {
                    aASNLineDoc.ASNIdentity = r.GetString(44);
                }

                if (r.IsDBNull(45))
                    aASNLineDoc.ASNSequenceNumber = null;
                else
                {
                    aASNLineDoc.ASNSequenceNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.ASNSequenceNumber.Value = r.GetInt32(45);
                }

                if (r.IsDBNull(46))
                    aASNLineDoc.ShipFromPartyNodeIdentity = null;
                else
                {
                    aASNLineDoc.ShipFromPartyNodeIdentity = r.GetString(46);
                }

                if (r.IsDBNull(47))
                    aASNLineDoc.ASNLineNumber = null;
                else
                {
                    aASNLineDoc.ASNLineNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.ASNLineNumber.Value = r.GetInt32(47);
                }

                if (r.IsDBNull(48))
                    aASNLineDoc.ASNLineSequenceNumber = null;
                else
                {
                    aASNLineDoc.ASNLineSequenceNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.ASNLineSequenceNumber.Value = r.GetInt32(48);
                }

                if (r.IsDBNull(49))
                    aASNLineDoc.LoadCarrierIdentity = null;
                else
                {
                    aASNLineDoc.LoadCarrierIdentity = r.GetString(49);
                }

                if (r.IsDBNull(50))
                    aASNLineDoc.ShipFromPartyIdentity = null;
                else
                {
                    aASNLineDoc.ShipFromPartyIdentity = r.GetString(50);
                }

                if (r.IsDBNull(51))
                    aASNLineDoc.ShipToPartyNodeIdentity = null;
                else
                {
                    aASNLineDoc.ShipToPartyNodeIdentity = r.GetString(51);
                }

                if (r.IsDBNull(52))
                    aASNLineDoc.ShiptoPartyIdentity = null;
                else
                {
                    aASNLineDoc.ShiptoPartyIdentity = r.GetString(52);
                }

                if (r.IsDBNull(53))
                    aASNLineDoc.ShiptoPartyQualifier = null;
                else
                {
                    aASNLineDoc.ShiptoPartyQualifier = r.GetString(53);
                }

                if (r.IsDBNull(54))
                    aASNLineDoc.ShipToCustomerNodeIdentity = null;
                else
                {
                    aASNLineDoc.ShipToCustomerNodeIdentity = r.GetString(54);
                }

                if (r.IsDBNull(55))
                    aASNLineDoc.ShiptoCustomerIdentity = null;
                else
                {
                    aASNLineDoc.ShiptoCustomerIdentity = r.GetString(55);
                }

                if (r.IsDBNull(56))
                    aASNLineDoc.ShiptoCustomerQualifier = null;
                else
                {
                    aASNLineDoc.ShiptoCustomerQualifier = r.GetString(56);
                }

                if (r.IsDBNull(57))
                    aASNLineDoc.SelltoCustomerIdentity = null;
                else
                {
                    aASNLineDoc.SelltoCustomerIdentity = r.GetString(57);
                }

                if (r.IsDBNull(58))
                    aASNLineDoc.SelltoCustomerQualifier = null;
                else
                {
                    aASNLineDoc.SelltoCustomerQualifier = r.GetString(58);
                }

                if (r.IsDBNull(59))
                    aASNLineDoc.OwnerIdentity = null;
                else
                {
                    aASNLineDoc.OwnerIdentity = r.GetString(59);
                }

                if (r.IsDBNull(60))
                    aASNLineDoc.OwnerIdentityAtShipToCustomer = null;
                else
                {
                    aASNLineDoc.OwnerIdentityAtShipToCustomer = r.GetString(60);
                }

                if (r.IsDBNull(61))
                    aASNLineDoc.VendorIdentity = null;
                else
                {
                    aASNLineDoc.VendorIdentity = r.GetString(61);
                }

                if (r.IsDBNull(62))
                    aASNLineDoc.VendorPartyNodeIdentity = null;
                else
                {
                    aASNLineDoc.VendorPartyNodeIdentity = r.GetString(62);
                }

                if (r.IsDBNull(63))
                    aASNLineDoc.ProductNumber = null;
                else
                {
                    aASNLineDoc.ProductNumber = r.GetString(63);
                }

                if (r.IsDBNull(64))
                    aASNLineDoc.ProductDescription = null;
                else
                {
                    aASNLineDoc.ProductDescription = r.GetString(64);
                }

                if (r.IsDBNull(65))
                    aASNLineDoc.ProductNumberType = null;
                else
                {
                    aASNLineDoc.ProductNumberType = r.GetString(65);
                }

                if (r.IsDBNull(66))
                    aASNLineDoc.AlternativeProductNumber = null;
                else
                {
                    aASNLineDoc.AlternativeProductNumber = r.GetString(66);
                }

                if (r.IsDBNull(67))
                    aASNLineDoc.AlternativeProductDescription = null;
                else
                {
                    aASNLineDoc.AlternativeProductDescription = r.GetString(67);
                }

                if (r.IsDBNull(68))
                    aASNLineDoc.ProductDate = null;
                else
                {
                    aASNLineDoc.ProductDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aASNLineDoc.ProductDate.Value = DateTime.SpecifyKind(r.GetDateTime(68), DateTimeKind.Local);
                }

                if (r.IsDBNull(69))
                    aASNLineDoc.ExpiryDate = null;
                else
                {
                    aASNLineDoc.ExpiryDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aASNLineDoc.ExpiryDate.Value = DateTime.SpecifyKind(r.GetDateTime(69), DateTimeKind.Local);
                }

                if (r.IsDBNull(70))
                    aASNLineDoc.ManufacturingDate = null;
                else
                {
                    aASNLineDoc.ManufacturingDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aASNLineDoc.ManufacturingDate.Value = DateTime.SpecifyKind(r.GetDateTime(70), DateTimeKind.Local);
                }

                if (r.IsDBNull(71))
                    aASNLineDoc.VendorProductNumber = null;
                else
                {
                    aASNLineDoc.VendorProductNumber = r.GetString(71);
                }

                if (r.IsDBNull(72))
                    aASNLineDoc.PurchasePrice = null;
                else
                {
                    aASNLineDoc.PurchasePrice = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.PurchasePrice.Value = Convert.ToDouble(r.GetDecimal(72));
                }

                if (r.IsDBNull(73))
                    aASNLineDoc.PackageIdentity = null;
                else
                {
                    aASNLineDoc.PackageIdentity = r.GetString(73);
                }

                if (r.IsDBNull(74))
                    aASNLineDoc.ProductionLotIdentity = null;
                else
                {
                    aASNLineDoc.ProductionLotIdentity = r.GetString(74);
                }

                if (r.IsDBNull(75))
                    aASNLineDoc.ProductionSubLotIdentity = null;
                else
                {
                    aASNLineDoc.ProductionSubLotIdentity = r.GetString(75);
                }

                if (r.IsDBNull(76))
                    aASNLineDoc.ManufacturingUnit = null;
                else
                {
                    aASNLineDoc.ManufacturingUnit = r.GetString(76);
                }

                if (r.IsDBNull(77))
                    aASNLineDoc.MarketingLotIdentity = null;
                else
                {
                    aASNLineDoc.MarketingLotIdentity = r.GetString(77);
                }

                if (r.IsDBNull(78))
                    aASNLineDoc.SerialNumber = null;
                else
                {
                    aASNLineDoc.SerialNumber = r.GetString(78);
                }

                if (r.IsDBNull(79))
                    aASNLineDoc.StorageLot = null;
                else
                {
                    aASNLineDoc.StorageLot = r.GetString(79);
                }

                if (r.IsDBNull(80))
                    aASNLineDoc.ShippedQuantity = null;
                else
                {
                    aASNLineDoc.ShippedQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.ShippedQuantity.Value = Convert.ToDouble(r.GetDecimal(80));
                }

                if (r.IsDBNull(81))
                    aASNLineDoc.MeasuredQuantity = null;
                else
                {
                    aASNLineDoc.MeasuredQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.MeasuredQuantity.Value = Convert.ToDouble(r.GetDecimal(81));
                }

                if (r.IsDBNull(82))
                    aASNLineDoc.MeasureQualifier = null;
                else
                {
                    aASNLineDoc.MeasureQualifier = r.GetString(82);
                }

                if (r.IsDBNull(83))
                    aASNLineDoc.Volume = null;
                else
                {
                    aASNLineDoc.Volume = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.Volume.Value = Convert.ToDouble(r.GetDecimal(83));
                }

                if (r.IsDBNull(84))
                    aASNLineDoc.VolumeUOMIdentity = null;
                else
                {
                    aASNLineDoc.VolumeUOMIdentity = r.GetString(84);
                }

                if (r.IsDBNull(85))
                    aASNLineDoc.Weight = null;
                else
                {
                    aASNLineDoc.Weight = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aASNLineDoc.Weight.Value = Convert.ToDouble(r.GetDecimal(85));
                }

                if (r.IsDBNull(86))
                    aASNLineDoc.WeightUOMIdentity = null;
                else
                {
                    aASNLineDoc.WeightUOMIdentity = r.GetString(86);
                }

                if (r.IsDBNull(87))
                    aASNLineDoc.CustomerOrderNumber = null;
                else
                {
                    aASNLineDoc.CustomerOrderNumber = r.GetString(87);
                }

                if (r.IsDBNull(88))
                    aASNLineDoc.CustomerOrderSequence = null;
                else
                {
                    aASNLineDoc.CustomerOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.CustomerOrderSequence.Value = r.GetInt32(88);
                }

                if (r.IsDBNull(89))
                    aASNLineDoc.CustomerOrderLinePosition = null;
                else
                {
                    aASNLineDoc.CustomerOrderLinePosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aASNLineDoc.CustomerOrderLinePosition.Value = r.GetInt32(89);
                }

                aASNLineDocList.Add(aASNLineDoc);
            }

            r.Close();


            return aASNLineDocList;
        }
    }

    public class ConfirmationOfReceiptHeadSelect
    {
        private Database db;

        private ConfirmationOfReceiptLoadCarrierSelect aConfirmationOfReceiptLoadCarrierSelect;
        private ConfirmationOfReceiptLineSelect aConfirmationOfReceiptLineSelect;

        public ConfirmationOfReceiptHeadSelect(Database db)
        {
            this.db = db;

            aConfirmationOfReceiptLoadCarrierSelect = new ConfirmationOfReceiptLoadCarrierSelect(this.db);
            aConfirmationOfReceiptLineSelect = new ConfirmationOfReceiptLineSelect(this.db);
        }

        public ConfirmationOfReceiptHeadDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ConfirmationOfReceiptHeadDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aConfirmationOfReceiptHeadDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_CONF_OF_RECEIPT_HEAD.ACKNOWLEDGEINBOUNDASNIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_HEAD.ARRIVALDATETIME" +
                     ",HAPI_CONF_OF_RECEIPT_HEAD.SHIPTOPARTYNODEIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_HEAD.SHIPTOPARTYIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_HEAD.SHIPTOPARTYQUALIFIER" +
                     ",HAPI_CONF_OF_RECEIPT_HEAD.SHIPFROMPARTYNODEIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_HEAD.SHIPFROMPARTYIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_HEAD.SHIPFROMPARTYQUALIFIER" +
                     ",HAPI_CONF_OF_RECEIPT_HEAD.INBOUNDASNIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_HEAD.INBOUNDASNSEQUENCENUMBER" +
                     ",null" + // HAPI_CONF_OF_RECEIPT_HEAD.ACKNOWLEDGEINBOUNDASNTYPE doesn't exist in 5.1
                     ",HAPI_CONF_OF_RECEIPT_HEAD.FORWARDERIDENTITY" +
              " from   OWUSER.HAPI_CONF_OF_RECEIPT_HEAD" +
              " where  OWUSER.HAPI_CONF_OF_RECEIPT_HEAD.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ConfirmationOfReceiptHeadDoc aConfirmationOfReceiptHeadDoc = new ConfirmationOfReceiptHeadDoc();

                aConfirmationOfReceiptHeadDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aConfirmationOfReceiptHeadDoc.AcknowledgeInboundAsnIdentity = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.AcknowledgeInboundAsnIdentity = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aConfirmationOfReceiptHeadDoc.ArrivalDateTime = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.ArrivalDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aConfirmationOfReceiptHeadDoc.ArrivalDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(1), DateTimeKind.Local);
                }

                if (r.IsDBNull(2))
                    aConfirmationOfReceiptHeadDoc.ShipToPartyNodeIdentity = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.ShipToPartyNodeIdentity = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aConfirmationOfReceiptHeadDoc.ShiptoPartyIdentity = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.ShiptoPartyIdentity = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aConfirmationOfReceiptHeadDoc.ShiptoPartyQualifier = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.ShiptoPartyQualifier = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aConfirmationOfReceiptHeadDoc.ShipFromPartyNodeIdentity = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.ShipFromPartyNodeIdentity = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aConfirmationOfReceiptHeadDoc.ShipFromPartyIdentity = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.ShipFromPartyIdentity = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aConfirmationOfReceiptHeadDoc.ShipFromPartyQualifier = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.ShipFromPartyQualifier = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aConfirmationOfReceiptHeadDoc.InboundAsnIdentity = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.InboundAsnIdentity = r.GetString(8);
                }

                if (r.IsDBNull(9))
                    aConfirmationOfReceiptHeadDoc.InboundAsnSequenceNumber = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.InboundAsnSequenceNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptHeadDoc.InboundAsnSequenceNumber.Value = r.GetInt32(9);
                }

                if (r.IsDBNull(10))
                    aConfirmationOfReceiptHeadDoc.AcknowledgeInboundAsnType = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.AcknowledgeInboundAsnType = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aConfirmationOfReceiptHeadDoc.ForwarderIdentity = null;
                else
                {
                    aConfirmationOfReceiptHeadDoc.ForwarderIdentity = r.GetString(11);
                }

                aConfirmationOfReceiptHeadDocList.Add(aConfirmationOfReceiptHeadDoc);
            }

            r.Close();

            ArrayList aConfirmationOfReceiptLoadCarrierDocList = aConfirmationOfReceiptLoadCarrierSelect.InternalProcess(HapiTransId);
            ArrayList aConfirmationOfReceiptLineDocList = aConfirmationOfReceiptLineSelect.InternalProcess(HapiTransId);

            foreach (ConfirmationOfReceiptHeadDoc aConfirmationOfReceiptHeadDoc in aConfirmationOfReceiptHeadDocList)
            {
                ArrayList ConnectedChildren = null;
                ConnectedChildren = new ArrayList();

                foreach (ConfirmationOfReceiptLoadCarrierDoc aConfirmationOfReceiptLoadCarrierDoc in aConfirmationOfReceiptLoadCarrierDocList)
                {
                    if (GeneratedComparer.EqualConfirmationOfReceiptHeadDocConfirmationOfReceiptLoadCarrierDoc(aConfirmationOfReceiptHeadDoc, aConfirmationOfReceiptLoadCarrierDoc))
                        ConnectedChildren.Add(aConfirmationOfReceiptLoadCarrierDoc);
                }
                aConfirmationOfReceiptHeadDoc.aConfirmationOfReceiptLoadCarrierDocs = ConnectedChildren.ToArray(typeof(ConfirmationOfReceiptLoadCarrierDoc)) as ConfirmationOfReceiptLoadCarrierDoc[];
                ConnectedChildren = new ArrayList();

                foreach (ConfirmationOfReceiptLineDoc aConfirmationOfReceiptLineDoc in aConfirmationOfReceiptLineDocList)
                {
                    if (GeneratedComparer.EqualConfirmationOfReceiptHeadDocConfirmationOfReceiptLineDoc(aConfirmationOfReceiptHeadDoc, aConfirmationOfReceiptLineDoc))
                        ConnectedChildren.Add(aConfirmationOfReceiptLineDoc);
                }
                aConfirmationOfReceiptHeadDoc.aConfirmationOfReceiptLineDocs = ConnectedChildren.ToArray(typeof(ConfirmationOfReceiptLineDoc)) as ConfirmationOfReceiptLineDoc[];
            }

            return aConfirmationOfReceiptHeadDocList;
        }
    }

    public class ConfirmationOfReceiptLoadCarrierSelect
    {
        private Database db;

        public ConfirmationOfReceiptLoadCarrierSelect(Database db)
        {
            this.db = db;

        }

        public ConfirmationOfReceiptLoadCarrierDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ConfirmationOfReceiptLoadCarrierDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aConfirmationOfReceiptLoadCarrierDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_CONF_OF_RECEIPT_CARRIER.ACKNOWLEDGEINBOUNDASNIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.LOADCARRIERIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.LOADCARRIERQUALIFIER" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.ARRIVALDATETIME" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.SHIPTOPARTYNODEIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.SHIPTOPARTYIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.SHIPTOPARTYQUALIFIER" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.SHIPFROMPARTYNODEIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.SHIPFROMPARTYIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.SHIPFROMPARTYQUALIFIER" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.INBOUNDASNIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.INBOUNDASNSEQUENCENUMBER" +
                     ",HAPI_CONF_OF_RECEIPT_CARRIER.DELIVERYIDENTITY" +
              " from   OWUSER.HAPI_CONF_OF_RECEIPT_CARRIER" +
              " where  OWUSER.HAPI_CONF_OF_RECEIPT_CARRIER.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ConfirmationOfReceiptLoadCarrierDoc aConfirmationOfReceiptLoadCarrierDoc = new ConfirmationOfReceiptLoadCarrierDoc();

                aConfirmationOfReceiptLoadCarrierDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aConfirmationOfReceiptLoadCarrierDoc.AcknowledgeInboundAsnIdentity = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.AcknowledgeInboundAsnIdentity = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aConfirmationOfReceiptLoadCarrierDoc.LoadCarrierIdentity = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.LoadCarrierIdentity = r.GetString(1);
                }

                if (r.IsDBNull(2))
                    aConfirmationOfReceiptLoadCarrierDoc.LoadCarrierQualifier = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.LoadCarrierQualifier = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aConfirmationOfReceiptLoadCarrierDoc.ArrivalDateTime = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.ArrivalDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aConfirmationOfReceiptLoadCarrierDoc.ArrivalDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(3), DateTimeKind.Local);
                }

                if (r.IsDBNull(4))
                    aConfirmationOfReceiptLoadCarrierDoc.ShipToPartyNodeIdentity = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.ShipToPartyNodeIdentity = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aConfirmationOfReceiptLoadCarrierDoc.ShiptoPartyIdentity = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.ShiptoPartyIdentity = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aConfirmationOfReceiptLoadCarrierDoc.ShiptoPartyQualifier = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.ShiptoPartyQualifier = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aConfirmationOfReceiptLoadCarrierDoc.ShipFromPartyNodeIdentity = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.ShipFromPartyNodeIdentity = r.GetString(7);
                }

                if (r.IsDBNull(8))
                    aConfirmationOfReceiptLoadCarrierDoc.ShipFromPartyIdentity = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.ShipFromPartyIdentity = r.GetString(8);
                }

                if (r.IsDBNull(9))
                    aConfirmationOfReceiptLoadCarrierDoc.ShipFromPartyQualifier = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.ShipFromPartyQualifier = r.GetString(9);
                }

                if (r.IsDBNull(10))
                    aConfirmationOfReceiptLoadCarrierDoc.InboundAsnIdentity = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.InboundAsnIdentity = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aConfirmationOfReceiptLoadCarrierDoc.InboundAsnSequenceNumber = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.InboundAsnSequenceNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLoadCarrierDoc.InboundAsnSequenceNumber.Value = r.GetInt32(11);
                }

                if (r.IsDBNull(12))
                    aConfirmationOfReceiptLoadCarrierDoc.DeliveryIdentity = null;
                else
                {
                    aConfirmationOfReceiptLoadCarrierDoc.DeliveryIdentity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLoadCarrierDoc.DeliveryIdentity.Value = r.GetInt32(12);
                }

                aConfirmationOfReceiptLoadCarrierDocList.Add(aConfirmationOfReceiptLoadCarrierDoc);
            }

            r.Close();


            return aConfirmationOfReceiptLoadCarrierDocList;
        }
    }

    public class ConfirmationOfReceiptLineSelect
    {
        private Database db;

        public ConfirmationOfReceiptLineSelect(Database db)
        {
            this.db = db;

        }

        public ConfirmationOfReceiptLineDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (ConfirmationOfReceiptLineDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aConfirmationOfReceiptLineDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_CONF_OF_RECEIPT_LINE.ACKNOWLEDGEINBOUNDASNIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.ACKNOWLEDGEINBOUNDASNLINENUM" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.ARRIVALDATETIME" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.SHIPFROMPARTYNODEIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.SHIPFROMPARTYIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.SHIPFROMPARTYQUALIFIER" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.INBOUNDASNIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.INBOUNDASNSEQUENCENUMBER" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.INBOUNDASNLINENUMBER" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.INBOUNDASNLINESEQUENCENUMBER" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.PRODUCTNUMBER" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.ASNLINEQUANTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.ARRIVEDQUANTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.RECEIPTQUANTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.PRODUCTIONLOTIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.PRODUCTIONSUBLOTIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.SERIALNUMBER" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.DELIVERYIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.LOADCARRIERIDENTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.PURCHASEORDERNUMBER" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.PURCHASEORDERSEQUENCE" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.PURCHASEORDERLINEPOS" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.PURCHASEORDERLINESEQ" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.CUSTOMERORDERTYPE" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.EXPIRYDATE" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.MANUFACTURINGDATE" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.INVENTORYSTATUSCODE" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.MEASUREDQUANTITY" +
                     ",HAPI_CONF_OF_RECEIPT_LINE.MEASUREQUALIFIER" +
              " from   OWUSER.HAPI_CONF_OF_RECEIPT_LINE" +
              " where  OWUSER.HAPI_CONF_OF_RECEIPT_LINE.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                ConfirmationOfReceiptLineDoc aConfirmationOfReceiptLineDoc = new ConfirmationOfReceiptLineDoc();

                aConfirmationOfReceiptLineDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aConfirmationOfReceiptLineDoc.AcknowledgeInboundAsnIdentity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.AcknowledgeInboundAsnIdentity = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aConfirmationOfReceiptLineDoc.AcknowledgeInboundAsnLinenum = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.AcknowledgeInboundAsnLinenum = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLineDoc.AcknowledgeInboundAsnLinenum.Value = r.GetInt32(1);
                }

                if (r.IsDBNull(2))
                    aConfirmationOfReceiptLineDoc.ArrivalDateTime = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ArrivalDateTime = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aConfirmationOfReceiptLineDoc.ArrivalDateTime.Value = DateTime.SpecifyKind(r.GetDateTime(2), DateTimeKind.Local);
                }

                if (r.IsDBNull(3))
                    aConfirmationOfReceiptLineDoc.ShipFromPartyNodeIdentity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ShipFromPartyNodeIdentity = r.GetString(3);
                }

                if (r.IsDBNull(4))
                    aConfirmationOfReceiptLineDoc.ShipFromPartyIdentity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ShipFromPartyIdentity = r.GetString(4);
                }

                if (r.IsDBNull(5))
                    aConfirmationOfReceiptLineDoc.ShipFromPartyQualifier = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ShipFromPartyQualifier = r.GetString(5);
                }

                if (r.IsDBNull(6))
                    aConfirmationOfReceiptLineDoc.InboundAsnIdentity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.InboundAsnIdentity = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aConfirmationOfReceiptLineDoc.InboundAsnSequenceNumber = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.InboundAsnSequenceNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLineDoc.InboundAsnSequenceNumber.Value = r.GetInt32(7);
                }

                if (r.IsDBNull(8))
                    aConfirmationOfReceiptLineDoc.InboundAsnLineNumber = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.InboundAsnLineNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLineDoc.InboundAsnLineNumber.Value = r.GetInt32(8);
                }

                if (r.IsDBNull(9))
                    aConfirmationOfReceiptLineDoc.InboundAsnLineSequenceNumber = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.InboundAsnLineSequenceNumber = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLineDoc.InboundAsnLineSequenceNumber.Value = r.GetInt32(9);
                }

                if (r.IsDBNull(10))
                    aConfirmationOfReceiptLineDoc.ProductNumber = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ProductNumber = r.GetString(10);
                }

                if (r.IsDBNull(11))
                    aConfirmationOfReceiptLineDoc.AsnLineQuantity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.AsnLineQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aConfirmationOfReceiptLineDoc.AsnLineQuantity.Value = Convert.ToDouble(r.GetDecimal(11));
                }

                if (r.IsDBNull(12))
                    aConfirmationOfReceiptLineDoc.ArrivedQuantity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ArrivedQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aConfirmationOfReceiptLineDoc.ArrivedQuantity.Value = Convert.ToDouble(r.GetDecimal(12));
                }

                if (r.IsDBNull(13))
                    aConfirmationOfReceiptLineDoc.ReceiptQuantity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ReceiptQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aConfirmationOfReceiptLineDoc.ReceiptQuantity.Value = Convert.ToDouble(r.GetDecimal(13));
                }

                if (r.IsDBNull(14))
                    aConfirmationOfReceiptLineDoc.ProductionLotIdentity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ProductionLotIdentity = r.GetString(14);
                }

                if (r.IsDBNull(15))
                    aConfirmationOfReceiptLineDoc.ProductionSubLotIdentity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ProductionSubLotIdentity = r.GetString(15);
                }

                if (r.IsDBNull(16))
                    aConfirmationOfReceiptLineDoc.SerialNumber = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.SerialNumber = r.GetString(16);
                }

                if (r.IsDBNull(17))
                    aConfirmationOfReceiptLineDoc.DeliveryIdentity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.DeliveryIdentity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLineDoc.DeliveryIdentity.Value = r.GetInt32(17);
                }

                if (r.IsDBNull(18))
                    aConfirmationOfReceiptLineDoc.LoadCarrierIdentity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.LoadCarrierIdentity = r.GetString(18);
                }

                if (r.IsDBNull(19))
                    aConfirmationOfReceiptLineDoc.PurchaseOrderNumber = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.PurchaseOrderNumber = r.GetString(19);
                }

                if (r.IsDBNull(20))
                    aConfirmationOfReceiptLineDoc.PurchaseOrderSequence = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.PurchaseOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLineDoc.PurchaseOrderSequence.Value = r.GetInt32(20);
                }

                if (r.IsDBNull(21))
                    aConfirmationOfReceiptLineDoc.PurchaseOrderLinePos = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.PurchaseOrderLinePos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLineDoc.PurchaseOrderLinePos.Value = r.GetInt32(21);
                }

                if (r.IsDBNull(22))
                    aConfirmationOfReceiptLineDoc.PurchaseOrderLineSeq = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.PurchaseOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aConfirmationOfReceiptLineDoc.PurchaseOrderLineSeq.Value = r.GetInt32(22);
                }

                if (r.IsDBNull(23))
                    aConfirmationOfReceiptLineDoc.CustomerOrderType = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.CustomerOrderType = r.GetString(23);
                }

                if (r.IsDBNull(24))
                    aConfirmationOfReceiptLineDoc.ExpiryDate = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ExpiryDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aConfirmationOfReceiptLineDoc.ExpiryDate.Value = DateTime.SpecifyKind(r.GetDateTime(24), DateTimeKind.Local);
                }

                if (r.IsDBNull(25))
                    aConfirmationOfReceiptLineDoc.ManufacturingDate = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.ManufacturingDate = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.dateTime();
                    aConfirmationOfReceiptLineDoc.ManufacturingDate.Value = DateTime.SpecifyKind(r.GetDateTime(25), DateTimeKind.Local);
                }

                if (r.IsDBNull(26))
                    aConfirmationOfReceiptLineDoc.InventoryStatusCode = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.InventoryStatusCode = r.GetString(26);
                }

                if (r.IsDBNull(27))
                    aConfirmationOfReceiptLineDoc.MeasuredQuantity = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.MeasuredQuantity = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@double();
                    aConfirmationOfReceiptLineDoc.MeasuredQuantity.Value = Convert.ToDouble(r.GetDecimal(27));
                }

                if (r.IsDBNull(28))
                    aConfirmationOfReceiptLineDoc.MeasureQualifier = null;
                else
                {
                    aConfirmationOfReceiptLineDoc.MeasureQualifier = r.GetString(28);
                }

                aConfirmationOfReceiptLineDocList.Add(aConfirmationOfReceiptLineDoc);
            }

            r.Close();


            return aConfirmationOfReceiptLineDocList;
        }
    }

    public class InboundOrderCompletedSelect
    {
        private Database db;

        public InboundOrderCompletedSelect(Database db)
        {
            this.db = db;

        }

        public InboundOrderCompletedDoc Process(System.String HapiTransId)
        {
            ArrayList l = InternalProcess(HapiTransId);

            if (l.Count == 1)
                return (InboundOrderCompletedDoc)l[0];
            else
                return null;
        }

        public ArrayList InternalProcess(System.String HapiTransId)
        {
            ArrayList aInboundOrderCompletedDocList = new ArrayList();

            IDataReader r = db.ExecuteReader(
              "select" +
                     " HAPI_INBOUND_ORDER_COMPLETED.WAREHOUSEIDENTITY" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.EMPLOYEEIDENTITY" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.PURCHASEORDERNUMBER" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.PURCHASEORDERSEQUENCE" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.PURCHASEORDERLINEPOSITION" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.PURCHASEORDERLINESEQUENCE" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.CUSTOMERRETURNORDERNUMBER" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.CUSTOMERRETURNORDERSEQUENCE" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.CUSTOMERRETURNORDERLINEPOS" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.CUSTOMERRETURNORDERLINEKITPOS" +
                     ",HAPI_INBOUND_ORDER_COMPLETED.CUSTOMERRETURNORDERLINESEQ" +
              " from   OWUSER.HAPI_INBOUND_ORDER_COMPLETED" +
              " where  OWUSER.HAPI_INBOUND_ORDER_COMPLETED.HAPITRANS_ID = '" + HapiTransId + "'");

            while (r.Read())
            {
                InboundOrderCompletedDoc aInboundOrderCompletedDoc = new InboundOrderCompletedDoc();

                aInboundOrderCompletedDoc.OPCODE = "1";

                if (r.IsDBNull(0))
                    aInboundOrderCompletedDoc.WarehouseIdentity = null;
                else
                {
                    aInboundOrderCompletedDoc.WarehouseIdentity = r.GetString(0);
                }

                if (r.IsDBNull(1))
                    aInboundOrderCompletedDoc.EmployeeIdentity = null;
                else
                {
                    aInboundOrderCompletedDoc.EmployeeIdentity = r.GetString(1);
                }

                if (r.IsDBNull(2))
                    aInboundOrderCompletedDoc.PurchaseOrderNumber = null;
                else
                {
                    aInboundOrderCompletedDoc.PurchaseOrderNumber = r.GetString(2);
                }

                if (r.IsDBNull(3))
                    aInboundOrderCompletedDoc.PurchaseOrderSequence = null;
                else
                {
                    aInboundOrderCompletedDoc.PurchaseOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInboundOrderCompletedDoc.PurchaseOrderSequence.Value = r.GetInt32(3);
                }

                if (r.IsDBNull(4))
                    aInboundOrderCompletedDoc.PurchaseOrderLinePosition = null;
                else
                {
                    aInboundOrderCompletedDoc.PurchaseOrderLinePosition = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInboundOrderCompletedDoc.PurchaseOrderLinePosition.Value = r.GetInt32(4);
                }

                if (r.IsDBNull(5))
                    aInboundOrderCompletedDoc.PurchaseOrderLineSequence = null;
                else
                {
                    aInboundOrderCompletedDoc.PurchaseOrderLineSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInboundOrderCompletedDoc.PurchaseOrderLineSequence.Value = r.GetInt32(5);
                }

                if (r.IsDBNull(6))
                    aInboundOrderCompletedDoc.CustomerReturnOrderNumber = null;
                else
                {
                    aInboundOrderCompletedDoc.CustomerReturnOrderNumber = r.GetString(6);
                }

                if (r.IsDBNull(7))
                    aInboundOrderCompletedDoc.CustomerReturnOrderSequence = null;
                else
                {
                    aInboundOrderCompletedDoc.CustomerReturnOrderSequence = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInboundOrderCompletedDoc.CustomerReturnOrderSequence.Value = r.GetInt32(7);
                }

                if (r.IsDBNull(8))
                    aInboundOrderCompletedDoc.CustomerReturnOrderLinePos = null;
                else
                {
                    aInboundOrderCompletedDoc.CustomerReturnOrderLinePos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInboundOrderCompletedDoc.CustomerReturnOrderLinePos.Value = r.GetInt32(8);
                }

                if (r.IsDBNull(9))
                    aInboundOrderCompletedDoc.CustomerReturnOrderLineKitPos = null;
                else
                {
                    aInboundOrderCompletedDoc.CustomerReturnOrderLineKitPos = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInboundOrderCompletedDoc.CustomerReturnOrderLineKitPos.Value = r.GetInt32(9);
                }

                if (r.IsDBNull(10))
                    aInboundOrderCompletedDoc.CustomerReturnOrderLineSeq = null;
                else
                {
                    aInboundOrderCompletedDoc.CustomerReturnOrderLineSeq = new Imi.SupplyChain.Server.WebServices.ExternalInterfaceiRen.@int();
                    aInboundOrderCompletedDoc.CustomerReturnOrderLineSeq.Value = r.GetInt32(10);
                }

                aInboundOrderCompletedDocList.Add(aInboundOrderCompletedDoc);
            }

            r.Close();


            return aInboundOrderCompletedDocList;
        }
    }

    public class GeneratedComparer
    {
        static public bool EqualDeliveryReceiptHeadDocDeliveryReceiptLineDoc(DeliveryReceiptHeadDoc aDeliveryReceiptHeadDoc, DeliveryReceiptLineDoc aDeliveryReceiptLineDoc)
        {
            return ((aDeliveryReceiptHeadDoc.DeliveryIdentity.Value == aDeliveryReceiptLineDoc.DeliveryIdentity.Value)
                    && (aDeliveryReceiptHeadDoc.ArrivalDateTime.Value == aDeliveryReceiptLineDoc.ArrivalDateTime.Value));
        }

        static public bool EqualDeliveryReceiptLineDocDeliveryReceiptPackingMaterialDoc(DeliveryReceiptLineDoc aDeliveryReceiptLineDoc, DeliveryReceiptPackingMaterialDoc aDeliveryReceiptPackingMaterialDoc)
        {
            return ((aDeliveryReceiptLineDoc.DeliveryIdentity.Value == aDeliveryReceiptPackingMaterialDoc.DeliveryIdentity.Value)
                    && (aDeliveryReceiptLineDoc.DeliveryidentityLine.Value == aDeliveryReceiptPackingMaterialDoc.DeliveryidentityLine.Value)
                    && (aDeliveryReceiptLineDoc.ArrivalDateTime.Value == aDeliveryReceiptPackingMaterialDoc.ArrivalDateTime.Value));
        }

        static public bool EqualInspectionReceiptHeadDocInspectionReceiptLineDoc(InspectionReceiptHeadDoc aInspectionReceiptHeadDoc, InspectionReceiptLineDoc aInspectionReceiptLineDoc)
        {
            return false;
        }

        static public bool EqualInspectionReceiptLineDocInspectionReceiptLinePackingMaterialDoc(InspectionReceiptLineDoc aInspectionReceiptLineDoc, InspectionReceiptLinePackingMaterialDoc aInspectionReceiptLinePackingMaterialDoc)
        {
            return ((Convert.ToString(aInspectionReceiptLineDoc.WorkOrderIdentity) == Convert.ToString(aInspectionReceiptLinePackingMaterialDoc.WorkOrderIdentity))
                    && (aInspectionReceiptLineDoc.WorkOrderLine.Value == aInspectionReceiptLinePackingMaterialDoc.WorkOrderLine.Value)
                    && (aInspectionReceiptLineDoc.WorkOrderLineSeq.Value == aInspectionReceiptLinePackingMaterialDoc.WorkOrderLineSeq.Value));
        }

        static public bool EqualPickReceiptHeadDocPickReceiptHeadPackingMaterialDoc(PickReceiptHeadDoc aPickReceiptHeadDoc, PickReceiptHeadPackingMaterialDoc aPickReceiptHeadPackingMaterialDoc)
        {
            return ((Convert.ToString(aPickReceiptHeadDoc.CustomerOrderNumber) == Convert.ToString(aPickReceiptHeadPackingMaterialDoc.CustomerOrderNumber))
                    && (aPickReceiptHeadDoc.CustomerOrderSequence.Value == aPickReceiptHeadPackingMaterialDoc.CustomerOrderSequence.Value)
                    && (aPickReceiptHeadDoc.CustomerOrderSubSequence.Value == aPickReceiptHeadPackingMaterialDoc.CustomerOrderSubSequence.Value));
        }

        static public bool EqualPickReceiptHeadDocPickReceiptLineDoc(PickReceiptHeadDoc aPickReceiptHeadDoc, PickReceiptLineDoc aPickReceiptLineDoc)
        {
            return ((Convert.ToString(aPickReceiptHeadDoc.CustomerOrderNumber) == Convert.ToString(aPickReceiptLineDoc.CustomerOrderNumber))
                    && (aPickReceiptHeadDoc.CustomerOrderSequence.Value == aPickReceiptLineDoc.CustomerOrderSequence.Value)
                    && (aPickReceiptHeadDoc.CustomerOrderSubSequence.Value == aPickReceiptLineDoc.CustomerOrderSubSequence.Value));
        }

        static public bool EqualPickReceiptHeadDocPickReceiptServiceDoc(PickReceiptHeadDoc aPickReceiptHeadDoc, PickReceiptServiceDoc aPickReceiptServiceDoc)
        {
            return ((Convert.ToString(aPickReceiptHeadDoc.CustomerOrderNumber) == Convert.ToString(aPickReceiptServiceDoc.CustomerOrderNumber))
                    && (aPickReceiptHeadDoc.CustomerOrderSequence.Value == aPickReceiptServiceDoc.CustomerOrderSequence.Value)
                    && (aPickReceiptHeadDoc.CustomerOrderSubSequence.Value == aPickReceiptServiceDoc.CustomerOrderSubSequence.Value));
        }

        static public bool EqualPickReceiptHeadDocPickReceiptTextDoc(PickReceiptHeadDoc aPickReceiptHeadDoc, PickReceiptTextDoc aPickReceiptTextDoc)
        {
            return ((Convert.ToString(aPickReceiptHeadDoc.CustomerOrderNumber) == Convert.ToString(aPickReceiptTextDoc.CustomerOrderNumber))
                    && (aPickReceiptHeadDoc.CustomerOrderSequence.Value == aPickReceiptTextDoc.CustomerOrderSequence.Value)
                    && (aPickReceiptHeadDoc.CustomerOrderSubSequence.Value == aPickReceiptTextDoc.CustomerOrderSubSequence.Value));
        }

        static public bool EqualPickReceiptLineDocPickReceiptLinePackingMaterialDoc(PickReceiptLineDoc aPickReceiptLineDoc, PickReceiptLinePackingMaterialDoc aPickReceiptLinePackingMaterialDoc)
        {
            return ((aPickReceiptLineDoc.CustomerOrderLineKitPosition.Value == aPickReceiptLinePackingMaterialDoc.CustomerOrderLineKitPosition.Value)
                    && (aPickReceiptLineDoc.CustomerOrderLineSequence.Value == aPickReceiptLinePackingMaterialDoc.CustomerOrderLineSequence.Value)
                    && (Convert.ToString(aPickReceiptLineDoc.CustomerOrderNumber) == Convert.ToString(aPickReceiptLinePackingMaterialDoc.CustomerOrderNumber))
                    && (aPickReceiptLineDoc.CustomerOrderSequence.Value == aPickReceiptLinePackingMaterialDoc.CustomerOrderSequence.Value)
                    && (aPickReceiptLineDoc.CustomerOrderSubSequence.Value == aPickReceiptLinePackingMaterialDoc.CustomerOrderSubSequence.Value)
                    && (aPickReceiptLineDoc.CustomerOrderLinePosition.Value == aPickReceiptLinePackingMaterialDoc.CustomerOrderLinePosition.Value));
        }

        static public bool EqualReturnedPackingMaterialHeadDocReturnedPackingMaterialLineDoc(ReturnedPackingMaterialHeadDoc aReturnedPackingMaterialHeadDoc, ReturnedPackingMaterialLineDoc aReturnedPackingMaterialLineDoc)
        {
            return ((aReturnedPackingMaterialHeadDoc.Rpmid.Value == aReturnedPackingMaterialLineDoc.Rpmid.Value));
        }

        static public bool EqualReturnReceiptHeadDocReturnReceiptHeadPackingMaterialDoc(ReturnReceiptHeadDoc aReturnReceiptHeadDoc, ReturnReceiptHeadPackingMaterialDoc aReturnReceiptHeadPackingMaterialDoc)
        {
            return ((Convert.ToString(aReturnReceiptHeadDoc.ReturnOrderNumber) == Convert.ToString(aReturnReceiptHeadPackingMaterialDoc.ReturnOrderNumber))
                    && (aReturnReceiptHeadDoc.ReturnOrderSequence.Value == aReturnReceiptHeadPackingMaterialDoc.ReturnOrderSequence.Value)
                    && (aReturnReceiptHeadDoc.ReturnOrderSubSequence.Value == aReturnReceiptHeadPackingMaterialDoc.ReturnOrderSubSequence.Value)
                    && (Convert.ToString(aReturnReceiptHeadDoc.SpontaneousReturn) == Convert.ToString(aReturnReceiptHeadPackingMaterialDoc.SpontaneousReturn)));
        }

        static public bool EqualReturnReceiptHeadDocReturnReceiptLineDoc(ReturnReceiptHeadDoc aReturnReceiptHeadDoc, ReturnReceiptLineDoc aReturnReceiptLineDoc)
        {
            return ((Convert.ToString(aReturnReceiptHeadDoc.ReturnOrderNumber) == Convert.ToString(aReturnReceiptLineDoc.ReturnOrderNumber))
                    && (aReturnReceiptHeadDoc.ReturnOrderSequence.Value == aReturnReceiptLineDoc.ReturnOrderSequence.Value)
                    && (aReturnReceiptHeadDoc.ReturnOrderSubSequence.Value == aReturnReceiptLineDoc.ReturnOrderSubSequence.Value));
        }

        static public bool EqualASNHeadDocASNLoadCarrierDoc(ASNHeadDoc aASNHeadDoc, ASNLoadCarrierDoc aASNLoadCarrierDoc)
        {
            return ((Convert.ToString(aASNHeadDoc.ASNIdentity) == Convert.ToString(aASNLoadCarrierDoc.ASNIdentity))
                    && (aASNHeadDoc.ASNSequenceNumber.Value == aASNLoadCarrierDoc.ASNSequenceNumber.Value));
        }

        static public bool EqualASNHeadDocASNLineDoc(ASNHeadDoc aASNHeadDoc, ASNLineDoc aASNLineDoc)
        {
            return ((Convert.ToString(aASNHeadDoc.ASNIdentity) == Convert.ToString(aASNLineDoc.ASNIdentity))
                    && (aASNHeadDoc.ASNSequenceNumber.Value == aASNLineDoc.ASNSequenceNumber.Value));
        }

        static public bool EqualConfirmationOfReceiptHeadDocConfirmationOfReceiptLoadCarrierDoc(ConfirmationOfReceiptHeadDoc aConfirmationOfReceiptHeadDoc, ConfirmationOfReceiptLoadCarrierDoc aConfirmationOfReceiptLoadCarrierDoc)
        {
            return ((Convert.ToString(aConfirmationOfReceiptHeadDoc.AcknowledgeInboundAsnIdentity) == Convert.ToString(aConfirmationOfReceiptLoadCarrierDoc.AcknowledgeInboundAsnIdentity)));
        }

        static public bool EqualConfirmationOfReceiptHeadDocConfirmationOfReceiptLineDoc(ConfirmationOfReceiptHeadDoc aConfirmationOfReceiptHeadDoc, ConfirmationOfReceiptLineDoc aConfirmationOfReceiptLineDoc)
        {
            return ((Convert.ToString(aConfirmationOfReceiptHeadDoc.AcknowledgeInboundAsnIdentity) == Convert.ToString(aConfirmationOfReceiptLineDoc.AcknowledgeInboundAsnIdentity)));
        }

    }
}
