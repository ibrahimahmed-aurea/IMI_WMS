<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:dataAccess="clr-namespace:Cdc.MetaManager.DataAccess;assembly=Cdc.MetaManager.DataAccess"
  xmlns:domain="clr-namespace:Cdc.MetaManager.DataAccess.Domain;assembly=Cdc.MetaManager.DataAccess"
	xmlns:gs="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
	xmlns:converters="clr-namespace:Cdc.MetaManager.GUI">

  <converters:EdgeRouteToPathConverter x:Key="routeToPathConverter" />

  <SolidColorBrush x:Key="HighlightedVertexBorderBrush" Color="Transparent" />
  <SolidColorBrush x:Key="HighlightedVertexBackgroundBrush" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
  <SolidColorBrush x:Key="HighlightedVertexForegroundBrush" Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" />
  <SolidColorBrush x:Key="SemiHighlightedSourceVertexBorderBrush" Color="Transparent" />
  <SolidColorBrush x:Key="SemiHighlightedSourceVertexBackgroundBrush" Color="#FF1DBA00" />
  <SolidColorBrush x:Key="SemiHighlightedTargetVertexBorderBrush" Color="Transparent" />
  <SolidColorBrush x:Key="SemiHighlightedTargetVertexBackgroundBrush" Color="#FFD6A51C" />
  <SolidColorBrush x:Key="HighlightedEdgeBrush" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
  <SolidColorBrush x:Key="SemiHighlightedInEdgeBrush" Color="#FF1DBA00" />
  <SolidColorBrush x:Key="SemiHighlightedOutEdgeBrush" Color="#FFD6A51C" />

  <DataTemplate DataType="{x:Type dataAccess:IDomainObject}">
    <TextBlock Text="{Binding Path=Id, Mode=OneWay}" />
  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:Dialog}">
    <StackPanel Orientation="Vertical">
      <TextBlock Text="Dialog" FontWeight="Bold" HorizontalAlignment="Center"/>
      <TextBlock Text="{Binding Path=Name, Mode=OneWay}" HorizontalAlignment="Center"/>
    </StackPanel>
  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:Application}">
    <StackPanel Orientation="Vertical">
      <TextBlock Text="Application" FontWeight="Bold" HorizontalAlignment="Center"/>
      <TextBlock Text="{Binding Path=Name, Mode=OneWay}" HorizontalAlignment="Center"/>
    </StackPanel>
  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:UXAction}">
    <StackPanel Orientation="Vertical">
      <TextBlock Text="UXAction" FontWeight="Bold" HorizontalAlignment="Center"/>
      <TextBlock Text="{Binding Path=Name, Mode=OneWay}" HorizontalAlignment="Center"/>
    </StackPanel>
  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:Workflow}">
    <StackPanel Orientation="Vertical">
      <TextBlock Text="Workflow" FontWeight="Bold" HorizontalAlignment="Center"/>
      <TextBlock Text="{Binding Path=Name, Mode=OneWay}" HorizontalAlignment="Center"/>
    </StackPanel>
  </DataTemplate>
  
  <DataTemplate DataType="{x:Type domain:Action}">
    <StackPanel Orientation="Vertical">
      <TextBlock Text="Action" FontWeight="Bold" HorizontalAlignment="Center"/>
      <TextBlock Text="{Binding Path=Name, Mode=OneWay}" HorizontalAlignment="Center"/>
    </StackPanel>
  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:ServiceMethod}">
    <StackPanel Orientation="Vertical">
      <TextBlock Text="ServiceMethod" FontWeight="Bold" HorizontalAlignment="Center"/>
      <TextBlock Text="{Binding Path=Name, Mode=OneWay}" HorizontalAlignment="Center"/>
    </StackPanel>
  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:Service}">
    <StackPanel Orientation="Vertical">
      <TextBlock Text="Service" FontWeight="Bold" HorizontalAlignment="Center"/>
      <TextBlock Text="{Binding Path=Name, Mode=OneWay}" HorizontalAlignment="Center"/>
    </StackPanel>
  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:BusinessEntity}">
    <StackPanel Orientation="Vertical">
      <TextBlock Text="BusinessEntity" FontWeight="Bold" HorizontalAlignment="Center"/>
      <TextBlock Text="{Binding Path=Name, Mode=OneWay}" HorizontalAlignment="Center"/>
    </StackPanel>

  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:Menu}">
    <TextBlock Text="Menu" FontWeight="Bold" HorizontalAlignment="Center"/>
  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:View}">
    <StackPanel Orientation="Vertical">
      <TextBlock Text="View" FontWeight="Bold" HorizontalAlignment="Center"/>
      <TextBlock Text="{Binding Path=Name, Mode=OneWay}" HorizontalAlignment="Center"/>
    </StackPanel>
  </DataTemplate>

  <DataTemplate DataType="{x:Type domain:HintCollection}">
    <TextBlock Text="HintCollection" FontWeight="Bold" HorizontalAlignment="Center"/>
  </DataTemplate>

  <!-- VERTEX CONTROL -->
  <Style TargetType="{x:Type gs:VertexControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type gs:VertexControl}">
          <Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="10,10,10,10"
							Padding="{TemplateBinding Padding}">
            <ContentPresenter Content="{TemplateBinding Vertex}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="gs:GraphElementBehaviour.HighlightTrigger" Value="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"/>
    <Setter Property="Background" Value="#FFE3E3E3"/>
    <Setter Property="BorderThickness" Value="3,3,3,3"/>
    <Setter Property="Padding" Value="10,5,10,5"/>
    <Setter Property="BorderBrush" Value="#FF393939"/>
    <Style.Triggers>
      <Trigger Property="gs:GraphElementBehaviour.IsHighlighted" Value="True">
        <!--
        <Setter Property="BorderBrush" Value="{StaticResource HighlightedVertexBorderBrush}"/>
        -->
        <Setter Property="Background" Value="{StaticResource HighlightedVertexBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource HighlightedVertexForegroundBrush}"/>
      </Trigger>
      <Trigger Property="gs:GraphElementBehaviour.IsSemiHighlighted" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource HighlightedVertexBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource HighlightedVertexBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource HighlightedVertexForegroundBrush}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="gs:GraphElementBehaviour.IsSemiHighlighted" Value="True"/>
          <Condition Property="gs:GraphElementBehaviour.SemiHighlightInfo" Value="Source"/>
        </MultiTrigger.Conditions>
        <Setter Property="BorderBrush" Value="{StaticResource SemiHighlightedSourceVertexBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource SemiHighlightedSourceVertexBackgroundBrush}"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="gs:GraphElementBehaviour.IsSemiHighlighted" Value="True"/>
          <Condition Property="gs:GraphElementBehaviour.SemiHighlightInfo" Value="Target"/>
        </MultiTrigger.Conditions>
        <Setter Property="BorderBrush" Value="{StaticResource SemiHighlightedTargetVertexBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource SemiHighlightedTargetVertexBackgroundBrush}"/>
      </MultiTrigger>
    </Style.Triggers>
  </Style>

  <!-- EDGE CONTROL -->
  <Style TargetType="{x:Type gs:EdgeControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type gs:EdgeControl}">
          <Path Stroke="{TemplateBinding Foreground}"
                StrokeThickness="2"
                MinWidth="1"
                MinHeight="1"
                x:Name="edgePath">
            <Path.Data>
              <PathGeometry>
                <PathGeometry.Figures>
                  <MultiBinding Converter="{StaticResource routeToPathConverter}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Source.(gs:GraphCanvas.X)" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Source.(gs:GraphCanvas.Y)" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Source.ActualWidth" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Source.ActualHeight" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Target.(gs:GraphCanvas.X)" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Target.(gs:GraphCanvas.Y)" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Target.ActualWidth" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Target.ActualHeight" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="RoutePoints" />
                  </MultiBinding>
                </PathGeometry.Figures>
              </PathGeometry>
            </Path.Data>
          </Path>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="gs:GraphElementBehaviour.HighlightTrigger"
            Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
    <Setter Property="MinWidth"
            Value="1" />
    <Setter Property="MinHeight"
            Value="1" />
    <Setter Property="Background"
            Value="Red" />
    <Setter Property="Foreground"
            Value="Silver" />
    <Setter Property="Opacity"
            Value="0.5" />
    <Style.Triggers>
      <Trigger Property="gs:GraphElementBehaviour.IsHighlighted"
               Value="True">
        <Setter Property="Foreground"
                Value="{DynamicResource HighlightedEdgeBrush}" />
      </Trigger>
      <Trigger Property="gs:GraphElementBehaviour.IsSemiHighlighted"
               Value="True">
        <Setter Property="Foreground"
                Value="{DynamicResource HighlightedEdgeBrush}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="gs:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True" />
          <Condition Property="gs:GraphElementBehaviour.SemiHighlightInfo"
                     Value="InEdge" />
        </MultiTrigger.Conditions>
        <Setter Property="Foreground"
                Value="{DynamicResource SemiHighlightedInEdgeBrush}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="gs:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True" />
          <Condition Property="gs:GraphElementBehaviour.SemiHighlightInfo"
                     Value="OutEdge" />
        </MultiTrigger.Conditions>
        <Setter Property="Foreground"
                Value="{DynamicResource SemiHighlightedOutEdgeBrush}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type gs:CompoundVertexControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type gs:CompoundVertexControl}">
          <Border BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Background="{TemplateBinding Background}"
    Padding="10">
            <GroupBox>
              <GroupBox.Header>
                adfajkdsfklad
              </GroupBox.Header>

              <ItemsControl x:Name="PART_InnerCanvas"
                            ItemsSource="{TemplateBinding Vertices}">
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
              </ItemsControl>
            </GroupBox>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Setter Property="gs:GraphElementBehaviour.HighlightTrigger"
            Value="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" />
    <Setter Property="BorderThickness"
            Value="22" />
    <Setter Property="BorderBrush"
            Value="Silver" />
    <Setter Property="Background">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="1,1">
          <GradientStop Color="White"
                        Offset="0" />
          <GradientStop Color="BurlyWood"
                        Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="LayoutMode"
               Value="Automatic">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type gs:CompoundVertexControl}">
              <Border BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Background="{TemplateBinding Background}"
    Padding="10">
                <GroupBox>
                  <GroupBox.Header>
                    wdawew
                  </GroupBox.Header>

                  <ItemsControl x:Name="PART_InnerCanvas"
                                ItemsSource="{TemplateBinding Vertices}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <gs:GraphCanvas Background="White"/>
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                </GroupBox>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="Background">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,1">
              <GradientStop Color="White"
                            Offset="0" />
              <GradientStop Color="Silver"
                            Offset="1" />
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="gs:GraphElementBehaviour.IsHighlighted"
               Value="True">
        <Setter Property="BorderBrush"
                Value="Orange" />
        <Setter Property="BorderThickness"
                Value="2" />
      </Trigger>
      <Trigger Property="gs:GraphElementBehaviour.IsSemiHighlighted"
               Value="True">
        <Setter Property="BorderBrush"
                Value="Yellow" />
        <Setter Property="BorderThickness"
                Value="2" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="gs:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True" />
          <Condition Property="gs:GraphElementBehaviour.SemiHighlightInfo"
                     Value="Source" />
        </MultiTrigger.Conditions>
        <Setter Property="BorderBrush"
                Value="Red" />
        <Setter Property="BorderThickness"
                Value="2" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="gs:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True" />
          <Condition Property="gs:GraphElementBehaviour.SemiHighlightInfo"
                     Value="Target" />
        </MultiTrigger.Conditions>
        <Setter Property="BorderBrush"
                Value="Blue" />
        <Setter Property="BorderThickness"
                Value="2" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>