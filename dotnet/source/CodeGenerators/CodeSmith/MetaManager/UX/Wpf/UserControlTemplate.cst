<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="..\..\Library\Core.cst" Inherits="DialogTemplate" Debug="False" Description="Template description here." %>
<%@ Assembly Name="Cdc.MetaManager.DataAccess" %>
<%@ Assembly Name="Cdc.MetaManager.BusinessLogic" %>
<%@ Import Namespace="Cdc.MetaManager.DataAccess" %>
<%@ Import Namespace="Cdc.MetaManager.DataAccess.Domain" %>
<%@ Import Namespace="Cdc.MetaManager.BusinessLogic.Helpers" %>
<%@ Import Namespace="Cdc.MetaManager.DataAccess.Domain.VisualModel" %>
<%@ Register Name="ComponentTemplate" Template="ComponentTemplate.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Property Name="view" Type="Cdc.MetaManager.DataAccess.Domain.View" Default="" Optional="false" Category="" Description="" %>
<%@ Property Name="debugOutput" Type="System.Boolean" Default="" Optional="false" Category="" Description="" OnChanged="" Editor="" EditorBase="" Serializer="" %>
<%
    string localNamespace = GetViewsNamespace(view);
	string viewName = string.Format("{0}View", view.Name);
	string userControlName = string.Format("{0}Uc", viewName);
    string viewClassName = string.Format("{0}.{1}", localNamespace, viewName);
	string hyperLinkClicked = null;
	UXContainer tree = view.VisualTree; 
		
%>
<UserControl
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:xcdg="http://schemas.xceed.com/wpf/xaml/datagrid"
  xmlns:controls="clr-namespace:Imi.Framework.Wpf.Controls;assembly=Imi.Framework.Wpf.Controls"
  xmlns:resources="clr-namespace:Imi.SupplyChain.UX;assembly=Imi.SupplyChain.UX"
  xmlns:workspaces="clr-namespace:Imi.Framework.UX.Wpf.Workspaces;assembly=Imi.Framework.UX.Wpf"
  xmlns:settings="clr-namespace:Imi.Framework.UX.Wpf.BuilderStrategies;assembly=Imi.Framework.UX.Wpf"
  xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
  xmlns:providers="clr-namespace:Imi.SupplyChain.UX.Settings;assembly=Imi.SupplyChain.UX"
<% 
	if(!debugOutput)
	{
%>		
  xmlns:converters="clr-namespace:Imi.Framework.Wpf.Data.Converters;assembly=Imi.Framework.Wpf.Data"
  xmlns:local="clr-namespace:<%= localNamespace %>"  
  x:Class="<%= viewClassName %>"
<%
	}
%>	
  x:Name="<%= viewName %>Uc"
  Width="Auto" 
  Height="Auto"
  Focusable="True"
>
<% 
if(!debugOutput)
{
%>		
  <UserControl.Resources>
	<ResourceDictionary>
<%
	if (view.Type != ViewType.Component)
	{
%>
		<ResourceDictionary.MergedDictionaries>
	        <ResourceDictionary Source="pack://application:,,,/Imi.SupplyChain.UX;component/Resources/generic.xaml"/>
	    </ResourceDictionary.MergedDictionaries>
		<DataTemplate x:Key="DrillDownDataTemplate">
			<controls:HyperLink Content="{Binding Mode=OneWay}" 
								Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xcdg:DataCell}}, Path=FieldName}" 
								ToolTip="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xcdg:DataCell}}, Mode=OneWay, Path=ParentColumn.(ToolTipService.ToolTip)}"/>
		</DataTemplate>
<%
	}
%>
		<converters:StringFormatConverter x:Key="stringFormatConverter"/>
		<converters:InvertNullableBoolConverter x:Key="invertNullableBoolConverter"/>
		<BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
		
	</ResourceDictionary>
  </UserControl.Resources>
<%
	if (view.Type != ViewType.Component)
	{
		hyperLinkClicked = " controls:HyperLink.Clicked=\"HyperLinkClicked\"";
%>
	<UserControl.ContextMenu>
    	<ContextMenu x:Name="contextMenu"/>
    </UserControl.ContextMenu>
<%
	}
%>
    <Grid<%=hyperLinkClicked%>>
<%
	if (view.Type != ViewType.Component)
	{
%>
		<Popup x:Name="balloonPopup" AllowsTransparency="True" StaysOpen="False" Placement="Right" VerticalOffset="-25">
            <ContentControl x:Name="balloonPopupContent" ContentTemplate="{StaticResource LeftBalloonContentTemplate}"/>
        </Popup>
<%
	}
}
else
{
%>	
    <Grid>
<%
}
	
	ComponentTemplate componentTemplate = this.Create<ComponentTemplate>();
	componentTemplate.SetProperty("component", tree);
	componentTemplate.SetProperty("attachedProperty", "");
	componentTemplate.SetProperty("debugOutput", debugOutput);
	componentTemplate.SetProperty("currentScope", null);	
	componentTemplate.Render(this.Response);
%>	
<% 
if(!debugOutput && view.Type != ViewType.Component)
{
	string visibility = "Visible";
	
	if (view.VisualTree is UXSearchPanel)
		visibility = "Collapsed";
		
%>		
		<Grid Visibility="<%=visibility%>">	
            <controls:HyperLink x:Name="GenericDrilldownLink" Margin="10,54,0,0" Visibility="Collapsed"/>
			<ProgressBar Visibility="Hidden" HorizontalAlignment="Center" Margin="0,0,0,0" Style="{StaticResource dotProgressBarStyle}" Width="45" x:Name="progressBar" VerticalAlignment="Center" Height="45"/>
			<StackPanel Visibility="Collapsed" HorizontalAlignment="Center" Width="Auto" x:Name="errorPanel" VerticalAlignment="Center">
				<Label Content="{x:Static resources:StringResources.View_UpdateError}" Background="#006C6C6C" Foreground="#FF1312AD" FontFamily="Segoe UI" FontSize="16" FontWeight="Normal" HorizontalAlignment="Center" VerticalAlignment="Top" Padding="0,5,5,5"/>
				<Button Content="{x:Static resources:StringResources.View_UpdateErrorAdditionalInfo}" HorizontalAlignment="Center" x:Name="errorInfoButton" VerticalAlignment="Top" Click="ErrorInfoButtonClickEventHandler"/>
			</StackPanel>
		</Grid>	
<%
}
%>	
	</Grid>
</UserControl>